--- bzip2-1.0.5.c.redebloated.c	2022-01-23 11:57:31.000000000 -0800
+++ bzip2-1.0.5.c.reduced.c	2021-11-18 09:11:20.000000000 -0800
@@ -230,42 +230,6 @@
 };
 typedef struct zzzz Cell;
 
-Int32 BZ2_rNums[512] = {
-    619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863,
-    491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73,  654, 730, 472,
-    419, 436, 278, 496, 867, 210, 399, 680, 480, 51,  878, 465, 811, 169, 869,
-    675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623,
-    150, 238, 59,  379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727,
-    476, 693, 425, 174, 647, 73,  122, 335, 530, 442, 853, 695, 249, 445, 515,
-    909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819,
-    984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782,
-    382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98,  553, 163, 354, 666,
-    933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224,
-    469, 68,  770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383,
-    461, 404, 758, 839, 887, 715, 67,  618, 276, 204, 918, 873, 777, 604, 560,
-    951, 160, 578, 722, 79,  804, 96,  409, 713, 940, 652, 934, 970, 447, 318,
-    353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93,  354, 99,  820, 908,
-    609, 772, 154, 274, 580, 184, 79,  626, 630, 742, 653, 282, 762, 623, 680,
-    81,  927, 626, 789, 125, 411, 521, 938, 300, 821, 78,  343, 175, 128, 250,
-    170, 774, 972, 275, 999, 639, 495, 78,  352, 126, 857, 956, 358, 619, 580,
-    124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974,
-    944, 375, 748, 52,  600, 747, 642, 182, 862, 81,  344, 805, 988, 739, 511,
-    655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228,
-    433, 837, 553, 268, 926, 240, 102, 654, 459, 51,  686, 754, 806, 760, 493,
-    403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653,
-    978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640,
-    724, 926, 56,  204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679,
-    297, 59,  87,  824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631,
-    212, 174, 643, 304, 329, 343, 97,  430, 751, 497, 314, 983, 374, 822, 928,
-    140, 206, 73,  263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829,
-    82,  855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923,
-    804, 378, 215, 828, 592, 281, 565, 555, 710, 82,  896, 831, 547, 261, 524,
-    462, 293, 465, 502, 56,  661, 821, 976, 991, 658, 869, 905, 758, 745, 193,
-    768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61,  688, 793, 644, 986,
-    403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135,
-    780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857,
-    265, 203, 50,  668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364,
-    936, 638};
 void BZ2_bz__AssertH__fail(int errcode);
 void BZ2_hbAssignCodes(Int32 *code, UChar *length, Int32 minLen, Int32 maxLen,
                        Int32 alphaSize);
@@ -283,7 +247,7 @@
   Int32 i;
   Int32 j;
   Int32 k;
-  Bool tooLong;
+
   Int32 heap[260];
   Int32 weight[516];
   Int32 parent[516];
@@ -471,8 +435,7 @@
           }
         while_break___7: /* CIL Label */;
         }
-      }
-    while_break___0: /* CIL Label */;
+      };
     }
   }
 }
@@ -663,7 +626,7 @@
   Int32 es;
   Int32 N;
   Int32 curr;
-  Int32 zt;
+
   Int32 zn;
   Int32 zvec;
   Int32 zj;
@@ -672,16 +635,10 @@
   Int32 *gLimit;
   Int32 *gBase;
   Int32 *gPerm;
-  UInt32 v;
-  UInt32 v___0;
-  UInt32 v___1;
+
   UInt32 v___2;
   UInt32 v___3;
-  UInt32 v___4;
-  UInt32 v___5;
-  UInt32 v___6;
-  UInt32 v___7;
-  UInt32 v___8;
+
   UInt32 v___9;
   UInt32 v___10;
   UInt32 v___11;
@@ -690,8 +647,7 @@
   UInt32 v___14;
   UInt32 v___15;
   UInt32 v___16;
-  UInt32 v___17;
-  UInt32 v___18;
+
   UInt32 v___19;
   UInt32 v___20;
   UInt32 v___21;
@@ -708,24 +664,14 @@
   UInt32 v___27;
   UInt32 v___28;
   UInt32 v___29;
-  Int32 ii___0;
-  Int32 jj___0;
-  Int32 kk___0;
+
   Int32 pp;
-  Int32 lno;
-  Int32 off;
+
   UInt32 nn;
-  Int32 z;
+
   UInt32 v___30;
   UInt32 v___31;
-  Int32 tmp___0;
-  int tmp___1;
-  int tmp___2;
-  UInt32 v___32;
-  UInt32 v___33;
-  UInt32 v___34;
-  UInt32 v___35;
-  UInt32 v___36;
+
   UInt32 v___37;
   UInt32 v___38;
   UInt32 v___39;
@@ -734,12 +680,10 @@
   {
     strm = s->strm;
 
-    nSelectors = s->save_nSelectors;
     EOB = s->save_EOB;
     groupNo = s->save_groupNo;
     groupPos = s->save_groupPos;
 
-    nblockMAX = s->save_nblockMAX;
     nblock = s->save_nblock;
     es = s->save_es;
     N = s->save_N;
@@ -772,55 +716,28 @@
       }
 
       {
-        while (1) {
-          ;
-          {
 
-            s->bsLive -= 8;
-
-            goto while_break;
-          }
+        ;
 
-          s->bsLive += 8;
           ((s->strm)->next_in)++;
           ((s->strm)->avail_in)--;
         }
-      while_break: /* CIL Label */;
-      }
 
       {
-        while (1) {
-          ;
-          {
-
-            s->bsLive -= 8;
 
-            goto while_break___0;
-          }
+        ;
 
-          s->bsLive += 8;
           ((s->strm)->next_in)++;
           ((s->strm)->avail_in)--;
         }
-      while_break___0: /* CIL Label */;
-      }
 
       {
-        while (1) {
-          ;
-          {
-
-            s->bsLive -= 8;
 
-            goto while_break___1;
-          }
+        ;
 
-          s->bsLive += 8;
           ((s->strm)->next_in)++;
           ((s->strm)->avail_in)--;
         }
-      while_break___1: /* CIL Label */;
-      }
 
       {
         while (1) {
@@ -843,21 +760,12 @@
       }
 
       {
-        if (s->blockSize100k > 57) {
-          retVal = -5;
-          goto save_state_and_return;
-        }
-      }
-
-      {
-        {
 
           s->tt = (UInt32 *)(*(strm->bzalloc))(
               strm->opaque,
               (int)((unsigned long)(s->blockSize100k * 100000) * sizeof(Int32)),
               1);
         }
-      }
     case_14: /* CIL Label */
       s->state = 14;
       {
@@ -884,182 +792,78 @@
       }
 
       {
-        while (1) {
-          ;
-          {
-
-            s->bsLive -= 8;
 
-            goto while_break___4;
-          }
+        ;
 
-          s->bsLive += 8;
           ((s->strm)->next_in)++;
           ((s->strm)->avail_in)--;
         }
-      while_break___4: /* CIL Label */;
-      }
 
       {
-        while (1) {
-          ;
-          {
-
-            s->bsLive -= 8;
 
-            goto while_break___5;
-          }
+        ;
 
-          s->bsLive += 8;
           ((s->strm)->next_in)++;
           ((s->strm)->avail_in)--;
         }
-      while_break___5: /* CIL Label */;
-      }
 
       {
-        while (1) {
-          ;
-          {
 
-            s->bsLive -= 8;
-
-            goto while_break___6;
-          }
+        ;
 
-          s->bsLive += 8;
           ((s->strm)->next_in)++;
           ((s->strm)->avail_in)--;
         }
-      while_break___6: /* CIL Label */;
-      }
 
       {
-        while (1) {
-          ;
-          {
 
-            s->bsLive -= 8;
-
-            goto while_break___7;
-          }
+        ;
 
-          s->bsLive += 8;
           ((s->strm)->next_in)++;
           ((s->strm)->avail_in)--;
         }
-      while_break___7: /* CIL Label */;
-      }
 
       {
-        while (1) {
-          ;
-          {
 
-            s->bsLive -= 8;
-
-            goto while_break___8;
-          }
+        ;
 
-          s->bsLive += 8;
           ((s->strm)->next_in)++;
           ((s->strm)->avail_in)--;
         }
-      while_break___8: /* CIL Label */;
-      }
 
       {
-        while (1) {
+
           ;
-          if (s->bsLive >= 8) {
-            v___9 =
-                (s->bsBuff >> (s->bsLive - 8)) & (unsigned int)((1 << 8) - 1);
-            s->bsLive -= 8;
-            uc = (UChar)v___9;
-            goto while_break___9;
-          }
 
-          s->bsBuff =
-              (s->bsBuff << 8) | (UInt32) * ((UChar *)(s->strm)->next_in);
-          s->bsLive += 8;
           ((s->strm)->next_in)++;
           ((s->strm)->avail_in)--;
         }
-      while_break___9: /* CIL Label */;
-      }
-      s->storedBlockCRC = (s->storedBlockCRC << 8) | (UInt32)uc;
 
       {
-        while (1) {
-          ;
-          if (s->bsLive >= 8) {
-            v___10 =
-                (s->bsBuff >> (s->bsLive - 8)) & (unsigned int)((1 << 8) - 1);
-            s->bsLive -= 8;
-            uc = (UChar)v___10;
-            goto while_break___10;
-          }
 
-          s->bsBuff =
-              (s->bsBuff << 8) | (UInt32) * ((UChar *)(s->strm)->next_in);
-          s->bsLive += 8;
-          ((s->strm)->next_in)++;
-          ((s->strm)->avail_in)--;
-        }
-      while_break___10: /* CIL Label */;
+        ;
+        { s->bsLive -= 8; }
       }
-      s->storedBlockCRC = (s->storedBlockCRC << 8) | (UInt32)uc;
 
       {
-        while (1) {
-          ;
-          if (s->bsLive >= 8) {
-            v___11 =
-                (s->bsBuff >> (s->bsLive - 8)) & (unsigned int)((1 << 8) - 1);
-            s->bsLive -= 8;
-            uc = (UChar)v___11;
-            goto while_break___11;
-          }
 
-          s->bsBuff =
-              (s->bsBuff << 8) | (UInt32) * ((UChar *)(s->strm)->next_in);
-          s->bsLive += 8;
-          ((s->strm)->next_in)++;
-          ((s->strm)->avail_in)--;
-        }
-      while_break___11: /* CIL Label */;
+        ;
+        { s->bsLive -= 8; }
       }
-      s->storedBlockCRC = (s->storedBlockCRC << 8) | (UInt32)uc;
 
       {
-        while (1) {
-          ;
-          if (s->bsLive >= 8) {
-            v___12 =
-                (s->bsBuff >> (s->bsLive - 8)) & (unsigned int)((1 << 8) - 1);
-            s->bsLive -= 8;
-            uc = (UChar)v___12;
-            goto while_break___12;
-          }
 
-          s->bsBuff =
-              (s->bsBuff << 8) | (UInt32) * ((UChar *)(s->strm)->next_in);
-          s->bsLive += 8;
-          ((s->strm)->next_in)++;
-          ((s->strm)->avail_in)--;
-        }
-      while_break___12: /* CIL Label */;
+        ;
+        { s->bsLive -= 8; }
       }
-      s->storedBlockCRC = (s->storedBlockCRC << 8) | (UInt32)uc;
 
       {
         while (1) {
           ;
           if (s->bsLive >= 1) {
-            v___13 =
-                (s->bsBuff >> (s->bsLive - 1)) & (unsigned int)((1 << 1) - 1);
+
             (s->bsLive)--;
-            s->blockRandomised = (Bool)v___13;
+
             goto while_break___13;
           }
 
@@ -1074,23 +878,14 @@
       s->origPtr = 0;
 
       {
-        while (1) {
+
           ;
           {
             v___14 =
                 (s->bsBuff >> (s->bsLive - 8)) & (unsigned int)((1 << 8) - 1);
             s->bsLive -= 8;
             uc = (UChar)v___14;
-            goto while_break___14;
-          }
-
-          s->bsBuff =
-              (s->bsBuff << 8) | (UInt32) * ((UChar *)(s->strm)->next_in);
-          s->bsLive += 8;
-          ((s->strm)->next_in)++;
-          ((s->strm)->avail_in)--;
         }
-      while_break___14: /* CIL Label */;
       }
       s->origPtr = (s->origPtr << 8) | (Int32)uc;
 
@@ -1145,22 +940,10 @@
           }
 
           {
-            while (1) {
-              ;
-              {
-
-                (s->bsLive)--;
-
-                goto while_break___18;
-              }
 
-              s->bsLive += 8;
-              ((s->strm)->next_in)++;
-              ((s->strm)->avail_in)--;
-            }
-          while_break___18: /* CIL Label */;
+            ;
+            { (s->bsLive)--; }
           }
-          {}
 
           i++;
         }
@@ -1224,8 +1007,7 @@
             s->bsLive -= 3;
             nGroups = (Int32)v___19;
           }
-        }
-      while_break___23: /* CIL Label */;
+        };
       }
 
       {
@@ -1283,10 +1065,6 @@
                 goto while_break___26;
               }
               j++;
-              if (j >= nGroups) {
-                retVal = -4;
-                goto save_state_and_return;
-              }
             }
           while_break___26: /* CIL Label */;
           }
@@ -1438,7 +1216,7 @@
             goto while_break___37;
           }
           minLen = 32;
-          maxLen = 0;
+
           i = 0;
           {
             while (1) {
@@ -1465,9 +1243,9 @@
       while_break___37: /* CIL Label */;
       }
       EOB = s->nInUse + 1;
-      nblockMAX = 100000 * s->blockSize100k;
+
       groupNo = -1;
-      groupPos = 0;
+
       i = 0;
       {
         while (1) {
@@ -1529,8 +1307,7 @@
             s->bsLive -= zn;
             zvec = (Int32)v___26;
           }
-        }
-      while_break___42: /* CIL Label */;
+        };
       }
       {
         while (1) {
@@ -1585,7 +1362,8 @@
                   if (nextSym == 0) {
                     es += N;
                   } else {
-                    { es += 2 * N; }
+
+                    es += 2 * N;
                   }
                   N *= 2;
                   if (groupPos == 0) {
@@ -1823,7 +1601,6 @@
 
       s->state_out_len = 0;
 
-      s->calculatedBlockCRC = (UInt32)4294967295L;
       s->state = 2;
 
       {
@@ -1844,8 +1621,6 @@
         s->tPos = *(s->tt + s->origPtr) >> 8;
         s->nblock_used = 0;
         {
-          s->rNToGo = 0;
-          s->rTPos = 0;
 
           s->tPos = *(s->tt + s->tPos);
           s->k0 = (Int32)((UChar)(s->tPos & 255U));
@@ -1858,176 +1633,6 @@
     endhdr_2:
 
       s->state = 42;
-      {
-        while (1) {
-          ;
-          {
-
-            s->bsLive -= 8;
-
-            goto while_break___68;
-          }
-
-          s->bsLive += 8;
-          ((s->strm)->next_in)++;
-          ((s->strm)->avail_in)--;
-        }
-      while_break___68: /* CIL Label */;
-      }
-
-      {
-        while (1) {
-          ;
-          {
-
-            s->bsLive -= 8;
-
-            goto while_break___69;
-          }
-
-          s->bsLive += 8;
-          ((s->strm)->next_in)++;
-          ((s->strm)->avail_in)--;
-        }
-      while_break___69: /* CIL Label */;
-      }
-
-      {
-        while (1) {
-          ;
-          {
-
-            s->bsLive -= 8;
-
-            goto while_break___70;
-          }
-
-          s->bsLive += 8;
-          ((s->strm)->next_in)++;
-          ((s->strm)->avail_in)--;
-        }
-      while_break___70: /* CIL Label */;
-      }
-
-      {
-        while (1) {
-          ;
-          {
-
-            s->bsLive -= 8;
-
-            goto while_break___71;
-          }
-
-          s->bsLive += 8;
-          ((s->strm)->next_in)++;
-          ((s->strm)->avail_in)--;
-        }
-      while_break___71: /* CIL Label */;
-      }
-
-      {
-        while (1) {
-          ;
-          {
-
-            s->bsLive -= 8;
-
-            goto while_break___72;
-          }
-
-          s->bsBuff =
-              (s->bsBuff << 8) | (UInt32) * ((UChar *)(s->strm)->next_in);
-          s->bsLive += 8;
-          ((s->strm)->next_in)++;
-          ((s->strm)->avail_in)--;
-        }
-      while_break___72: /* CIL Label */;
-      }
-
-      {
-        while (1) {
-          ;
-          if (s->bsLive >= 8) {
-            v___37 =
-                (s->bsBuff >> (s->bsLive - 8)) & (unsigned int)((1 << 8) - 1);
-            s->bsLive -= 8;
-            uc = (UChar)v___37;
-            goto while_break___73;
-          }
-
-          s->bsBuff =
-              (s->bsBuff << 8) | (UInt32) * ((UChar *)(s->strm)->next_in);
-          s->bsLive += 8;
-          ((s->strm)->next_in)++;
-          ((s->strm)->avail_in)--;
-        }
-      while_break___73: /* CIL Label */;
-      }
-      s->storedCombinedCRC = (s->storedCombinedCRC << 8) | (UInt32)uc;
-
-      {
-        while (1) {
-          ;
-          if (s->bsLive >= 8) {
-            v___38 =
-                (s->bsBuff >> (s->bsLive - 8)) & (unsigned int)((1 << 8) - 1);
-            s->bsLive -= 8;
-            uc = (UChar)v___38;
-            goto while_break___74;
-          }
-
-          s->bsBuff =
-              (s->bsBuff << 8) | (UInt32) * ((UChar *)(s->strm)->next_in);
-          s->bsLive += 8;
-          ((s->strm)->next_in)++;
-          ((s->strm)->avail_in)--;
-        }
-      while_break___74: /* CIL Label */;
-      }
-      s->storedCombinedCRC = (s->storedCombinedCRC << 8) | (UInt32)uc;
-
-      {
-        while (1) {
-          ;
-          if (s->bsLive >= 8) {
-            v___39 =
-                (s->bsBuff >> (s->bsLive - 8)) & (unsigned int)((1 << 8) - 1);
-            s->bsLive -= 8;
-            uc = (UChar)v___39;
-            goto while_break___75;
-          }
-
-          s->bsBuff =
-              (s->bsBuff << 8) | (UInt32) * ((UChar *)(s->strm)->next_in);
-          s->bsLive += 8;
-          ((s->strm)->next_in)++;
-          ((s->strm)->avail_in)--;
-        }
-      while_break___75: /* CIL Label */;
-      }
-      s->storedCombinedCRC = (s->storedCombinedCRC << 8) | (UInt32)uc;
-
-      {
-        while (1) {
-          ;
-          if (s->bsLive >= 8) {
-            v___40 =
-                (s->bsBuff >> (s->bsLive - 8)) & (unsigned int)((1 << 8) - 1);
-
-            uc = (UChar)v___40;
-            goto while_break___76;
-          }
-
-          s->bsBuff =
-              (s->bsBuff << 8) | (UInt32) * ((UChar *)(s->strm)->next_in);
-          s->bsLive += 8;
-
-          ((s->strm)->avail_in)--;
-        }
-      while_break___76: /* CIL Label */;
-      }
-      s->storedCombinedCRC = (s->storedCombinedCRC << 8) | (UInt32)uc;
 
       retVal = 4;
 
@@ -2037,12 +1642,10 @@
   save_state_and_return:
     s->save_i = i;
 
-    s->save_nSelectors = nSelectors;
     s->save_EOB = EOB;
     s->save_groupNo = groupNo;
     s->save_groupPos = groupPos;
 
-    s->save_nblockMAX = nblockMAX;
     s->save_nblock = nblock;
     s->save_es = es;
     s->save_N = N;
@@ -2155,8 +1758,6 @@
 }
 static void bsFinishWrite(EState *s) {
 
-  {
-
     while (1) {
       ;
       if (!(s->bsLive > 0)) {
@@ -2169,7 +1770,6 @@
     }
   while_break: /* CIL Label */;
   }
-}
 __inline static void bsW(EState *s, Int32 n, UInt32 v) {
 
   {
@@ -2190,18 +1790,12 @@
 }
 static void bsPutUInt32(EState *s, UInt32 u) {
 
-  {
-
     bsW(s, 8, (UInt32)((long)(u >> 24) & 255L));
     bsW(s, 8, (UInt32)((long)(u >> 16) & 255L));
     bsW(s, 8, (UInt32)((long)(u >> 8) & 255L));
     bsW(s, 8, (UInt32)((long)u & 255L));
   }
-}
-static void bsPutUChar(EState *s, UChar c) {
-
-  { bsW(s, 8, (UInt32)c); }
-}
+static void bsPutUChar(EState *s, UChar c) { bsW(s, 8, (UInt32)c); }
 static void makeMaps_e(EState *s) {
   Int32 i;
 
@@ -2353,7 +1947,7 @@
   Int32 j;
   Int32 gs;
   Int32 ge;
-  Int32 totc;
+
   Int32 bt;
   Int32 bc;
   Int32 iter;
@@ -2363,18 +1957,15 @@
   Int32 maxLen;
   Int32 selCtr;
   Int32 nGroups;
-  Int32 nBytes;
+
   UInt16 cost[6];
-  Int32 fave[6];
+
   UInt16 *mtfv;
   Int32 nPart;
   Int32 remF;
   Int32 tFreq;
   Int32 aFreq;
-  register UInt32 cost01;
-  register UInt32 cost23;
-  register UInt32 cost45;
-  register UInt16 icv;
+
   UInt16 icv___0;
   UChar pos[6];
   UChar ll_i;
@@ -2382,25 +1973,13 @@
   UChar tmp;
   Bool inUse16[16];
   Int32 curr;
-  UInt16 mtfv_i;
-  UChar *s_len_sel_selCtr;
-  Int32 *s_code_sel_selCtr;
 
   {
     mtfv = s->mtfv;
 
     alphaSize = s->nInUse + 2;
 
-    {
-
-      {
-
-        {
-
           { nGroups = 6; }
-        }
-      }
-    }
     nPart = nGroups;
     remF = s->nMTF;
     gs = 0;
@@ -2429,17 +2008,12 @@
         while_break___2: /* CIL Label */;
         }
         {
-          {
-
-            {
 
               if ((nGroups - nPart) % 2 == 1) {
                 aFreq -= s->mtfFreq[ge];
                 ge--;
               }
             }
-          }
-        }
 
         v = 0;
         {
@@ -2498,18 +2072,7 @@
           }
         while_break___6: /* CIL Label */;
         }
-        {
-          v = 0;
-          {
-            while (1) {
-              ;
-              { goto while_break___8; }
 
-              v++;
-            }
-          while_break___8: /* CIL Label */;
-          }
-        }
         nSelectors = 0;
 
         gs = 0;
@@ -2537,7 +2100,7 @@
             }
 
             {
-            _L:
+
               i = gs;
               {
                 while (1) {
@@ -2586,7 +2149,7 @@
             nSelectors++;
 
             {
-            _L___0:
+
               i = gs;
               {
                 while (1) {
@@ -2674,7 +2237,7 @@
           goto while_break___20;
         }
         minLen = 32;
-        maxLen = 0;
+
         i = 0;
         {
           while (1) {
@@ -2700,24 +2263,7 @@
     while_break___20: /* CIL Label */;
     }
     i = 0;
-    {
-      while (1) {
-        ;
-        if (!(i < 16)) {
-          goto while_break___22;
-        }
-        inUse16[i] = (Bool)0;
-        j = 0;
-        {
-          { ; }
-        while_break___23: /* CIL Label */;
-        }
-        i++;
-      }
-    while_break___22: /* CIL Label */;
-    }
 
-    i = 0;
     {
       while (1) {
         ;
@@ -2861,7 +2407,7 @@
         }
 
         {
-        _L___1:
+
           i = gs;
           {
             while (1) {
@@ -2982,8 +2528,7 @@
                         unsigned int *nbytes_out_lo32,
                         unsigned int *nbytes_out_hi32);
 char const *BZ2_bzlibVersion(void);
-void BZ2_bz__AssertH__fail(int errcode) { char const *tmp; }
-static int bz_config_ok(void) { return (1); }
+
 static void *default_bzalloc(void *opaque, Int32 items, Int32 size) {
   void *v;
   void *tmp;
@@ -2996,37 +2541,24 @@
     return (v);
   }
 }
-static void default_bzfree(void *opaque, void *addr) {
-
-  { free(addr); }
-}
+static void default_bzfree(void *opaque, void *addr) { free(addr); }
 static void prepare_new_block(EState *s) {
-  Int32 i;
 
-  {
     s->nblock = 0;
     s->numZ = 0;
     s->state_out_pos = 0;
     s->blockCRC = (UInt32)4294967295L;
   }
-}
 static void init_RL(EState *s) {
 
   s->state_in_ch = (UInt32)256;
   s->state_in_len = 0;
 }
-static Bool isempty_RL(EState *s) {
-
-  {
 
-    { return ((Bool)1); }
-  }
-}
 int BZ2_bzCompressInit(bz_stream *strm, int blockSize100k___0,
                        int verbosity___0, int workFactor___0) {
   Int32 n;
   EState *s;
-  int tmp;
 
   {
 
@@ -3052,17 +2584,12 @@
       s->mode = 2;
       s->combinedCRC = (UInt32)0;
       s->blockSize100k = blockSize100k___0;
-      s->nblockMAX = 100000 * blockSize100k___0 - 19;
-      s->verbosity = verbosity___0;
-      s->workFactor = workFactor___0;
+
       s->block = (UChar *)s->arr2;
       s->mtfv = (UInt16 *)s->arr1;
 
       s->ptr = s->arr1;
       strm->state = (void *)s;
-      strm->total_in_lo32 = 0U;
-
-      strm->total_out_lo32 = 0U;
 
       init_RL(s);
       prepare_new_block(s);
@@ -3091,9 +2618,7 @@
     }
 
     {
-      if (s->state_in_len == 1) {
-        goto case_1;
-      }
+
       if (s->state_in_len == 2) {
         goto case_2;
       }
@@ -3101,8 +2626,6 @@
         goto case_3;
       }
       goto switch_default;
-    case_1: /* CIL Label */
-      *(s->block + s->nblock) = ch;
 
     case_2: /* CIL Label */
       *(s->block + s->nblock) = ch;
@@ -3135,19 +2658,14 @@
     }
   }
 }
-static void flush_RL(EState *s) {
-
-  { add_pair_to_block(s); }
-}
+static void flush_RL(EState *s) { add_pair_to_block(s); }
 static Bool copy_input_until_stop(EState *s) {
   Bool progress_in;
   UInt32 zchh;
   UChar ch;
-  UInt32 zchh___0;
-  UChar ch___0;
 
   {
-    progress_in = (Bool)0;
+
     {
 
       {
@@ -3211,24 +2729,22 @@
         *((s->strm)->next_out) = (char)*(s->zbits + s->state_out_pos);
         (s->state_out_pos)++;
         ((s->strm)->avail_out)--;
-      }
-    while_break: /* CIL Label */;
+      };
     }
     return (progress_out);
   }
 }
 static Bool handle_compress(bz_stream *strm) {
   Bool progress_in;
-  Bool progress_out;
+
   EState *s;
   Bool tmp;
   Bool tmp___0;
-  Bool tmp___1;
+
   Bool tmp___2;
   int tmp___3;
 
   {
-    progress_in = (Bool)0;
 
     s = (EState *)strm->state;
     {
@@ -3239,28 +2755,17 @@
             tmp = copy_output_until_stop(s);
           }
 
-          {
-            {
-
-              { tmp___0 = isempty_RL(s); }
               { goto while_break; }
             }
-          }
-        }
         {
           { tmp___2 = copy_input_until_stop(s); }
           if (s->mode != 2) {
-            {
 
               flush_RL(s);
               BZ2_compressBlock(s, (Bool)(s->mode == 4));
               s->state = 1;
-            }
 
           } else {
-          _L :
-
-          {}
           }
         }
       }
@@ -3275,47 +2780,31 @@
   Bool progress;
   EState *s;
   int tmp;
-  Bool tmp___0;
+
   Bool tmp___1;
 
   {
 
     s = (EState *)strm->state;
 
-  preswitch : {
-
-    if (s->mode == 2) {
-      goto case_2;
-    }
-
-    { goto case_4; }
+    {
 
   case_2: /* CIL Label */
     if (action == 0) {
-      {
-        progress = handle_compress(strm);
-      }
-      { tmp = 1; }
 
-      return (tmp);
     } else {
-      { s->mode = 3; }
-    }
 
-  case_4: /* CIL Label */
-    if (action != 2) {
+        s->mode = 3;
     }
 
     { progress = handle_compress(strm); }
 
     {
-      { tmp___1 = isempty_RL(s); }
-      {
+
         if (s->state_out_pos < s->numZ) {
           return (3);
         }
       }
-    }
 
     return (4);
   }
@@ -3337,7 +2826,6 @@
 }
 int BZ2_bzDecompressInit(bz_stream *strm, int verbosity___0, int small) {
   DState *s;
-  int tmp;
 
   {
 
@@ -3350,26 +2838,12 @@
     s->state = 10;
     s->bsLive = 0;
 
-    s->calculatedCombinedCRC = (UInt32)0;
-
-    strm->total_out_lo32 = 0U;
-
-    s->smallDecompress = (Bool)small;
-    s->ll4 = (UChar *)((void *)0);
-    s->ll16 = (UInt16 *)((void *)0);
-    s->tt = (UInt32 *)((void *)0);
-
-    s->verbosity = verbosity___0;
     return (0);
   }
 }
 static Bool unRLE_obuf_to_output_FAST(DState *s) {
   UChar k1;
-  int tmp;
-  int tmp___0;
-  int tmp___1;
-  int tmp___2;
-  int tmp___3;
+
   UInt32 c_calculatedBlockCRC;
   UChar c_state_out_ch;
   Int32 c_state_out_len;
@@ -3380,14 +2854,12 @@
   char *cs_next_out;
   unsigned int cs_avail_out;
   Int32 ro_blockSize100k;
-  UInt32 avail_out_INIT;
+
   Int32 s_save_nblockPP;
   unsigned int total_out_lo32_old;
 
   {
 
-    {
-      c_calculatedBlockCRC = s->calculatedBlockCRC;
       c_state_out_ch = s->state_out_ch;
       c_state_out_len = s->state_out_len;
       c_nblock_used = s->nblock_used;
@@ -3396,7 +2868,6 @@
       c_tPos = s->tPos;
       cs_next_out = (s->strm)->next_out;
       cs_avail_out = (s->strm)->avail_out;
-      ro_blockSize100k = s->blockSize100k;
 
       s_save_nblockPP = s->save_nblock + 1;
       {
@@ -3413,10 +2884,7 @@
                   goto while_break___2;
                 }
                 *((UChar *)cs_next_out) = c_state_out_ch;
-                c_calculatedBlockCRC =
-                    (c_calculatedBlockCRC << 8) ^
-                    BZ2_crc32Table[(c_calculatedBlockCRC >> 24) ^
-                                   (unsigned int)c_state_out_ch];
+
                 c_state_out_len--;
                 cs_next_out++;
                 cs_avail_out--;
@@ -3429,9 +2897,7 @@
               goto return_notr;
             }
             *((UChar *)cs_next_out) = c_state_out_ch;
-            c_calculatedBlockCRC = (c_calculatedBlockCRC << 8) ^
-                                   BZ2_crc32Table[(c_calculatedBlockCRC >> 24) ^
-                                                  (unsigned int)c_state_out_ch];
+
             cs_next_out++;
             cs_avail_out--;
           }
@@ -3491,7 +2957,6 @@
     return_notr:
       total_out_lo32_old = (s->strm)->total_out_lo32;
 
-      s->calculatedBlockCRC = c_calculatedBlockCRC;
       s->state_out_ch = c_state_out_ch;
       s->state_out_len = c_state_out_len;
       s->nblock_used = c_nblock_used;
@@ -3501,40 +2966,8 @@
 
       (s->strm)->avail_out = cs_avail_out;
     }
-    return ((Bool)0);
-  }
-}
-Int32 BZ2_indexIntoF(Int32 indx, Int32 *cftab) {
-  Int32 nb;
-  Int32 na;
-  Int32 mid;
-
-  {
-    nb = 0;
-
-    return (nb);
-  }
 }
-static Bool unRLE_obuf_to_output_SMALL(DState *s) {
-  UChar k1;
-  int tmp;
-  int tmp___0;
-  int tmp___1;
-  int tmp___2;
-  int tmp___3;
-
-  {
-    {
-
-      {
 
-          {return ((Bool)1);
-    }
-    {}
-  };
-}
-}
-}
 int BZ2_bzDecompress(bz_stream *strm) {
   Bool corrupt;
   DState *s;
@@ -3546,7 +2979,7 @@
     s = (DState *)strm->state;
 
     {
-      while (1) {
+      {
         ;
 
         if (s->state == 2) {
@@ -3554,8 +2987,7 @@
           {
             corrupt = unRLE_obuf_to_output_FAST(s);
           }
-          if (corrupt) {
-          }
+
           {
             if (s->state_out_len == 0) {
 
@@ -3590,26 +3022,17 @@
     return (0);
   }
 }
-static Bool myfeof(FILE *f) {
-  Int32 c;
-  Int32 tmp;
 
-  { return ((Bool)0); }
-}
 BZFILE *BZ2_bzWriteOpen(int *bzerror, FILE *f, int blockSize100k___0,
                         int verbosity___0, int workFactor___0) {
   Int32 ret;
   bzFile *bzf;
-  int tmp;
 
   {
 
     { bzf = (bzFile *)malloc(sizeof(bzFile)); }
 
-    { *bzerror = 0; }
-
     bzf->handle = f;
-    bzf->writing = (Bool)1;
 
     {
       ret = BZ2_bzCompressInit(&bzf->strm, blockSize100k___0, verbosity___0,
@@ -3620,12 +3043,9 @@
   }
 }
 void BZ2_bzWrite(int *bzerror, BZFILE *b, void *buf, int len) {
-  Int32 n;
-  Int32 n2;
+
   Int32 ret;
   bzFile *bzf;
-  int tmp;
-  int tmp___0;
 
   {
     bzf = (bzFile *)b;
@@ -3639,9 +3059,6 @@
 
         if (bzf->strm.avail_in == 0U) {
 
-          {
-            bzf->lastErr = 0;
-          }
           return;
         }
       };
@@ -3657,17 +3074,14 @@
   Int32 n2;
   Int32 ret;
   bzFile *bzf;
-  int tmp;
-  int tmp___0;
-  int tmp___1;
-  int tmp___2;
 
   {
     bzf = (bzFile *)b;
 
-    {{
+    {
 
-        while (1){;
+      while (1) {
+        ;
     {
       bzf->strm.avail_out = 5000U;
       bzf->strm.next_out = bzf->buf;
@@ -3675,13 +3089,11 @@
     }
 
     {
-      {
 
         n = (Int32)(5000U - bzf->strm.avail_out);
-        n2 = (Int32)fwrite((void const * /* __restrict  */)((void *)(bzf->buf)),
-                           sizeof(UChar), (size_t)n,
-                           (FILE * /* __restrict  */) bzf->handle);
-      }
+          n2 = (Int32)fwrite(
+              (void const * /* __restrict  */)((void *)(bzf->buf)),
+              sizeof(UChar), (size_t)n, (FILE * /* __restrict  */) bzf->handle);
     }
     if (ret == 4) {
       goto while_break;
@@ -3689,7 +3101,6 @@
   }
 while_break: /* CIL Label */;
 }
-}
 
 {
   BZ2_bzCompressEnd(&bzf->strm);
@@ -3701,7 +3112,6 @@
                        void *unused, int nUnused) {
   bzFile *bzf;
   int ret;
-  int tmp;
 
   {
 
@@ -3711,13 +3121,11 @@
 
     bzf->handle = f;
     bzf->bufN = 0;
-    bzf->writing = (Bool)0;
 
     { ret = BZ2_bzDecompressInit(&bzf->strm, verbosity___0, small); }
 
     bzf->strm.avail_in = (unsigned int)bzf->bufN;
 
-    bzf->initialisedOk = (Bool)1;
     return ((BZFILE *)bzf);
   }
 }
@@ -3735,10 +3143,8 @@
   Int32 n;
   Int32 ret;
   bzFile *bzf;
-  int tmp;
-  int tmp___0;
+
   Bool tmp___1;
-  Bool tmp___2;
 
   {
     bzf = (bzFile *)b;
@@ -3750,10 +3156,7 @@
         ;
 
         if (bzf->strm.avail_in == 0U) {
-          {
-            tmp___1 = myfeof(bzf->handle);
-          }
-          {
+
             {
               n = (Int32)fread((void * /* __restrict  */)(bzf->buf),
                                sizeof(UChar), (size_t)5000,
@@ -3764,23 +3167,13 @@
             bzf->strm.avail_in = (unsigned int)bzf->bufN;
             bzf->strm.next_in = bzf->buf;
           }
-        }
         { ret = BZ2_bzDecompress(&bzf->strm); }
-        if (ret != 0) {
-          if (ret != 4) {
-            {
-              *bzerror = ret;
-            }
-
-            return (0);
-          }
-        }
 
         if (ret == 4) {
           {
             *bzerror = 4;
           }
-          { bzf->lastErr = 4; }
+
           return ((int)((unsigned int)len - bzf->strm.avail_out));
         }
         if (bzf->strm.avail_out == 0U) {
@@ -3791,14 +3184,7 @@
     }
   }
 }
-void BZ2_bzReadGetUnused(int *bzerror, BZFILE *b, void **unused, int *nUnused) {
-  bzFile *bzf;
-
-  {
 
-    { *bzerror = 0; }
-  }
-}
 char const *BZ2_bzlibVersion(void) { return ("1.0.5, 10-Dec-2007"); }
 
 extern __attribute__((__nothrow__)) int(__attribute__((__leaf__))
@@ -3857,26 +3243,22 @@
 extern __attribute__((__nothrow__)) int(__attribute__((__leaf__))
                                         fchmod)(int __fd, __mode_t __mode);
 Int32 verbosity;
-Bool keepInputFiles;
+
 Bool smallMode;
-Bool deleteOutputOnInterrupt;
-Bool forceOverwrite;
-Bool testFailsExist;
-Bool unzFailsExist;
-Bool noisy;
+
 Int32 numFileNames;
-Int32 numFilesProcessed;
+
 Int32 blockSize100k;
 Int32 exitValue;
 Int32 opMode;
 Int32 srcMode;
-Int32 longestFileName;
+
 Char inName[1034];
 Char outName[1034];
-Char tmpName[1034];
+
 Char *progName;
 Char progNameReally[1034];
-FILE *outputHandleJustInCase;
+
 Int32 workFactor;
 static __attribute__((__noreturn__)) void panic(Char const *s);
 static __attribute__((__noreturn__)) void ioError(void);
@@ -3888,61 +3270,7 @@
 static void copyFileName(Char *to, Char *from);
 static void *myMalloc(Int32 n);
 static void applySavedFileAttrToOutputFile(IntNative fd);
-static void uInt64_from_UInt32s(UInt64 *n, UInt32 lo32, UInt32 hi32) {}
-static double uInt64_to_double(UInt64 *n) {
-  Int32 i;
-  double base;
-  double sum;
 
-  {
-
-    {
-      {
-        ;
-
-        sum += base * (double)n->b[i];
-        base *= 256.0;
-        i++;
-      }
-    while_break: /* CIL Label */;
-    }
-    return (sum);
-  }
-}
-static Bool uInt64_isZero(UInt64 *n) {
-  Int32 i;
-
-  { return ((Bool)1); }
-}
-static Int32 uInt64_qrm10(UInt64 *n) {
-  UInt32 rem;
-  UInt32 tmp;
-  Int32 i;
-
-  {
-
-    {
-      {
-        ;
-
-        tmp = rem * 256U + (UInt32)n->b[i];
-
-        rem = tmp % 10U;
-        i--;
-      }
-    while_break: /* CIL Label */;
-    }
-    return ((Int32)rem);
-  }
-}
-static void uInt64_toAscii(char *outbuf, UInt64 *n) {
-  Int32 i;
-  Int32 q;
-  UChar buf[32];
-  Int32 nBuf;
-  UInt64 n_copy;
-  Bool tmp;
-}
 static Bool myfeof___0(FILE *f) {
   Int32 c;
   Int32 tmp;
@@ -3968,22 +3296,9 @@
   UInt32 nbytes_out_lo32;
   UInt32 nbytes_out_hi32;
   Int32 bzerr;
-  Int32 bzerr_dummy;
-  Int32 ret;
-  int tmp;
-  int tmp___0;
+
   Bool tmp___1;
   int tmp___2;
-  int tmp___3;
-  Int32 fd;
-  Int32 tmp___4;
-  int tmp___5;
-  Char buf_nin[32];
-  Char buf_nout[32];
-  UInt64 nbytes_in;
-  UInt64 nbytes_out;
-  double nbytes_in_d;
-  double nbytes_out_d;
 
   {
 
@@ -4017,7 +3332,7 @@
     }
 
     return;
-  errhandler : {}
+
     {
 
     errhandler_io :
@@ -4031,34 +3346,17 @@
 static Bool uncompressStream(FILE *zStream, FILE *stream) {
   BZFILE *bzf;
   Int32 bzerr;
-  Int32 bzerr_dummy;
-  Int32 ret;
+
   Int32 nread;
-  Int32 streamNo;
-  Int32 i;
+
   UChar obuf[5000];
   UChar unused[5000];
   Int32 nUnused;
-  void *unusedTmpV;
-  UChar *unusedTmp;
-  int tmp;
-  int tmp___0;
+
   int tmp___1;
-  Bool tmp___2;
-  int tmp___3;
-  Int32 fd;
-  Int32 tmp___4;
-  int tmp___5;
-  Bool tmp___6;
-  int tmp___7;
-  int tmp___8;
 
   {
-    {
-
-      nUnused = 0;
-      streamNo = 0;
-    }
+    { nUnused = 0; }
 
     {
       {
@@ -4076,9 +3374,6 @@
             }
             { nread = BZ2_bzRead(&bzerr, bzf, (void *)(obuf), 5000); }
 
-            if (bzerr == 0) {
-              goto _L;
-            } else {
               {
 
               _L : {
@@ -4087,7 +3382,6 @@
                        (size_t)nread, (FILE * /* __restrict  */) stream);
               }
               }
-            }
             { tmp___1 = ferror(stream); }
             if (tmp___1) {
               goto errhandler_io;
@@ -4095,63 +3389,32 @@
           }
         while_break___0: /* CIL Label */;
         }
-        if (bzerr != 4) {
-          goto errhandler;
-        }
 
         { BZ2_bzReadClose(&bzerr, bzf); }
+  };
       }
-    while_break: /* CIL Label */;
-    }
-  closeok : {}
 
     return ((Bool)1);
-  trycat:
-    if (forceOverwrite) {
-    }
-  errhandler : { BZ2_bzReadClose(&bzerr_dummy, bzf); }
-    {
 
       {
 
-      }
-
-      {
-        goto case_neg_5;
-      }
-
     errhandler_io :
 
     {
       ioError();
     }
-
-    case_neg_4 : /* CIL Label */
-    {}
-
-    case_neg_5 : /* CIL Label */
-    {}
-
-      { return ((Bool)0); }
     }
   }
 }
 static Bool testStream(FILE *zStream) {
   BZFILE *bzf;
   Int32 bzerr;
-  Int32 bzerr_dummy;
-  Int32 ret;
+
   Int32 nread;
-  Int32 streamNo;
-  Int32 i;
+
   UChar obuf[5000];
   UChar unused[5000];
   Int32 nUnused;
-  void *unusedTmpV;
-  UChar *unusedTmp;
-  int tmp;
-  Bool tmp___0;
-  int tmp___1;
 
   {
     { nUnused = 0; }
@@ -4165,55 +3428,32 @@
         }
 
         {
-          while (1) {
+          {
             ;
-            if (!(bzerr == 0)) {
-              goto while_break___0;
-            }
+
             { nread = BZ2_bzRead(&bzerr, bzf, (void *)(obuf), 5000); }
-          }
-        while_break___0: /* CIL Label */;
-        }
-        if (bzerr != 4) {
-          goto errhandler;
+          };
         }
 
         { BZ2_bzReadClose(&bzerr, bzf); }
-      }
-    while_break: /* CIL Label */;
+      };
     }
 
     return ((Bool)1);
-  errhandler : {}
-
-    {
-
-    switch_default : /* CIL Label */
-    {}
     }
   }
-}
-static void setExit(Int32 v) {
 
-  { exitValue = v; }
-}
-static void cadvise(void) {}
-static void showFileNames(void) {}
 static __attribute__((__noreturn__)) void cleanUpAndFail(Int32 ec);
-static void cleanUpAndFail(Int32 ec) {
-  IntNative retVal;
-  struct stat statBuf;
-}
+
 static __attribute__((__noreturn__)) void panic(Char const *s);
-static void panic(Char const *s) {}
+
 static __attribute__((__noreturn__)) void crcError(void);
-static void crcError(void) {}
+
 static __attribute__((__noreturn__)) void compressedStreamEOF(void);
-static void compressedStreamEOF(void) {}
+
 static __attribute__((__noreturn__)) void ioError(void);
 static void ioError(void) { perror((char const *)progName); }
-static void mySignalCatcher(IntNative n) {}
-static void mySIGSEGVorSIGBUScatcher(IntNative n) {}
+
 static __attribute__((__noreturn__)) void outOfMemory(void);
 static void outOfMemory(void) {
 
@@ -4223,40 +3463,13 @@
           progName);
 }
 static __attribute__((__noreturn__)) void configError(void);
-static void configError(void) {}
-static void pad(Char *s) {
-  Int32 i;
-  size_t tmp;
-  size_t tmp___0;
-}
-static void copyFileName(Char *to, Char *from) {
-  size_t tmp;
-
-  {
 
-    {
-
-      strncpy((char * /* __restrict  */)to,
-              (char const * /* __restrict  */)from, (size_t)1024);
-    }
-  }
-}
-static Bool fileExists(Char *name) {
-  FILE *tmp;
-  FILE *tmp___0;
-  Bool exists;
+static void copyFileName(Char *to, Char *from) {
 
-  {
-    {
-      tmp___0 = fopen((char const * /* __restrict  */)name,
-                      (char const * /* __restrict  */) "rb");
-      tmp = tmp___0;
-      exists = (Bool)((unsigned long)tmp != (unsigned long)((void *)0));
+  strncpy((char * /* __restrict  */)to, (char const * /* __restrict  */)from,
+          (size_t)1024);
     }
 
-    return (exists);
-  }
-}
 static FILE *fopen_output_safely(Char *name, char const *mode) {
   FILE *fp;
   IntNative fh;
@@ -4269,104 +3482,27 @@
     return (fp);
   }
 }
-static Bool notAStandardFile(Char *name) {
-  IntNative i;
-  struct stat statBuf;
-
-  {
-    {
-      i = lstat((char const * /* __restrict  */)name,
-                (struct stat * /* __restrict  */)(&statBuf));
-    }
 
-    { return ((Bool)0); }
-  }
-}
-static Int32 countHardLinks(Char *name) {
-  IntNative i;
-  struct stat statBuf;
-
-  {
-    {
-      i = lstat((char const * /* __restrict  */)name,
-                (struct stat * /* __restrict  */)(&statBuf));
-    }
-
-    return ((Int32)(statBuf.st_nlink - 1UL));
-  }
-}
-static struct stat fileMetaInfo;
-static void saveInputFileMetaInfo(Char *srcName) { IntNative retVal; }
-static void applySavedTimeInfoToOutputFile(Char *dstName) {
-  IntNative retVal;
-  struct utimbuf uTimBuf;
-}
-static void applySavedFileAttrToOutputFile(IntNative fd) { IntNative retVal; }
-static Bool containsDubiousChars(Char *name) { return ((Bool)0); }
-Char const *zSuffix[4] = {".bz2", ".bz", ".tbz2", ".tbz"};
-Char const *unzSuffix[4] = {"", "", ".tar", ".tar"};
-static Bool hasSuffix(Char *s, Char const *suffix) {
-  Int32 ns;
-  Int32 tmp;
-  Int32 nx;
-  Int32 tmp___0;
-  int tmp___1;
-
-  { return ((Bool)0); }
-}
-static Bool mapSuffix(Char *name, Char const *oldSuffix,
-                      Char const *newSuffix) {
-  Bool tmp;
-  size_t tmp___0;
-  size_t tmp___1;
-
-  { return ((Bool)1); }
-}
 static void compress(Char *name) {
   FILE *inStr;
   FILE *outStr;
-  Int32 n;
-  Int32 i;
-  struct stat statBuf;
-  Bool tmp;
-  int *tmp___0;
-  char *tmp___1;
-  Bool tmp___2;
-  Bool tmp___3;
-  Bool tmp___4;
-  Bool tmp___5;
-  char const *tmp___6;
+
   int tmp___7;
   int tmp___8;
-  int tmp___9;
-  int tmp___10;
-  int *tmp___11;
-  char *tmp___12;
-  int *tmp___13;
-  char *tmp___14;
+
   int *tmp___15;
   char *tmp___16;
-  IntNative retVal;
-  IntNative tmp___17;
 
   {
 
     {
 
-      if (srcMode == 3) {
-        goto case_3;
-      }
-
-      goto switch_break;
     case_3 : /* CIL Label */
-    {
-      copyFileName(inName, name);
+          {copyFileName(inName, name);
       copyFileName(outName, name);
       strcat((char * /* __restrict  */)(outName),
              (char const * /* __restrict  */) ".bz2");
     }
-
-    switch_break: /* CIL Label */;
     }
 
     {
@@ -4375,7 +3511,6 @@
         goto case_3___0;
       }
 
-    case_1___0 : /* CIL Label */
     {
       inStr = stdin;
       outStr = stdout;
@@ -4384,13 +3519,11 @@
     }
       if (tmp___8) {
         {
-          fprintf(
-              (FILE * /* __restrict  */) stderr,
+      fprintf((FILE * /* __restrict  */) stderr,
               (char const * /* __restrict  */) "%s: I won\'t write compressed "
                                                "data to a terminal.\n",
               progName);
-          fprintf(
-              (FILE * /* __restrict  */) stderr,
+      fprintf((FILE * /* __restrict  */) stderr,
               (char const
                    * /* __restrict  */) "%s: For help, type: `%s --help\'.\n",
               progName, progName);
@@ -4406,12 +3539,11 @@
       outStr = fopen_output_safely(outName, "wb");
     }
 
-      if ((unsigned long)inStr == (unsigned long)((void *)0)) {
+  {
         {
           tmp___15 = __errno_location();
           tmp___16 = strerror(*tmp___15);
-          fprintf(
-              (FILE * /* __restrict  */) stderr,
+      fprintf((FILE * /* __restrict  */) stderr,
               (char const
                    * /* __restrict  */) "%s: Can\'t open input file %s: %s.\n",
               progName, inName, tmp___16);
@@ -4419,7 +3551,6 @@
 
         return;
       }
-      goto switch_break___0;
 
     switch_break___0: /* CIL Label */;
     }
@@ -4430,95 +3561,46 @@
 static void uncompress(Char *name) {
   FILE *inStr;
   FILE *outStr;
-  Int32 n;
-  Int32 i;
+
   Bool magicNumberOK;
-  Bool cantGuess;
-  struct stat statBuf;
-  Bool tmp;
-  Bool tmp___0;
-  int *tmp___1;
-  char *tmp___2;
-  Bool tmp___3;
-  Bool tmp___4;
-  Bool tmp___5;
-  char const *tmp___6;
+
   int tmp___7;
   int tmp___8;
-  int *tmp___9;
-  char *tmp___10;
-  int *tmp___11;
-  char *tmp___12;
-  int *tmp___13;
-  char *tmp___14;
-  IntNative retVal;
-  IntNative tmp___15;
-  IntNative retVal___0;
-  IntNative tmp___16;
 
   {
 
     {
 
-      case_1___0 : /* CIL Label */
-          {inStr = stdin;
+      inStr = stdin;
     outStr = stdout;
     tmp___7 = fileno(stdin);
     tmp___8 = isatty(tmp___7);
   }
-}
 
 { magicNumberOK = uncompressStream(inStr, outStr); }
-if (magicNumberOK) {
-
-} else {
-  unzFailsExist = (Bool)1;
-}
 }
 }
 static void testf(Char *name) {
   FILE *inStr;
   Bool allOK;
-  struct stat statBuf;
-  Bool tmp;
-  int *tmp___0;
-  char *tmp___1;
-  Bool tmp___2;
-  int tmp___3;
-  int tmp___4;
-  int *tmp___5;
-  char *tmp___6;
 
   {
 
-    {
-
-      case_2 : /* CIL Label */
-          {copyFileName(inName, name);
-  }
-}
+    { copyFileName(inName, name); }
 
 {
 
-  case_2___0 : /* CIL Label */
-
-      {inStr = fopen((char const * /* __restrict  */)(inName),
+      inStr = fopen((char const * /* __restrict  */)(inName),
                      (char const * /* __restrict  */) "rb");
 }
-}
 
 { allOK = testStream(inStr); }
-
-if (!allOK) {
-  testFailsExist = (Bool)1;
-}
 }
 }
 static void license(void) {
   char const *tmp;
 
   {
-    {
 
       tmp = BZ2_bzlibVersion();
       fprintf(
@@ -4542,12 +3624,10 @@
           tmp);
     }
   }
-}
 static void usage(Char *fullProgName) {
   char const *tmp;
 
   {
-    {
 
       tmp = BZ2_bzlibVersion();
       fprintf(
@@ -4588,8 +3668,7 @@
           tmp, fullProgName);
     }
   }
-}
-static void redundant(Char *flag) {}
+
 static void *myMalloc(Int32 n) {
   void *p;
 
@@ -4633,100 +3712,13 @@
       return (tmp);
     } else {
       tmp___3 = root;
-      {
-        while (1) {
-          ;
-          if (!((unsigned long)tmp___3->link != (unsigned long)((void *)0))) {
-            goto while_break;
-          }
-          tmp___3 = tmp___3->link;
-        }
-      while_break: /* CIL Label */;
-      }
+
       { tmp___3->link = snocString(tmp___3->link, name); }
       return (root);
     }
   }
 }
-static void addFlagsFromEnvVar(Cell **argList, Char *varName) {
-  Int32 i;
-  Int32 j;
-  Int32 k;
-  Char *envbase;
-  Char *p;
-  unsigned short const **tmp;
-  unsigned short const **tmp___0;
 
-  {
-    { envbase = getenv((char const *)varName); }
-    if ((unsigned long)envbase != (unsigned long)((void *)0)) {
-      p = envbase;
-      i = 0;
-      {
-        while (1) {
-          ;
-          if (!(!((int)*(p + i) == 0))) {
-            goto while_break;
-          }
-          p += i;
-          i = 0;
-          {
-            while (1) {
-              ;
-              { tmp = __ctype_b_loc(); }
-              if (!((int const) * (*tmp + (Int32) * (p + 0)) & 8192)) {
-                goto while_break___0;
-              }
-              p++;
-            }
-          while_break___0: /* CIL Label */;
-          }
-          {
-            while (1) {
-              ;
-              if ((int)*(p + i) != 0) {
-                {
-                  tmp___0 = __ctype_b_loc();
-                }
-                if ((int const) * (*tmp___0 + (Int32) * (p + i)) & 8192) {
-                  goto while_break___1;
-                }
-              } else {
-                goto while_break___1;
-              }
-              i++;
-            }
-          while_break___1: /* CIL Label */;
-          }
-          if (i > 0) {
-            k = i;
-            if (k > 1024) {
-              k = 1024;
-            }
-            j = 0;
-            {
-              while (1) {
-                ;
-                if (!(j < k)) {
-                  goto while_break___2;
-                }
-                tmpName[j] = *(p + j);
-                j++;
-              }
-            while_break___2: /* CIL Label */;
-            }
-            {
-              tmpName[k] = (Char)0;
-              *argList = snocString(*argList, tmpName);
-            }
-          }
-        }
-      while_break: /* CIL Label */;
-      }
-    }
-    return;
-  }
-}
 IntNative main(IntNative argc, Char **argv) {
   Int32 i;
   Int32 j;
@@ -4734,97 +3726,17 @@
   Cell *argList;
   Cell *aa;
   Bool decode;
-  int tmp___0;
-  size_t tmp___2;
-  char *tmp___3;
-  char *tmp___4;
-  char *tmp___5;
-  char *tmp___6;
-  char *tmp___7;
-  char *tmp___8;
-  int tmp___9;
-  int tmp___10;
-  int tmp___11;
-  int tmp___12;
-  int tmp___13;
-  int tmp___14;
-  int tmp___15;
-  int tmp___16;
-  int tmp___17;
-  int tmp___18;
-  int tmp___19;
-  int tmp___20;
-  int tmp___21;
-  int tmp___22;
-  int tmp___23;
-  int tmp___24;
-  int tmp___25;
-  int tmp___26;
-  int tmp___27;
-  int tmp___28;
-  int tmp___29;
-  int tmp___30;
-  int tmp___31;
+
   Cell *aa2;
 
   {
-    if (sizeof(Int32) != 4UL) {
-
-      configError();
-
-    } else {
-      if (sizeof(UInt32) != 4UL) {
-
-        configError();
-
-      } else {
-        if (sizeof(Int16) != 2UL) {
-
-          configError();
-
-        } else {
-          if (sizeof(UInt16) != 2UL) {
-
-            configError();
-
-          } else {
-            if (sizeof(Char) != 1UL) {
 
-              configError();
-
-            } else {
-              if (sizeof(UChar) != 1UL) {
-
-                configError();
-              }
-            }
-          }
-        }
-      }
-    }
     {
-      outputHandleJustInCase = (FILE *)((void *)0);
-      smallMode = (Bool)0;
-      keepInputFiles = (Bool)0;
-      forceOverwrite = (Bool)0;
-      noisy = (Bool)1;
-      verbosity = 0;
+
       blockSize100k = 9;
-      testFailsExist = (Bool)0;
-      unzFailsExist = (Bool)0;
-      numFileNames = 0;
-      numFilesProcessed = 0;
-      workFactor = 30;
-      deleteOutputOnInterrupt = (Bool)0;
-      exitValue = 0;
-      j = 0;
-      i = j;
-      signal(11, &mySIGSEGVorSIGBUScatcher);
-      signal(7, &mySIGSEGVorSIGBUScatcher);
-      copyFileName(inName, (Char *)"(none)");
-      copyFileName(outName, (Char *)"(none)");
+
       copyFileName(progNameReally, *(argv + 0));
-      progName = &progNameReally[0];
+
       tmp = &progNameReally[0];
     }
     {
@@ -4842,8 +3754,7 @@
     }
     {
       argList = (Cell *)((void *)0);
-      addFlagsFromEnvVar(&argList, (Char *)"BZIP2");
-      addFlagsFromEnvVar(&argList, (Char *)"BZIP");
+
       i = 1;
     }
     {
@@ -4859,9 +3770,7 @@
       }
     while_break___0: /* CIL Label */;
     }
-    longestFileName = 7;
-    numFileNames = 0;
-    decode = (Bool)1;
+
     aa = argList;
     {
       while (1) {
@@ -4869,584 +3778,142 @@
         if (!((unsigned long)aa != (unsigned long)((void *)0))) {
           goto while_break___1;
         }
-        { tmp___0 = strcmp((char const *)aa->name, "--"); }
-        if (tmp___0 == 0) {
-          decode = (Bool)0;
-          goto __Cont;
-        }
+
         if ((int)*(aa->name + 0) == 45) {
-          if (decode) {
+
             goto __Cont;
           }
-        }
-        {
-          numFileNames++;
-          tmp___2 = strlen((char const *)aa->name);
-        }
-        if (longestFileName < (Int32)tmp___2) {
+        { numFileNames++; }
 
-          longestFileName = (Int32)strlen((char const *)aa->name);
-        }
       __Cont:
         aa = aa->link;
       }
     while_break___1: /* CIL Label */;
     }
-    if (numFileNames == 0) {
-      srcMode = 1;
-    } else {
-      srcMode = 3;
-    }
-    {
-      opMode = 1;
-      tmp___3 = strstr((char const *)progName, "unzip");
-    }
-    if ((unsigned long)tmp___3 != (unsigned long)((char *)0)) {
-      opMode = 2;
-    } else {
-      { tmp___4 = strstr((char const *)progName, "UNZIP"); }
-      if ((unsigned long)tmp___4 != (unsigned long)((char *)0)) {
-        opMode = 2;
-      }
-    }
-    { tmp___5 = strstr((char const *)progName, "z2cat"); }
-    if ((unsigned long)tmp___5 != (unsigned long)((char *)0)) {
-      goto _L;
-    } else {
-      { tmp___6 = strstr((char const *)progName, "Z2CAT"); }
-      if ((unsigned long)tmp___6 != (unsigned long)((char *)0)) {
-        goto _L;
-      } else {
-        { tmp___7 = strstr((char const *)progName, "zcat"); }
-        if ((unsigned long)tmp___7 != (unsigned long)((char *)0)) {
-          goto _L;
-        } else {
-          { tmp___8 = strstr((char const *)progName, "ZCAT"); }
-          if ((unsigned long)tmp___8 != (unsigned long)((char *)0)) {
-          _L:
-            opMode = 2;
-            if (numFileNames == 0) {
-              srcMode = 1;
-            } else {
-              srcMode = 2;
-            }
-          }
-        }
-      }
-    }
+
+    { srcMode = 3; }
+    { opMode = 1; }
+
     aa = argList;
     {
-      while (1) {
+      {
         ;
         if (!((unsigned long)aa != (unsigned long)((void *)0))) {
           goto while_break___2;
         }
-        { tmp___9 = strcmp((char const *)aa->name, "--"); }
-        if (tmp___9 == 0) {
-          goto while_break___2;
-        }
+
         if ((int)*(aa->name + 0) == 45) {
-          if ((int)*(aa->name + 1) != 45) {
+
             j = 1;
             {
-              while (1) {
+            {
                 ;
-                if (!((int)*(aa->name + j) != 0)) {
-                  goto while_break___3;
-                }
+
                 {
-                  if ((int)*(aa->name + j) == 99) {
-                    goto case_99;
-                  }
+
                   if ((int)*(aa->name + j) == 100) {
                     goto case_100;
                   }
-                  if ((int)*(aa->name + j) == 122) {
-                    goto case_122;
-                  }
-                  if ((int)*(aa->name + j) == 102) {
-                    goto case_102;
-                  }
+
                   if ((int)*(aa->name + j) == 116) {
                     goto case_116;
                   }
-                  if ((int)*(aa->name + j) == 107) {
-                    goto case_107;
-                  }
-                  if ((int)*(aa->name + j) == 115) {
-                    goto case_115;
-                  }
-                  if ((int)*(aa->name + j) == 113) {
-                    goto case_113;
-                  }
-                  if ((int)*(aa->name + j) == 49) {
-                    goto case_49;
-                  }
-                  if ((int)*(aa->name + j) == 50) {
-                    goto case_50;
-                  }
-                  if ((int)*(aa->name + j) == 51) {
-                    goto case_51;
-                  }
-                  if ((int)*(aa->name + j) == 52) {
-                    goto case_52;
-                  }
-                  if ((int)*(aa->name + j) == 53) {
-                    goto case_53;
-                  }
-                  if ((int)*(aa->name + j) == 54) {
-                    goto case_54;
-                  }
-                  if ((int)*(aa->name + j) == 55) {
-                    goto case_55;
-                  }
-                  if ((int)*(aa->name + j) == 56) {
-                    goto case_56;
-                  }
-                  if ((int)*(aa->name + j) == 57) {
-                    goto case_57;
-                  }
+
                   if ((int)*(aa->name + j) == 86) {
                     goto case_86;
                   }
                   if ((int)*(aa->name + j) == 76) {
                     goto case_86;
                   }
-                  if ((int)*(aa->name + j) == 118) {
-                    goto case_118;
-                  }
+
                   if ((int)*(aa->name + j) == 104) {
                     goto case_104;
                   }
-                  goto switch_default;
-                case_99: /* CIL Label */
-                  srcMode = 2;
+
                   goto switch_break;
                 case_100: /* CIL Label */
                   opMode = 2;
-                  goto switch_break;
-                case_122: /* CIL Label */
-                  opMode = 1;
-                  goto switch_break;
-                case_102: /* CIL Label */
-                  forceOverwrite = (Bool)1;
+
                   goto switch_break;
                 case_116: /* CIL Label */
                   opMode = 3;
-                  goto switch_break;
-                case_107: /* CIL Label */
-                  keepInputFiles = (Bool)1;
-                  goto switch_break;
-                case_115: /* CIL Label */
-                  smallMode = (Bool)1;
-                  goto switch_break;
-                case_113: /* CIL Label */
-                  noisy = (Bool)0;
-                  goto switch_break;
-                case_49: /* CIL Label */
-                  blockSize100k = 1;
-                  goto switch_break;
-                case_50: /* CIL Label */
-                  blockSize100k = 2;
-                  goto switch_break;
-                case_51: /* CIL Label */
-                  blockSize100k = 3;
-                  goto switch_break;
-                case_52: /* CIL Label */
-                  blockSize100k = 4;
-                  goto switch_break;
-                case_53: /* CIL Label */
-                  blockSize100k = 5;
-                  goto switch_break;
-                case_54: /* CIL Label */
-                  blockSize100k = 6;
-                  goto switch_break;
-                case_55: /* CIL Label */
-                  blockSize100k = 7;
-                  goto switch_break;
-                case_56: /* CIL Label */
-                  blockSize100k = 8;
-                  goto switch_break;
-                case_57: /* CIL Label */
-                  blockSize100k = 9;
-                  goto switch_break;
+
                 case_86 : /* CIL Label */
 
                 {
                   license();
                 }
-                  goto switch_break;
-                case_118: /* CIL Label */
-                  verbosity++;
+
                   goto switch_break;
                 case_104 : /* CIL Label */
                 {
                   usage(progName);
                   exit(0);
                 }
-                  goto switch_break;
-                switch_default : /* CIL Label */
-                {
-                  fprintf(
-                      (FILE * /* __restrict  */) stderr,
-                      (char const * /* __restrict  */) "%s: Bad flag `%s\'\n",
-                      progName, aa->name);
-                  usage(progName);
-                  exit(1);
-                }
-                  goto switch_break;
+
                 switch_break: /* CIL Label */;
                 }
-                j++;
-              }
-            while_break___3: /* CIL Label */;
-            }
+            };
           }
         }
-        aa = aa->link;
       }
     while_break___2: /* CIL Label */;
     }
-    aa = argList;
-    {
-      while (1) {
-        ;
-        if (!((unsigned long)aa != (unsigned long)((void *)0))) {
-          goto while_break___4;
-        }
-        { tmp___10 = strcmp((char const *)aa->name, "--"); }
-        if (tmp___10 == 0) {
-          goto while_break___4;
-        }
-        { tmp___28 = strcmp((char const *)aa->name, "--stdout"); }
-        if (tmp___28 == 0) {
-          srcMode = 2;
-        } else {
-          { tmp___27 = strcmp((char const *)aa->name, "--decompress"); }
-          if (tmp___27 == 0) {
-            opMode = 2;
-          } else {
-            { tmp___26 = strcmp((char const *)aa->name, "--compress"); }
-            if (tmp___26 == 0) {
-              opMode = 1;
-            } else {
-              { tmp___25 = strcmp((char const *)aa->name, "--force"); }
-              if (tmp___25 == 0) {
-                forceOverwrite = (Bool)1;
-              } else {
-                { tmp___24 = strcmp((char const *)aa->name, "--test"); }
-                if (tmp___24 == 0) {
-                  opMode = 3;
-                } else {
-                  { tmp___23 = strcmp((char const *)aa->name, "--keep"); }
-                  if (tmp___23 == 0) {
-                    keepInputFiles = (Bool)1;
-                  } else {
-                    { tmp___22 = strcmp((char const *)aa->name, "--small"); }
-                    if (tmp___22 == 0) {
-                      smallMode = (Bool)1;
-                    } else {
-                      { tmp___21 = strcmp((char const *)aa->name, "--quiet"); }
-                      if (tmp___21 == 0) {
-                        noisy = (Bool)0;
-                      } else {
-                        {
-                          tmp___20 =
-                              strcmp((char const *)aa->name, "--version");
-                        }
-                        if (tmp___20 == 0) {
-
-                          license();
-
-                        } else {
-                          {
-                            tmp___19 =
-                                strcmp((char const *)aa->name, "--license");
-                          }
-                          if (tmp___19 == 0) {
-
-                            license();
 
-                          } else {
                             {
-                              tmp___18 = strcmp((char const *)aa->name,
-                                                "--exponential");
-                            }
-                            if (tmp___18 == 0) {
-                              workFactor = 1;
-                            } else {
-                              {
-                                tmp___17 = strcmp((char const *)aa->name,
-                                                  "--repetitive-best");
-                              }
-                              if (tmp___17 == 0) {
-
-                                redundant(aa->name);
-
-                              } else {
-                                {
-                                  tmp___16 = strcmp((char const *)aa->name,
-                                                    "--repetitive-fast");
-                                }
-                                if (tmp___16 == 0) {
-
-                                  redundant(aa->name);
-
-                                } else {
-                                  {
-                                    tmp___15 = strcmp((char const *)aa->name,
-                                                      "--fast");
-                                  }
-                                  if (tmp___15 == 0) {
-                                    blockSize100k = 1;
-                                  } else {
-                                    {
-                                      tmp___14 = strcmp((char const *)aa->name,
-                                                        "--best");
-                                    }
-                                    if (tmp___14 == 0) {
-                                      blockSize100k = 9;
-                                    } else {
-                                      {
-                                        tmp___13 =
-                                            strcmp((char const *)aa->name,
-                                                   "--verbose");
-                                      }
-                                      if (tmp___13 == 0) {
-                                        verbosity++;
-                                      } else {
-                                        {
-                                          tmp___12 = strcmp(
-                                              (char const *)aa->name, "--help");
-                                        }
-                                        if (tmp___12 == 0) {
-
-                                          usage(progName);
-                                          exit(0);
-
-                                        } else {
-                                          {
-                                            tmp___11 =
-                                                strncmp((char const *)aa->name,
-                                                        "--", (size_t)2);
-                                          }
-                                          if (tmp___11 == 0) {
-
-                                            fprintf(
-                                                (FILE * /* __restrict  */)
-                                                    stderr,
-                                                (char const
-                                                     * /* __restrict  */) "%s"
-                                                                          ": "
-                                                                          "Ba"
-                                                                          "d "
-                                                                          "fl"
-                                                                          "ag"
-                                                                          " `"
-                                                                          "%s"
-                                                                          "\'"
-                                                                          "\n",
-                                                progName, aa->name);
-                                            usage(progName);
-                                            exit(1);
-                                          }
-                                        }
-                                      }
-                                    }
-                                  }
-                                }
-                              }
-                            }
-                          }
-                        }
-                      }
-                    }
-                  }
-                }
-              }
-            }
-          }
-        }
-        aa = aa->link;
-      }
-    while_break___4: /* CIL Label */;
-    }
-    if (verbosity > 4) {
-      verbosity = 4;
-    }
-    if (opMode == 1) {
-      if (smallMode) {
-        if (blockSize100k > 2) {
-          blockSize100k = 2;
-        }
-      }
-    }
-    if (opMode == 3) {
-      if (srcMode == 2) {
-
-        fprintf((FILE * /* __restrict  */) stderr,
-                (char const * /* __restrict  */) "%s: -c and -t cannot be "
-                                                 "used together.\n",
-                progName);
-        exit(1);
-      }
-    }
-    if (srcMode == 2) {
       if (numFileNames == 0) {
         srcMode = 1;
       }
     }
-    if (opMode != 1) {
-      blockSize100k = 0;
-    }
-    if (srcMode == 3) {
 
-      signal(2, &mySignalCatcher);
-      signal(15, &mySignalCatcher);
-      signal(1, &mySignalCatcher);
-    }
     if (opMode == 1) {
-      if (srcMode == 1) {
 
-        compress((Char *)((void *)0));
-
-      } else {
-        decode = (Bool)1;
-        aa = argList;
-        {
           while (1) {
             ;
             if (!((unsigned long)aa != (unsigned long)((void *)0))) {
               goto while_break___5;
             }
-            { tmp___29 = strcmp((char const *)aa->name, "--"); }
-            if (tmp___29 == 0) {
-              decode = (Bool)0;
-              goto __Cont___0;
-            }
-            if ((int)*(aa->name + 0) == 45) {
-              if (decode) {
-                goto __Cont___0;
-              }
-            }
-            {
-              numFilesProcessed++;
-              compress(aa->name);
-            }
-          __Cont___0:
+
+        { compress(aa->name); }
+
             aa = aa->link;
           }
         while_break___5: /* CIL Label */;
-        }
-      }
+
     } else {
       if (opMode == 2) {
-        unzFailsExist = (Bool)0;
-        if (srcMode == 1) {
 
           uncompress((Char *)((void *)0));
 
         } else {
-          decode = (Bool)1;
-          aa = argList;
-          {
-            while (1) {
-              ;
-              if (!((unsigned long)aa != (unsigned long)((void *)0))) {
-                goto while_break___6;
-              }
-              { tmp___30 = strcmp((char const *)aa->name, "--"); }
-              if (tmp___30 == 0) {
-                decode = (Bool)0;
-                goto __Cont___1;
-              }
-              if ((int)*(aa->name + 0) == 45) {
-                if (decode) {
-                  goto __Cont___1;
-                }
-              }
-              {
-                numFilesProcessed++;
-                uncompress(aa->name);
-              }
-            __Cont___1:
-              aa = aa->link;
-            }
-          while_break___6: /* CIL Label */;
-          }
-        }
-        if (unzFailsExist) {
-
-          setExit(2);
-          exit(exitValue);
-        }
-      } else {
-        testFailsExist = (Bool)0;
-        if (srcMode == 1) {
 
-          testf((Char *)((void *)0));
-
-        } else {
-          decode = (Bool)1;
-          aa = argList;
-          {
             while (1) {
               ;
               if (!((unsigned long)aa != (unsigned long)((void *)0))) {
                 goto while_break___7;
               }
-              { tmp___31 = strcmp((char const *)aa->name, "--"); }
-              if (tmp___31 == 0) {
-                decode = (Bool)0;
-                goto __Cont___2;
-              }
+
               if ((int)*(aa->name + 0) == 45) {
-                if (decode) {
+
                   goto __Cont___2;
                 }
-              }
-              {
-                numFilesProcessed++;
-                testf(aa->name);
-              }
+          { testf(aa->name); }
             __Cont___2:
               aa = aa->link;
             }
           while_break___7: /* CIL Label */;
           }
         }
-        if (testFailsExist) {
-          if (noisy) {
-
-            fprintf(
-                (FILE * /* __restrict  */) stderr,
-                (char const
-                     * /* __restrict  */) "\nYou can use the `bzip2recover\' "
-                                          "program to attempt to "
-                                          "recover\ndata from undamaged "
-                                          "sections of corrupted files.\n\n");
-            setExit(2);
-            exit(exitValue);
-          }
-        }
-      }
-    }
     aa = argList;
     {
-      while (1) {
+      {
         ;
         if (!((unsigned long)aa != (unsigned long)((void *)0))) {
           goto while_break___8;
         }
         aa2 = aa->link;
-        if ((unsigned long)aa->name != (unsigned long)((void *)0)) {
-
-          free((void *)aa->name);
-        }
-        {
-          free((void *)aa);
-          aa = aa2;
-        }
+        { free((void *)aa->name); }
+        { free((void *)aa); }
       }
     while_break___8: /* CIL Label */;
     }
@@ -5461,41 +3928,7 @@
   UInt32 ec_tmp;
 
   {
-    if (lo == hi) {
-      return;
-    }
-    if (hi - lo > 3) {
-      i = hi - 4;
-      {
-        while (1) {
-          ;
-          if (!(i >= lo)) {
-            goto while_break;
-          }
-          tmp = (Int32) * (fmap + i);
-          ec_tmp = *(eclass + tmp);
-          j = i + 4;
-          {
-            while (1) {
-              ;
-              if (j <= hi) {
-                if (!(ec_tmp > *(eclass + *(fmap + j)))) {
-                  goto while_break___0;
-                }
-              } else {
-                goto while_break___0;
-              }
-              *(fmap + (j - 4)) = *(fmap + j);
-              j += 4;
-            }
-          while_break___0: /* CIL Label */;
-          }
-          *(fmap + (j - 4)) = (UInt32)tmp;
-          i--;
-        }
-      while_break: /* CIL Label */;
-      }
-    }
+
     i = hi - 1;
     {
       while (1) {
@@ -5526,7 +3959,6 @@
       }
     while_break___1: /* CIL Label */;
     }
-    return;
   }
 }
 static void fallbackQSort3(UInt32 *fmap, UInt32 *eclass, Int32 loSt,
@@ -5546,7 +3978,7 @@
   Int32 stackLo[100];
   Int32 stackHi[100];
   Int32 zztmp;
-  Int32 zztmp___0;
+
   Int32 zztmp___1;
   Int32 yyp1;
   Int32 yyp2;
@@ -5558,7 +3990,7 @@
   Int32 zztmp___3;
 
   {
-    r = (UInt32)0;
+
     sp = 0;
     stackLo[sp] = loSt;
     stackHi[sp] = hiSt;
@@ -5569,10 +4001,7 @@
         if (!(sp > 0)) {
           goto while_break;
         }
-        if (!(sp < 99)) {
 
-          BZ2_bz__AssertH__fail(1004);
-        }
         sp--;
         lo = stackLo[sp];
         hi = stackHi[sp];
@@ -5582,17 +4011,9 @@
           }
           goto while_continue;
         }
-        r = (r * 7621U + 1U) % 32768U;
-        r3 = r % 3U;
-        if (r3 == 0U) {
-          med = *(eclass + *(fmap + lo));
-        } else {
-          if (r3 == 1U) {
-            med = *(eclass + *(fmap + ((lo + hi) >> 1)));
-          } else {
-            med = *(eclass + *(fmap + hi));
-          }
-        }
+
+        { med = *(eclass + *(fmap + lo)); }
+
         ltLo = lo;
         unLo = ltLo;
         gtHi = hi;
@@ -5601,19 +4022,15 @@
           while (1) {
             ;
             {
-              while (1) {
-              while_continue___1: /* CIL Label */;
-                if (!(!(unLo > unHi))) {
-                  goto while_break___1;
-                }
+              {
+                ;
+
                 n = (Int32) * (eclass + *(fmap + unLo)) - (Int32)med;
                 if (n == 0) {
                   zztmp = (Int32) * (fmap + unLo);
                   *(fmap + unLo) = *(fmap + ltLo);
                   *(fmap + ltLo) = (UInt32)zztmp;
                   ltLo++;
-                  unLo++;
-                  goto while_continue___1;
                 }
                 if (n > 0) {
                   goto while_break___1;
@@ -5623,20 +4040,10 @@
             while_break___1: /* CIL Label */;
             }
             {
-              while (1) {
-              while_continue___2: /* CIL Label */;
-                if (!(!(unLo > unHi))) {
-                  goto while_break___2;
-                }
+              {
+
                 n = (Int32) * (eclass + *(fmap + unHi)) - (Int32)med;
-                if (n == 0) {
-                  zztmp___0 = (Int32) * (fmap + unHi);
-                  *(fmap + unHi) = *(fmap + gtHi);
-                  *(fmap + gtHi) = (UInt32)zztmp___0;
-                  gtHi--;
-                  unHi--;
-                  goto while_continue___2;
-                }
+
                 if (n < 0) {
                   goto while_break___2;
                 }
@@ -5650,19 +4057,11 @@
             zztmp___1 = (Int32) * (fmap + unLo);
             *(fmap + unLo) = *(fmap + unHi);
             *(fmap + unHi) = (UInt32)zztmp___1;
-            unLo++;
-            unHi--;
           }
         while_break___0: /* CIL Label */;
         }
-        if (gtHi < ltLo) {
-          goto while_continue;
-        }
-        if (ltLo - lo < unLo - ltLo) {
-          n = ltLo - lo;
-        } else {
-          n = unLo - ltLo;
-        }
+
+        { n = unLo - ltLo; }
         yyp1 = lo;
         yyp2 = unLo - n;
         yyn = n;
@@ -5681,50 +4080,20 @@
           }
         while_break___3: /* CIL Label */;
         }
-        if (hi - gtHi < gtHi - unHi) {
-          m = hi - gtHi;
-        } else {
-          m = gtHi - unHi;
-        }
-        yyp1___0 = unLo;
-        yyp2___0 = (hi - m) + 1;
-        yyn___0 = m;
-        {
-          while (1) {
-            ;
-            if (!(yyn___0 > 0)) {
-              goto while_break___4;
-            }
-            zztmp___3 = (Int32) * (fmap + yyp1___0);
-            *(fmap + yyp1___0) = *(fmap + yyp2___0);
-            *(fmap + yyp2___0) = (UInt32)zztmp___3;
-            yyp1___0++;
-            yyp2___0++;
-            yyn___0--;
-          }
-        while_break___4: /* CIL Label */;
-        }
+
         n = ((lo + unLo) - ltLo) - 1;
         m = (hi - (gtHi - unHi)) + 1;
-        if (n - lo > hi - m) {
-          stackLo[sp] = lo;
+        {
+
           stackHi[sp] = n;
           sp++;
           stackLo[sp] = m;
           stackHi[sp] = hi;
           sp++;
-        } else {
-          stackLo[sp] = m;
-          stackHi[sp] = hi;
-          sp++;
-          stackLo[sp] = lo;
-          stackHi[sp] = n;
-          sp++;
         }
       }
     while_break: /* CIL Label */;
     }
-    return;
   }
 }
 static void fallbackSort(UInt32 *fmap, UInt32 *eclass, UInt32 *bhtab,
@@ -5745,11 +4114,7 @@
 
   {
     eclass8 = (UChar *)eclass;
-    if (verb >= 4) {
 
-      fprintf((FILE * /* __restrict  */) stderr,
-              (char const * /* __restrict  */) "        bucket sorting ...\n");
-    }
     i = 0;
     {
       while (1) {
@@ -5840,29 +4205,18 @@
     }
     i = 0;
     {
-      while (1) {
+      {
         ;
-        if (!(i < 32)) {
-          goto while_break___6;
-        }
+
         *(bhtab + ((nblock + 2 * i) >> 5)) |=
             (unsigned int)(1 << ((nblock + 2 * i) & 31));
-        *(bhtab + (((nblock + 2 * i) + 1) >> 5)) &=
-            (unsigned int)(~(1 << (((nblock + 2 * i) + 1) & 31)));
-        i++;
-      }
-    while_break___6: /* CIL Label */;
+      };
     }
     H = 1;
     {
       while (1) {
         ;
-        if (verb >= 4) {
 
-          fprintf((FILE * /* __restrict  */) stderr,
-                  (char const * /* __restrict  */) "        depth %6d has ", H);
-        }
-        j = 0;
         i = 0;
         {
           while (1) {
@@ -5888,32 +4242,9 @@
           while (1) {
             ;
             k = r + 1;
+
             {
-              while (1) {
-                ;
-                if (*(bhtab + (k >> 5)) & (unsigned int)(1 << (k & 31))) {
-                  if (!(k & 31)) {
-                    goto while_break___10;
-                  }
-                } else {
-                  goto while_break___10;
-                }
-                k++;
-              }
-            while_break___10: /* CIL Label */;
-            }
-            if (*(bhtab + (k >> 5)) & (unsigned int)(1 << (k & 31))) {
-              {
-                while (1) {
-                  ;
-                  if (!(*(bhtab + (k >> 5)) == 4294967295U)) {
-                    goto while_break___11;
-                  }
-                  k += 32;
-                }
-              while_break___11: /* CIL Label */;
-              }
-              {
+
                 while (1) {
                   ;
                   if (!(*(bhtab + (k >> 5)) & (unsigned int)(1 << (k & 31)))) {
@@ -5923,53 +4254,25 @@
                 }
               while_break___12: /* CIL Label */;
               }
-            }
             l = k - 1;
             if (l >= nblock) {
               goto while_break___9;
             }
+
             {
+
               while (1) {
                 ;
-                if (!(*(bhtab + (k >> 5)) & (unsigned int)(1 << (k & 31)))) {
-                  if (!(k & 31)) {
-                    goto while_break___13;
-                  }
-                } else {
-                  goto while_break___13;
-                }
-                k++;
-              }
-            while_break___13: /* CIL Label */;
-            }
-            if (!(*(bhtab + (k >> 5)) & (unsigned int)(1 << (k & 31)))) {
-              {
-                while (1) {
-                  ;
-                  if (!(*(bhtab + (k >> 5)) == 0U)) {
-                    goto while_break___14;
-                  }
-                  k += 32;
-                }
-              while_break___14: /* CIL Label */;
-              }
-              {
-                while (1) {
-                  ;
-                  if (!(!(*(bhtab + (k >> 5)) &
-                          (unsigned int)(1 << (k & 31))))) {
+                if (!(!(*(bhtab + (k >> 5)) & (unsigned int)(1 << (k & 31))))) {
                     goto while_break___15;
                   }
                   k++;
                 }
               while_break___15: /* CIL Label */;
               }
-            }
             r = k - 1;
-            if (r >= nblock) {
-              goto while_break___9;
-            }
-            if (r > l) {
+
+            {
               {
                 nNotDone += (r - l) + 1;
                 fallbackQSort3(fmap, eclass, l, r);
@@ -5995,16 +4298,8 @@
           }
         while_break___9: /* CIL Label */;
         }
-        if (verb >= 4) {
 
-          fprintf((FILE * /* __restrict  */) stderr,
-                  (char const * /* __restrict  */) "%6d unresolved strings\n",
-                  nNotDone);
-        }
-        H *= 2;
-        if (H > nblock) {
-          goto while_break___7;
-        } else {
+        {
           if (nNotDone == 0) {
             goto while_break___7;
           }
@@ -6012,12 +4307,7 @@
       }
     while_break___7: /* CIL Label */;
     }
-    if (verb >= 4) {
 
-      fprintf((FILE * /* __restrict  */) stderr,
-              (char const
-                   * /* __restrict  */) "        reconstructing block ...\n");
-    }
     j = 0;
     i = 0;
     {
@@ -6027,7 +4317,7 @@
           goto while_break___17;
         }
         {
-          while (1) {
+          {
             ;
             if (!(ftabCopy[j] == 0)) {
               goto while_break___18;
@@ -6042,1027 +4332,9 @@
       }
     while_break___17: /* CIL Label */;
     }
-    if (!(j < 256)) {
-
-      BZ2_bz__AssertH__fail(1005);
-    }
-    return;
-  }
-}
-__inline static Bool mainGtU(UInt32 i1, UInt32 i2, UChar *block,
-                             UInt16 *quadrant, UInt32 nblock, Int32 *budget) {
-  Int32 k;
-  UChar c1;
-  UChar c2;
-  UInt16 s1;
-  UInt16 s2;
-
-  {
-    c1 = *(block + i1);
-    c2 = *(block + i2);
-    if ((int)c1 != (int)c2) {
-      return ((Bool)((int)c1 > (int)c2));
-    }
-    i1++;
-    i2++;
-    c1 = *(block + i1);
-    c2 = *(block + i2);
-    if ((int)c1 != (int)c2) {
-      return ((Bool)((int)c1 > (int)c2));
-    }
-    i1++;
-    i2++;
-    c1 = *(block + i1);
-    c2 = *(block + i2);
-    if ((int)c1 != (int)c2) {
-      return ((Bool)((int)c1 > (int)c2));
-    }
-    i1++;
-    i2++;
-    c1 = *(block + i1);
-    c2 = *(block + i2);
-    if ((int)c1 != (int)c2) {
-      return ((Bool)((int)c1 > (int)c2));
-    }
-    i1++;
-    i2++;
-    c1 = *(block + i1);
-    c2 = *(block + i2);
-    if ((int)c1 != (int)c2) {
-      return ((Bool)((int)c1 > (int)c2));
-    }
-    i1++;
-    i2++;
-    c1 = *(block + i1);
-    c2 = *(block + i2);
-    if ((int)c1 != (int)c2) {
-      return ((Bool)((int)c1 > (int)c2));
-    }
-    i1++;
-    i2++;
-    c1 = *(block + i1);
-    c2 = *(block + i2);
-    if ((int)c1 != (int)c2) {
-      return ((Bool)((int)c1 > (int)c2));
-    }
-    i1++;
-    i2++;
-    c1 = *(block + i1);
-    c2 = *(block + i2);
-    if ((int)c1 != (int)c2) {
-      return ((Bool)((int)c1 > (int)c2));
-    }
-    i1++;
-    i2++;
-    c1 = *(block + i1);
-    c2 = *(block + i2);
-    if ((int)c1 != (int)c2) {
-      return ((Bool)((int)c1 > (int)c2));
-    }
-    i1++;
-    i2++;
-    c1 = *(block + i1);
-    c2 = *(block + i2);
-    if ((int)c1 != (int)c2) {
-      return ((Bool)((int)c1 > (int)c2));
-    }
-    i1++;
-    i2++;
-    c1 = *(block + i1);
-    c2 = *(block + i2);
-    if ((int)c1 != (int)c2) {
-      return ((Bool)((int)c1 > (int)c2));
-    }
-    i1++;
-    i2++;
-    c1 = *(block + i1);
-    c2 = *(block + i2);
-    if ((int)c1 != (int)c2) {
-      return ((Bool)((int)c1 > (int)c2));
-    }
-    i1++;
-    i2++;
-    k = (Int32)(nblock + 8U);
-    {
-      while (1) {
-        ;
-        c1 = *(block + i1);
-        c2 = *(block + i2);
-        if ((int)c1 != (int)c2) {
-          return ((Bool)((int)c1 > (int)c2));
-        }
-        s1 = *(quadrant + i1);
-        s2 = *(quadrant + i2);
-        if ((int)s1 != (int)s2) {
-          return ((Bool)((int)s1 > (int)s2));
-        }
-        i1++;
-        i2++;
-        c1 = *(block + i1);
-        c2 = *(block + i2);
-        if ((int)c1 != (int)c2) {
-          return ((Bool)((int)c1 > (int)c2));
-        }
-        s1 = *(quadrant + i1);
-        s2 = *(quadrant + i2);
-        if ((int)s1 != (int)s2) {
-          return ((Bool)((int)s1 > (int)s2));
-        }
-        i1++;
-        i2++;
-        c1 = *(block + i1);
-        c2 = *(block + i2);
-        if ((int)c1 != (int)c2) {
-          return ((Bool)((int)c1 > (int)c2));
-        }
-        s1 = *(quadrant + i1);
-        s2 = *(quadrant + i2);
-        if ((int)s1 != (int)s2) {
-          return ((Bool)((int)s1 > (int)s2));
-        }
-        i1++;
-        i2++;
-        c1 = *(block + i1);
-        c2 = *(block + i2);
-        if ((int)c1 != (int)c2) {
-          return ((Bool)((int)c1 > (int)c2));
-        }
-        s1 = *(quadrant + i1);
-        s2 = *(quadrant + i2);
-        if ((int)s1 != (int)s2) {
-          return ((Bool)((int)s1 > (int)s2));
-        }
-        i1++;
-        i2++;
-        c1 = *(block + i1);
-        c2 = *(block + i2);
-        if ((int)c1 != (int)c2) {
-          return ((Bool)((int)c1 > (int)c2));
-        }
-        s1 = *(quadrant + i1);
-        s2 = *(quadrant + i2);
-        if ((int)s1 != (int)s2) {
-          return ((Bool)((int)s1 > (int)s2));
-        }
-        i1++;
-        i2++;
-        c1 = *(block + i1);
-        c2 = *(block + i2);
-        if ((int)c1 != (int)c2) {
-          return ((Bool)((int)c1 > (int)c2));
-        }
-        s1 = *(quadrant + i1);
-        s2 = *(quadrant + i2);
-        if ((int)s1 != (int)s2) {
-          return ((Bool)((int)s1 > (int)s2));
-        }
-        i1++;
-        i2++;
-        c1 = *(block + i1);
-        c2 = *(block + i2);
-        if ((int)c1 != (int)c2) {
-          return ((Bool)((int)c1 > (int)c2));
-        }
-        s1 = *(quadrant + i1);
-        s2 = *(quadrant + i2);
-        if ((int)s1 != (int)s2) {
-          return ((Bool)((int)s1 > (int)s2));
-        }
-        i1++;
-        i2++;
-        c1 = *(block + i1);
-        c2 = *(block + i2);
-        if ((int)c1 != (int)c2) {
-          return ((Bool)((int)c1 > (int)c2));
-        }
-        s1 = *(quadrant + i1);
-        s2 = *(quadrant + i2);
-        if ((int)s1 != (int)s2) {
-          return ((Bool)((int)s1 > (int)s2));
-        }
-        i1++;
-        i2++;
-        if (i1 >= nblock) {
-          i1 -= nblock;
-        }
-        if (i2 >= nblock) {
-          i2 -= nblock;
-        }
-        k -= 8;
-        (*budget)--;
-        if (!(k >= 0)) {
-          goto while_break;
-        }
-      }
-    while_break: /* CIL Label */;
-    }
-    return ((Bool)0);
-  }
-}
-static Int32 incs[14] = {1,    4,    13,    40,    121,    364,    1093,
-                         3280, 9841, 29524, 88573, 265720, 797161, 2391484};
-static void mainSimpleSort(UInt32 *ptr, UChar *block, UInt16 *quadrant,
-                           Int32 nblock, Int32 lo, Int32 hi, Int32 d,
-                           Int32 *budget) {
-  Int32 i;
-  Int32 j;
-  Int32 h;
-  Int32 bigN;
-  Int32 hp;
-  UInt32 v;
-  Bool tmp;
-  Bool tmp___0;
-  Bool tmp___1;
-
-  {
-    bigN = (hi - lo) + 1;
-    if (bigN < 2) {
-      return;
-    }
-    hp = 0;
-    {
-      while (1) {
-        ;
-        if (!(incs[hp] < bigN)) {
-          goto while_break;
-        }
-        hp++;
-      }
-    while_break: /* CIL Label */;
-    }
-    hp--;
-    {
-      while (1) {
-        ;
-        if (!(hp >= 0)) {
-          goto while_break___0;
-        }
-        h = incs[hp];
-        i = lo + h;
-        {
-          while (1) {
-            ;
-            if (!(!(i > hi))) {
-              goto while_break___1;
-            }
-            v = *(ptr + i);
-            j = i;
-            {
-              while (1) {
-                ;
-                {
-                  tmp = mainGtU(*(ptr + (j - h)) + (UInt32)d, v + (UInt32)d,
-                                block, quadrant, (UInt32)nblock, budget);
-                }
-                if (!tmp) {
-                  goto while_break___2;
-                }
-                *(ptr + j) = *(ptr + (j - h));
-                j -= h;
-                if (j <= (lo + h) - 1) {
-                  goto while_break___2;
-                }
-              }
-            while_break___2: /* CIL Label */;
-            }
-            *(ptr + j) = v;
-            i++;
-            if (i > hi) {
-              goto while_break___1;
-            }
-            v = *(ptr + i);
-            j = i;
-            {
-              while (1) {
-                ;
-                {
-                  tmp___0 = mainGtU(*(ptr + (j - h)) + (UInt32)d, v + (UInt32)d,
-                                    block, quadrant, (UInt32)nblock, budget);
-                }
-                if (!tmp___0) {
-                  goto while_break___3;
-                }
-                *(ptr + j) = *(ptr + (j - h));
-                j -= h;
-                if (j <= (lo + h) - 1) {
-                  goto while_break___3;
-                }
-              }
-            while_break___3: /* CIL Label */;
-            }
-            *(ptr + j) = v;
-            i++;
-            if (i > hi) {
-              goto while_break___1;
-            }
-            v = *(ptr + i);
-            j = i;
-            {
-              while (1) {
-                ;
-                {
-                  tmp___1 = mainGtU(*(ptr + (j - h)) + (UInt32)d, v + (UInt32)d,
-                                    block, quadrant, (UInt32)nblock, budget);
-                }
-                if (!tmp___1) {
-                  goto while_break___4;
-                }
-                *(ptr + j) = *(ptr + (j - h));
-                j -= h;
-                if (j <= (lo + h) - 1) {
-                  goto while_break___4;
-                }
-              }
-            while_break___4: /* CIL Label */;
-            }
-            *(ptr + j) = v;
-            i++;
-            if (*budget < 0) {
-              return;
-            }
-          }
-        while_break___1: /* CIL Label */;
-        }
-        hp--;
-      }
-    while_break___0: /* CIL Label */;
-    }
-    return;
-  }
-}
-__inline static UChar mmed3(UChar a, UChar b, UChar c) {
-  UChar t;
-
-  {
-    if ((int)a > (int)b) {
-      t = a;
-      a = b;
-      b = t;
-    }
-    if ((int)b > (int)c) {
-      b = c;
-      if ((int)a > (int)b) {
-        b = a;
-      }
-    }
-    return (b);
-  }
-}
-static void mainQSort3(UInt32 *ptr, UChar *block, UInt16 *quadrant,
-                       Int32 nblock, Int32 loSt, Int32 hiSt, Int32 dSt,
-                       Int32 *budget) {
-  Int32 unLo;
-  Int32 unHi;
-  Int32 ltLo;
-  Int32 gtHi;
-  Int32 n;
-  Int32 m;
-  Int32 med;
-  Int32 sp;
-  Int32 lo;
-  Int32 hi;
-  Int32 d;
-  Int32 stackLo[100];
-  Int32 stackHi[100];
-  Int32 stackD[100];
-  Int32 nextLo[3];
-  Int32 nextHi[3];
-  Int32 nextD[3];
-  Int32 zztmp;
-  Int32 zztmp___0;
-  Int32 zztmp___1;
-  Int32 yyp1;
-  Int32 yyp2;
-  Int32 yyn;
-  Int32 zztmp___2;
-  Int32 yyp1___0;
-  Int32 yyp2___0;
-  Int32 yyn___0;
-  Int32 zztmp___3;
-  Int32 tz;
-  Int32 tz___0;
-  Int32 tz___1;
-
-  {
-    sp = 0;
-    stackLo[sp] = loSt;
-    stackHi[sp] = hiSt;
-    stackD[sp] = dSt;
-    sp++;
-    {
-      while (1) {
-      while_continue: /* CIL Label */;
-        if (!(sp > 0)) {
-          goto while_break;
-        }
-        if (!(sp < 98)) {
-
-          BZ2_bz__AssertH__fail(1001);
-        }
-        sp--;
-        lo = stackLo[sp];
-        hi = stackHi[sp];
-        d = stackD[sp];
-        if (hi - lo < 20) {
-          goto _L;
-        } else {
-          if (d > 14) {
-          _L : {
-            mainSimpleSort(ptr, block, quadrant, nblock, lo, hi, d, budget);
-          }
-            if (*budget < 0) {
-              return;
-            }
-            goto while_continue;
-          }
-        }
-        {
-          med =
-              (Int32)mmed3(*(block + (*(ptr + lo) + (UInt32)d)),
-                           *(block + (*(ptr + hi) + (UInt32)d)),
-                           *(block + (*(ptr + ((lo + hi) >> 1)) + (UInt32)d)));
-          ltLo = lo;
-          unLo = ltLo;
-          gtHi = hi;
-          unHi = gtHi;
-        }
-        {
-          while (1) {
-            ;
-            {
-              while (1) {
-              while_continue___1: /* CIL Label */;
-                if (!(!(unLo > unHi))) {
-                  goto while_break___1;
-                }
-                n = (Int32) * (block + (*(ptr + unLo) + (UInt32)d)) - med;
-                if (n == 0) {
-                  zztmp = (Int32) * (ptr + unLo);
-                  *(ptr + unLo) = *(ptr + ltLo);
-                  *(ptr + ltLo) = (UInt32)zztmp;
-                  ltLo++;
-                  unLo++;
-                  goto while_continue___1;
-                }
-                if (n > 0) {
-                  goto while_break___1;
-                }
-                unLo++;
-              }
-            while_break___1: /* CIL Label */;
-            }
-            {
-              while (1) {
-              while_continue___2: /* CIL Label */;
-                if (!(!(unLo > unHi))) {
-                  goto while_break___2;
-                }
-                n = (Int32) * (block + (*(ptr + unHi) + (UInt32)d)) - med;
-                if (n == 0) {
-                  zztmp___0 = (Int32) * (ptr + unHi);
-                  *(ptr + unHi) = *(ptr + gtHi);
-                  *(ptr + gtHi) = (UInt32)zztmp___0;
-                  gtHi--;
-                  unHi--;
-                  goto while_continue___2;
-                }
-                if (n < 0) {
-                  goto while_break___2;
-                }
-                unHi--;
-              }
-            while_break___2: /* CIL Label */;
-            }
-            if (unLo > unHi) {
-              goto while_break___0;
-            }
-            zztmp___1 = (Int32) * (ptr + unLo);
-            *(ptr + unLo) = *(ptr + unHi);
-            *(ptr + unHi) = (UInt32)zztmp___1;
-            unLo++;
-            unHi--;
-          }
-        while_break___0: /* CIL Label */;
-        }
-        if (gtHi < ltLo) {
-          stackLo[sp] = lo;
-          stackHi[sp] = hi;
-          stackD[sp] = d + 1;
-          sp++;
-          goto while_continue;
-        }
-        if (ltLo - lo < unLo - ltLo) {
-          n = ltLo - lo;
-        } else {
-          n = unLo - ltLo;
-        }
-        yyp1 = lo;
-        yyp2 = unLo - n;
-        yyn = n;
-        {
-          while (1) {
-            ;
-            if (!(yyn > 0)) {
-              goto while_break___3;
-            }
-            zztmp___2 = (Int32) * (ptr + yyp1);
-            *(ptr + yyp1) = *(ptr + yyp2);
-            *(ptr + yyp2) = (UInt32)zztmp___2;
-            yyp1++;
-            yyp2++;
-            yyn--;
-          }
-        while_break___3: /* CIL Label */;
-        }
-        if (hi - gtHi < gtHi - unHi) {
-          m = hi - gtHi;
-        } else {
-          m = gtHi - unHi;
-        }
-        yyp1___0 = unLo;
-        yyp2___0 = (hi - m) + 1;
-        yyn___0 = m;
-        {
-          while (1) {
-            ;
-            if (!(yyn___0 > 0)) {
-              goto while_break___4;
-            }
-            zztmp___3 = (Int32) * (ptr + yyp1___0);
-            *(ptr + yyp1___0) = *(ptr + yyp2___0);
-            *(ptr + yyp2___0) = (UInt32)zztmp___3;
-            yyp1___0++;
-            yyp2___0++;
-            yyn___0--;
-          }
-        while_break___4: /* CIL Label */;
-        }
-        n = ((lo + unLo) - ltLo) - 1;
-        m = (hi - (gtHi - unHi)) + 1;
-        nextLo[0] = lo;
-        nextHi[0] = n;
-        nextD[0] = d;
-        nextLo[1] = m;
-        nextHi[1] = hi;
-        nextD[1] = d;
-        nextLo[2] = n + 1;
-        nextHi[2] = m - 1;
-        nextD[2] = d + 1;
-        if (nextHi[0] - nextLo[0] < nextHi[1] - nextLo[1]) {
-          tz = nextLo[0];
-          nextLo[0] = nextLo[1];
-          nextLo[1] = tz;
-          tz = nextHi[0];
-          nextHi[0] = nextHi[1];
-          nextHi[1] = tz;
-          tz = nextD[0];
-          nextD[0] = nextD[1];
-          nextD[1] = tz;
-        }
-        if (nextHi[1] - nextLo[1] < nextHi[2] - nextLo[2]) {
-          tz___0 = nextLo[1];
-          nextLo[1] = nextLo[2];
-          nextLo[2] = tz___0;
-          tz___0 = nextHi[1];
-          nextHi[1] = nextHi[2];
-          nextHi[2] = tz___0;
-          tz___0 = nextD[1];
-          nextD[1] = nextD[2];
-          nextD[2] = tz___0;
-        }
-        if (nextHi[0] - nextLo[0] < nextHi[1] - nextLo[1]) {
-          tz___1 = nextLo[0];
-          nextLo[0] = nextLo[1];
-          nextLo[1] = tz___1;
-          tz___1 = nextHi[0];
-          nextHi[0] = nextHi[1];
-          nextHi[1] = tz___1;
-          tz___1 = nextD[0];
-          nextD[0] = nextD[1];
-          nextD[1] = tz___1;
-        }
-        stackLo[sp] = nextLo[0];
-        stackHi[sp] = nextHi[0];
-        stackD[sp] = nextD[0];
-        sp++;
-        stackLo[sp] = nextLo[1];
-        stackHi[sp] = nextHi[1];
-        stackD[sp] = nextD[1];
-        sp++;
-        stackLo[sp] = nextLo[2];
-        stackHi[sp] = nextHi[2];
-        stackD[sp] = nextD[2];
-        sp++;
-      }
-    while_break: /* CIL Label */;
-    }
-    return;
-  }
-}
-static void mainSort(UInt32 *ptr, UChar *block, UInt16 *quadrant, UInt32 *ftab,
-                     Int32 nblock, Int32 verb, Int32 *budget) {
-  Int32 i;
-  Int32 j;
-  Int32 k;
-  Int32 ss;
-  Int32 sb;
-  Int32 runningOrder[256];
-  Bool bigDone[256];
-  Int32 copyStart[256];
-  Int32 copyEnd[256];
-  UChar c1;
-  Int32 numQSorted;
-  UInt16 s;
-  Int32 vv;
-  Int32 h;
-  Int32 lo;
-  Int32 hi;
-  Int32 tmp;
-  Int32 tmp___0;
-  Int32 bbStart;
-  Int32 bbSize;
-  Int32 shifts;
-  Int32 a2update;
-  UInt16 qVal;
-
-  {
-    if (verb >= 4) {
-
-      fprintf((FILE * /* __restrict  */) stderr,
-              (char const
-                   * /* __restrict  */) "        main sort initialise ...\n");
-    }
-    i = 65536;
-    {
-      while (1) {
-        ;
-        if (!(i >= 0)) {
-          goto while_break;
-        }
-        *(ftab + i) = (UInt32)0;
-        i--;
-      }
-    while_break: /* CIL Label */;
-    }
-    j = (int)*(block + 0) << 8;
-    i = nblock - 1;
-    {
-      while (1) {
-        ;
-        if (!(i >= 3)) {
-          goto while_break___0;
-        }
-        *(quadrant + i) = (UInt16)0;
-        j = (j >> 8) | ((int)((UInt16) * (block + i)) << 8);
-        (*(ftab + j))++;
-        *(quadrant + (i - 1)) = (UInt16)0;
-        j = (j >> 8) | ((int)((UInt16) * (block + (i - 1))) << 8);
-        (*(ftab + j))++;
-        *(quadrant + (i - 2)) = (UInt16)0;
-        j = (j >> 8) | ((int)((UInt16) * (block + (i - 2))) << 8);
-        (*(ftab + j))++;
-        *(quadrant + (i - 3)) = (UInt16)0;
-        j = (j >> 8) | ((int)((UInt16) * (block + (i - 3))) << 8);
-        (*(ftab + j))++;
-        i -= 4;
-      }
-    while_break___0: /* CIL Label */;
-    }
-    {
-      while (1) {
-        ;
-        if (!(i >= 0)) {
-          goto while_break___1;
-        }
-        *(quadrant + i) = (UInt16)0;
-        j = (j >> 8) | ((int)((UInt16) * (block + i)) << 8);
-        (*(ftab + j))++;
-        i--;
-      }
-    while_break___1: /* CIL Label */;
-    }
-    i = 0;
-    {
-      while (1) {
-        ;
-        if (!(i < 34)) {
-          goto while_break___2;
-        }
-        *(block + (nblock + i)) = *(block + i);
-        *(quadrant + (nblock + i)) = (UInt16)0;
-        i++;
-      }
-    while_break___2: /* CIL Label */;
-    }
-    if (verb >= 4) {
-
-      fprintf((FILE * /* __restrict  */) stderr,
-              (char const * /* __restrict  */) "        bucket sorting ...\n");
-    }
-    i = 1;
-    {
-      while (1) {
-        ;
-        if (!(i <= 65536)) {
-          goto while_break___3;
-        }
-        *(ftab + i) += *(ftab + (i - 1));
-        i++;
-      }
-    while_break___3: /* CIL Label */;
-    }
-    s = (UInt16)((int)*(block + 0) << 8);
-    i = nblock - 1;
-    {
-      while (1) {
-        ;
-        if (!(i >= 3)) {
-          goto while_break___4;
-        }
-        s = (UInt16)(((int)s >> 8) | ((int)*(block + i) << 8));
-        j = (Int32)(*(ftab + (int)s) - 1U);
-        *(ftab + (int)s) = (UInt32)j;
-        *(ptr + j) = (UInt32)i;
-        s = (UInt16)(((int)s >> 8) | ((int)*(block + (i - 1)) << 8));
-        j = (Int32)(*(ftab + (int)s) - 1U);
-        *(ftab + (int)s) = (UInt32)j;
-        *(ptr + j) = (UInt32)(i - 1);
-        s = (UInt16)(((int)s >> 8) | ((int)*(block + (i - 2)) << 8));
-        j = (Int32)(*(ftab + (int)s) - 1U);
-        *(ftab + (int)s) = (UInt32)j;
-        *(ptr + j) = (UInt32)(i - 2);
-        s = (UInt16)(((int)s >> 8) | ((int)*(block + (i - 3)) << 8));
-        j = (Int32)(*(ftab + (int)s) - 1U);
-        *(ftab + (int)s) = (UInt32)j;
-        *(ptr + j) = (UInt32)(i - 3);
-        i -= 4;
-      }
-    while_break___4: /* CIL Label */;
-    }
-    {
-      while (1) {
-        ;
-        if (!(i >= 0)) {
-          goto while_break___5;
-        }
-        s = (UInt16)(((int)s >> 8) | ((int)*(block + i) << 8));
-        j = (Int32)(*(ftab + (int)s) - 1U);
-        *(ftab + (int)s) = (UInt32)j;
-        *(ptr + j) = (UInt32)i;
-        i--;
-      }
-    while_break___5: /* CIL Label */;
-    }
-    i = 0;
-    {
-      while (1) {
-        ;
-        if (!(i <= 255)) {
-          goto while_break___6;
-        }
-        bigDone[i] = (Bool)0;
-        runningOrder[i] = i;
-        i++;
-      }
-    while_break___6: /* CIL Label */;
-    }
-    h = 1;
-    {
-      while (1) {
-        ;
-        h = 3 * h + 1;
-        if (!(h <= 256)) {
-          goto while_break___7;
-        }
-      }
-    while_break___7: /* CIL Label */;
-    }
-    {
-      while (1) {
-        ;
-        h /= 3;
-        i = h;
-        {
-          while (1) {
-            ;
-            if (!(i <= 255)) {
-              goto while_break___9;
-            }
-            vv = runningOrder[i];
-            j = i;
-            {
-              while (1) {
-                ;
-                if (!(*(ftab + ((runningOrder[j - h] + 1) << 8)) -
-                          *(ftab + (runningOrder[j - h] << 8)) >
-                      *(ftab + ((vv + 1) << 8)) - *(ftab + (vv << 8)))) {
-                  goto while_break___10;
-                }
-                runningOrder[j] = runningOrder[j - h];
-                j -= h;
-                if (j <= h - 1) {
-                  goto zero;
-                }
-              }
-            while_break___10: /* CIL Label */;
-            }
-          zero:
-            runningOrder[j] = vv;
-            i++;
-          }
-        while_break___9: /* CIL Label */;
-        }
-        if (!(h != 1)) {
-          goto while_break___8;
-        }
-      }
-    while_break___8: /* CIL Label */;
-    }
-    numQSorted = 0;
-    i = 0;
-    {
-      while (1) {
-        ;
-        if (!(i <= 255)) {
-          goto while_break___11;
-        }
-        ss = runningOrder[i];
-        j = 0;
-        {
-          while (1) {
-            ;
-            if (!(j <= 255)) {
-              goto while_break___12;
-            }
-            if (j != ss) {
-              sb = (ss << 8) + j;
-              if (!(*(ftab + sb) & (unsigned int)(1 << 21))) {
-                lo = (Int32)(*(ftab + sb) & (unsigned int)(~(1 << 21)));
-                hi = (Int32)((*(ftab + (sb + 1)) & (unsigned int)(~(1 << 21))) -
-                             1U);
-                if (hi > lo) {
-                  if (verb >= 4) {
-
-                    fprintf(
-                        (FILE * /* __restrict  */) stderr,
-                        (char const * /* __restrict  */) "        qsort [0x%x, "
-                                                         "0x%x]   done %d   "
-                                                         "this %d\n",
-                        ss, j, numQSorted, (hi - lo) + 1);
-                  }
-                  {
-                    mainQSort3(ptr, block, quadrant, nblock, lo, hi, 2, budget);
-                    numQSorted += (hi - lo) + 1;
-                  }
-                  if (*budget < 0) {
-                    return;
-                  }
-                }
-              }
-              *(ftab + sb) |= (unsigned int)(1 << 21);
-            }
-            j++;
-          }
-        while_break___12: /* CIL Label */;
-        }
-        if (!(!bigDone[ss])) {
-
-          BZ2_bz__AssertH__fail(1006);
-        }
-        j = 0;
-        {
-          while (1) {
-            ;
-            if (!(j <= 255)) {
-              goto while_break___13;
-            }
-            copyStart[j] =
-                (Int32)(*(ftab + ((j << 8) + ss)) & (unsigned int)(~(1 << 21)));
-            copyEnd[j] = (Int32)(
-                (*(ftab + (((j << 8) + ss) + 1)) & (unsigned int)(~(1 << 21))) -
-                1U);
-            j++;
-          }
-        while_break___13: /* CIL Label */;
-        }
-        j = (Int32)(*(ftab + (ss << 8)) & (unsigned int)(~(1 << 21)));
-        {
-          while (1) {
-            ;
-            if (!(j < copyStart[ss])) {
-              goto while_break___14;
-            }
-            k = (Int32)(*(ptr + j) - 1U);
-            if (k < 0) {
-              k += nblock;
-            }
-            c1 = *(block + k);
-            if (!bigDone[c1]) {
-              tmp = copyStart[c1];
-              (copyStart[c1])++;
-              *(ptr + tmp) = (UInt32)k;
-            }
-            j++;
-          }
-        while_break___14: /* CIL Label */;
-        }
-        j = (Int32)((*(ftab + ((ss + 1) << 8)) & (unsigned int)(~(1 << 21))) -
-                    1U);
-        {
-          while (1) {
-            ;
-            if (!(j > copyEnd[ss])) {
-              goto while_break___15;
-            }
-            k = (Int32)(*(ptr + j) - 1U);
-            if (k < 0) {
-              k += nblock;
-            }
-            c1 = *(block + k);
-            if (!bigDone[c1]) {
-              tmp___0 = copyEnd[c1];
-              (copyEnd[c1])--;
-              *(ptr + tmp___0) = (UInt32)k;
-            }
-            j--;
-          }
-        while_break___15: /* CIL Label */;
-        }
-        if (!(copyStart[ss] - 1 == copyEnd[ss])) {
-          if (copyStart[ss] == 0) {
-            if (!(copyEnd[ss] == nblock - 1)) {
-
-              BZ2_bz__AssertH__fail(1007);
-            }
-          } else {
-            BZ2_bz__AssertH__fail(1007);
-          }
-        }
-        j = 0;
-        {
-          while (1) {
-            ;
-            if (!(j <= 255)) {
-              goto while_break___16;
-            }
-            *(ftab + ((j << 8) + ss)) |= (unsigned int)(1 << 21);
-            j++;
-          }
-        while_break___16: /* CIL Label */;
-        }
-        bigDone[ss] = (Bool)1;
-        if (i < 255) {
-          bbStart = (Int32)(*(ftab + (ss << 8)) & (unsigned int)(~(1 << 21)));
-          bbSize =
-              (Int32)((*(ftab + ((ss + 1) << 8)) & (unsigned int)(~(1 << 21))) -
-                      (unsigned int)bbStart);
-          shifts = 0;
-          {
-            while (1) {
-              ;
-              if (!(bbSize >> shifts > 65534)) {
-                goto while_break___17;
-              }
-              shifts++;
-            }
-          while_break___17: /* CIL Label */;
-          }
-          j = bbSize - 1;
-          {
-            while (1) {
-              ;
-              if (!(j >= 0)) {
-                goto while_break___18;
-              }
-              a2update = (Int32) * (ptr + (bbStart + j));
-              qVal = (UInt16)(j >> shifts);
-              *(quadrant + a2update) = qVal;
-              if (a2update < 34) {
-                *(quadrant + (a2update + nblock)) = qVal;
-              }
-              j--;
-            }
-          while_break___18: /* CIL Label */;
-          }
-          if (!((bbSize - 1) >> shifts <= 65535)) {
-
-            BZ2_bz__AssertH__fail(1002);
-          }
         }
-        i++;
-      }
-    while_break___11: /* CIL Label */;
     }
-    if (verb >= 4) {
 
-      fprintf((FILE * /* __restrict  */) stderr,
-              (char const * /* __restrict  */) "        %d pointers, %d "
-                                               "sorted, %d scanned\n",
-              nblock, numQSorted, nblock - numQSorted);
-    }
-    return;
-  }
-}
 void BZ2_blockSort(EState *s) {
   UInt32 *ptr;
   UChar *block;
@@ -7070,73 +4342,23 @@
   Int32 nblock;
   Int32 verb;
   Int32 wfact;
-  UInt16 *quadrant;
-  Int32 budget;
-  Int32 budgetInit;
+
   Int32 i;
-  int tmp;
 
   {
     ptr = s->ptr;
-    block = s->block;
+
     ftab = s->ftab;
     nblock = s->nblock;
     verb = s->verbosity;
-    wfact = s->workFactor;
-    if (nblock < 10000) {
-
-      fallbackSort(s->arr1, s->arr2, ftab, nblock, verb);
 
-    } else {
-      i = nblock + 34;
-      if (i & 1) {
-        i++;
-      }
-      quadrant = (UInt16 *)(block + i);
-      if (wfact < 1) {
-        wfact = 1;
-      }
-      if (wfact > 100) {
-        wfact = 100;
-      }
-      {
-        budgetInit = nblock * ((wfact - 1) / 3);
-        budget = budgetInit;
-        mainSort(ptr, block, quadrant, ftab, nblock, verb, &budget);
-      }
-      if (verb >= 3) {
-        if (nblock == 0) {
-          tmp = 1;
-        } else {
-          tmp = nblock;
-        }
-        {
-          fprintf((FILE * /* __restrict  */) stderr,
-                  (char const * /* __restrict  */) "      %d work, %d block, "
-                                                   "ratio %5.2f\n",
-                  budgetInit - budget, nblock,
-                  (double)((float)(budgetInit - budget) / (float)tmp));
-        }
-      }
-      if (budget < 0) {
-        if (verb >= 2) {
-
-          fprintf(
-              (FILE * /* __restrict  */) stderr,
-              (char const * /* __restrict  */) "    too repetitive; using "
-                                               "fallback sorting algorithm\n");
-        }
         { fallbackSort(s->arr1, s->arr2, ftab, nblock, verb); }
-      }
-    }
-    s->origPtr = -1;
+
     i = 0;
     {
       while (1) {
         ;
-        if (!(i < s->nblock)) {
-          goto while_break;
-        }
+
         if (*(ptr + i) == 0U) {
           s->origPtr = i;
           goto while_break;
@@ -7145,10 +4367,5 @@
       }
     while_break: /* CIL Label */;
     }
-    if (!(s->origPtr != -1)) {
-
-      BZ2_bz__AssertH__fail(1003);
-    }
-    return;
   }
 }
