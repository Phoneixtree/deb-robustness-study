typedeflong__time_t;typedeflong__syscall_slong_t;typedef__time_ttime_t;structtimespec__time_ttv_sec;__syscall_slong_ttv_nsec;;typedefunsignedlongsize_t;typedefunsignedlong__dev_t;typedefunsignedint__uid_t;typedefunsignedint__gid_t;typedefunsignedlong__ino_t;typedefunsignedint__mode_t;typedefunsignedlong__nlink_t;typedeflong__off_t;typedeflong__blksize_t;typedeflong__blkcnt_t;typedef__uid_tuid_t;structstat__dev_tst_dev;__ino_tst_ino;__nlink_tst_nlink;__mode_tst_mode;__uid_tst_uid;__gid_tst_gid;int__pad0;__dev_tst_rdev;__off_tst_size;__blksize_tst_blksize;__blkcnt_tst_blocks;structtimespecst_atim;structtimespecst_mtim;structtimespecst_ctim;__syscall_slong_t__glibc_reserved[3];;typedef__ino_tino_t;typedef__dev_tdev_t;structhash_tuningfloatshrink_threshold;floatshrink_factor;floatgrowth_threshold;floatgrowth_factor;_Boolis_n_buckets;;typedefstructhash_tuningHash_tuning;structhash_table;structhash_table;structhash_table;typedefstructhash_tableHash_table;typedefunsignedlonguintmax_t;typedeflong__off64_t;struct_IO_FILE;struct_IO_FILE;struct_IO_FILE;typedefstruct_IO_FILEFILE;typedefvoid_IO_lock_t;struct_IO_markerstruct_IO_marker*_next;struct_IO_FILE*_sbuf;int_pos;;struct_IO_FILEint_flags;char*_IO_read_ptr;char*_IO_read_end;char*_IO_read_base;char*_IO_write_base;char*_IO_write_ptr;char*_IO_write_end;char*_IO_buf_base;char*_IO_buf_end;char*_IO_save_base;char*_IO_backup_base;char*_IO_save_end;struct_IO_marker*_markers;struct_IO_FILE*_chain;int_fileno;int_flags2;__off_t_old_offset;unsignedshort_cur_column;signedchar_vtable_offset;char_shortbuf[1];_IO_lock_t*_lock;__off64_t_offset;void*__pad1;void*__pad2;void*__pad3;void*__pad4;size_t__pad5;int_mode;char_unused2[(15UL*sizeof(int)-4UL*sizeof(void*))-sizeof(size_t)];;typedef__off_toff_t;typedeflong__ssize_t;typedef__ssize_tssize_t;structallocator;structallocator;structallocator;structallocatorvoid*(*allocate)(size_t);void*(*reallocate)(void*,size_t);void(*free)(void*);void(*die)(size_t);;typedeflongptrdiff_t;typedef__builtin_va_list__gnuc_va_list;typedef__gnuc_va_listva_list;enumquoting_styleliteral_quoting_style=0,shell_quoting_style=1,shell_always_quoting_style=2,c_quoting_style=3,c_maybe_quoting_style=4,escape_quoting_style=5,locale_quoting_style=6,clocale_quoting_style=7,custom_quoting_style=8;enumstrtol_errorLONGINT_OK=0,LONGINT_OVERFLOW=1,LONGINT_INVALID_SUFFIX_CHAR=2,LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW=3,LONGINT_INVALID=4;typedefenumstrtol_errorstrtol_error;structoptioncharconst*name;inthas_arg;int*flag;intval;;typedefunsignedintuint32_t;typedefint__pid_t;typedef__pid_tpid_t;typedefintwchar_t;typedefintnl_item;typedefunsignedintwint_t;typedeflong__suseconds_t;structtimeval__time_ttv_sec;__suseconds_ttv_usec;;union__anonunion___value_23unsignedint__wch;char__wchb[4];;struct__anonstruct___mbstate_t_22int__count;union__anonunion___value_23__value;;typedefstruct__anonstruct___mbstate_t_22__mbstate_t;typedef__mbstate_tmbstate_t;structmbcharcharconst*ptr;size_tbytes;_Boolwc_valid;wchar_twc;charbuf[24];;struct__anonstruct___sigset_t_9unsignedlong__val[1024UL/(8UL*sizeof(unsignedlong))];;typedefstruct__anonstruct___sigset_t_9__sigset_t;typedef__sigset_tsigset_t;structtimezoneinttz_minuteswest;inttz_dsttime;;structobstack;structobstack;structobstack;struct_obstack_chunkchar*limit;struct_obstack_chunk*prev;charcontents[4];;union__anonunion_temp_26longtempint;void*tempptr;;structobstacklongchunk_size;struct_obstack_chunk*chunk;char*object_base;char*next_free;char*chunk_limit;union__anonunion_temp_26temp;intalignment_mask;struct_obstack_chunk*(*chunkfun)(void*,long);void(*freefun)(void*,struct_obstack_chunk*);void*extra_arg;unsignedintuse_extra_arg:1;unsignedintmaybe_empty_object:1;unsignedintalloc_failed:1;;structTokenssize_tn_tok;char**tok;size_t*tok_len;structobstacko_data;structobstacko_tok;structobstacko_tok_len;;structrandread_source;structrandread_source;structrandread_source;typedefunsignedlonguint_least64_t;typedefstructtimezone*__restrict__timezone_ptr_t;typedefuint_least64_tisaac_word;structisaac_stateisaac_wordm[1<<8];isaac_worda;isaac_wordb;isaac_wordc;;union__anonunion_data_31isaac_wordw[1<<8];unsignedcharb[(unsignedlong)(1<<8)*sizeof(isaac_word)];;structisaacsize_tbuffered;structisaac_statestate;union__anonunion_data_31data;;union__anonunion_buf_30charc[2UL*((unsignedlong)(1<<8)*sizeof(isaac_word))];structisaacisaac;;structrandread_sourceFILE*source;void(*handler)(voidconst*);voidconst*handler_arg;union__anonunion_buf_30buf;;structquoting_options;structquoting_options;structquoting_options;structquoting_optionsenumquoting_stylestyle;intflags;unsignedintquote_these_too[255UL/(sizeof(int)*8UL)+1UL];charconst*left_quote;charconst*right_quote;;structslotvecsize_tsize;char*val;;structmbuiter_multi_Boolin_shift;mbstate_tstate;_Boolnext_done;structmbcharcur;;typedefstructmbuiter_multimbui_iterator_t;enumnproc_queryNPROC_ALL=0,NPROC_CURRENT=1,NPROC_CURRENT_OVERRIDABLE=2;typedefunsignedlong__cpu_mask;struct__anonstruct_cpu_set_t_24__cpu_mask__bits[1024UL/(8UL*sizeof(__cpu_mask))];;typedefstruct__anonstruct_cpu_set_t_24cpu_set_t;structmd5_ctxuint32_tA;uint32_tB;uint32_tC;uint32_tD;uint32_ttotal[2];uint32_tbuflen;uint32_tbuffer[32];;struct__pthread_internal_liststruct__pthread_internal_list*__prev;struct__pthread_internal_list*__next;;typedefstruct__pthread_internal_list__pthread_list_t;struct__pthread_mutex_sint__lock;unsignedint__count;int__owner;unsignedint__nusers;int__kind;short__spins;short__elision;__pthread_list_t__list;;union__anonunion_pthread_mutex_t_11struct__pthread_mutex_s__data;char__size[40];long__align;;typedefunion__anonunion_pthread_mutex_t_11pthread_mutex_t;union__anonunion_pthread_mutexattr_t_12char__size[4];int__align;;typedefunion__anonunion_pthread_mutexattr_t_12pthread_mutexattr_t;structlconvchar*decimal_point;char*thousands_sep;char*grouping;char*int_curr_symbol;char*currency_symbol;char*mon_decimal_point;char*mon_thousands_sep;char*mon_grouping;char*positive_sign;char*negative_sign;charint_frac_digits;charfrac_digits;charp_cs_precedes;charp_sep_by_space;charn_cs_precedes;charn_sep_by_space;charp_sign_posn;charn_sign_posn;charint_p_cs_precedes;charint_p_sep_by_space;charint_n_cs_precedes;charint_n_sep_by_space;charint_p_sign_posn;charint_n_sign_posn;;structheap;structheap;structheap;structheapvoid**array;size_tcapacity;size_tcount;int(*compare)(voidconst*,voidconst*);;structhash_entryvoid*data;structhash_entry*next;;structhash_tablestructhash_entry*bucket;structhash_entryconst*bucket_limit;size_tn_buckets;size_tn_buckets_used;size_tn_entries;Hash_tuningconst*tuning;size_t(*hasher)(voidconst*,size_t);_Bool(*comparator)(voidconst*,voidconst*);void(*data_freer)(void*);structhash_entry*free_entry_list;;structF_triplechar*name;ino_tst_ino;dev_tst_dev;;typedeflong__clock_t;unionsigvalintsival_int;void*sival_ptr;;typedefunionsigvalsigval_t;typedef__clock_t__sigchld_clock_t;struct__anonstruct__kill_23__pid_tsi_pid;__uid_tsi_uid;;struct__anonstruct__timer_24intsi_tid;intsi_overrun;sigval_tsi_sigval;;struct__anonstruct__rt_25__pid_tsi_pid;__uid_tsi_uid;sigval_tsi_sigval;;struct__anonstruct__sigchld_26__pid_tsi_pid;__uid_tsi_uid;intsi_status;__sigchld_clock_tsi_utime;__sigchld_clock_tsi_stime;;struct__anonstruct__sigfault_27void*si_addr;shortsi_addr_lsb;;struct__anonstruct__sigpoll_28longsi_band;intsi_fd;;struct__anonstruct__sigsys_29void*_call_addr;int_syscall;unsignedint_arch;;union__anonunion__sifields_22int_pad[128UL/sizeof(int)-4UL];struct__anonstruct__kill_23_kill;struct__anonstruct__timer_24_timer;struct__anonstruct__rt_25_rt;struct__anonstruct__sigchld_26_sigchld;struct__anonstruct__sigfault_27_sigfault;struct__anonstruct__sigpoll_28_sigpoll;struct__anonstruct__sigsys_29_sigsys;;struct__anonstruct_siginfo_t_21intsi_signo;intsi_errno;intsi_code;union__anonunion__sifields_22_sifields;;typedefstruct__anonstruct_siginfo_t_21siginfo_t;union__anonunion___sigaction_handler_41void(*sa_handler)(int);void(*sa_sigaction)(int,siginfo_t*,void*);;structsigactionunion__anonunion___sigaction_handler_41__sigaction_handler;__sigset_tsa_mask;intsa_flags;void(*sa_restorer)(void);;enum__anonenum_fadvice_t_19FADVISE_NORMAL=0,FADVISE_SEQUENTIAL=2,FADVISE_NOREUSE=5,FADVISE_DONTNEED=4,FADVISE_WILLNEED=3,FADVISE_RANDOM=1;typedefenum__anonenum_fadvice_t_19fadvice_t;typedefunsignedlong__rlim_t;typedefunsignedlongpthread_t;unionpthread_attr_tchar__size[56];long__align;;typedefunionpthread_attr_tpthread_attr_t;struct__anonstruct___data_7int__lock;unsignedint__futex;unsignedlonglong__total_seq;unsignedlonglong__wakeup_seq;unsignedlonglong__woken_seq;void*__mutex;unsignedint__nwaiters;unsignedint__broadcast_seq;;union__anonunion_pthread_cond_t_6struct__anonstruct___data_7__data;char__size[48];longlong__align;;typedefunion__anonunion_pthread_cond_t_6pthread_cond_t;union__anonunion_pthread_condattr_t_8char__size[4];int__align;;typedefunion__anonunion_pthread_condattr_t_8pthread_condattr_t;typedefvoid(*__sighandler_t)(int);enum__rlimit_resourceRLIMIT_CPU=0,RLIMIT_FSIZE=1,RLIMIT_DATA=2,RLIMIT_STACK=3,RLIMIT_CORE=4,__RLIMIT_RSS=5,RLIMIT_NOFILE=7,__RLIMIT_OFILE=7,RLIMIT_AS=9,__RLIMIT_NPROC=6,__RLIMIT_MEMLOCK=8,__RLIMIT_LOCKS=10,__RLIMIT_SIGPENDING=11,__RLIMIT_MSGQUEUE=12,__RLIMIT_NICE=13,__RLIMIT_RTPRIO=14,__RLIMIT_RTTIME=15,__RLIMIT_NLIMITS=16,__RLIM_NLIMITS=16;typedef__rlim_trlim_t;structrlimitrlim_trlim_cur;rlim_trlim_max;;typedefenum__rlimit_resource__rlimit_resource_t;enumblanktypebl_start=0,bl_end=1,bl_both=2;structlinechar*text;size_tlength;char*keybeg;char*keylim;;structbufferchar*buf;size_tused;size_tnlines;size_talloc;size_tleft;size_tline_bytes;_Booleof;;structkeyfieldsize_tsword;size_tschar;size_teword;size_techar;_Boolconst*ignore;charconst*translate;_Boolskipsblanks;_Boolskipeblanks;_Boolnumeric;_Boolrandom;_Boolgeneral_numeric;_Boolhuman_numeric;_Boolmonth;_Boolreverse;_Boolversion;_Boolobsolete_used;structkeyfield*next;;structmonthcharconst*name;intval;;structmerge_nodestructline*lo;structline*hi;structline*end_lo;structline*end_hi;structline**dest;size_tnlo;size_tnhi;structmerge_node*parent;structmerge_node*lo_child;structmerge_node*hi_child;unsignedintlevel;_Boolqueued;pthread_mutex_tlock;;structmerge_node_queuestructheap*priority_queue;pthread_mutex_tmutex;pthread_cond_tcond;;structcs_status_Boolvalid;sigset_tsigs;;structtempnodestructtempnode*volatilenext;pid_tpid;charstate;charname[1];;structsortfilecharconst*name;structtempnode*temp;;union__anonunion_101int__in;int__i;;union__anonunion_102int__in;int__i;;structthread_argsstructline*lines;size_tnthreads;size_ttotal_lines;structmerge_node*node;structmerge_node_queue*queue;FILE*tfp;charconst*output_temp;;structtimespecdtotimespec(doublesec);structtimespecdtotimespec(doublesec)doublemin_representable;doublemax_representable;structtimespecr;time_ts;doublefrac;longns;min_representable=(double)(~(((1L<<(sizeof(time_t)*8UL-2UL))-1L)*2L+1L));max_representable=((double)(((1L<<(sizeof(time_t)*8UL-2UL))-1L)*2L+1L)*(double)1000000000+(double)999999999)/(double)1000000000;if(!(min_representable<sec))r.tv_sec=~(((1L<<(sizeof(time_t)*8UL-2UL))-1L)*2L+1L);r.tv_nsec=(__syscall_slong_t)0;elseif(!(sec<max_representable))r.tv_sec=((1L<<(sizeof(time_t)*8UL-2UL))-1L)*2L+1L;r.tv_nsec=(__syscall_slong_t)999999999;elses=(time_t)sec;frac=(double)1000000000*(sec-(double)s);ns=(long)frac;ns+=(long)((double)ns<frac);s+=ns/1000000000L;ns%=1000000000L;if(ns<0L)s--;ns+=1000000000L;r.tv_sec=s;r.tv_nsec=ns;return(r);__attribute__((__noreturn__))voidxalloc_die(void);char*last_component(charconst*name)__attribute__((__pure__));extern__attribute__((__nothrow__))void*(__attribute__((__leaf__))malloc)(size_t__size)__attribute__((__malloc__));extern__attribute__((__nothrow__))void*(__attribute__((__nonnull__(1,2),__leaf__))memcpy)(void*__restrict__dest,voidconst*__restrict__src,size_t__n);extern__attribute__((__nothrow__))int*(__attribute__((__leaf__))__errno_location)(void)__attribute__((__const__));extern__attribute__((__nothrow__))int(__attribute__((__nonnull__(1,2),__leaf__))stat)(charconst*__restrict__file,structstat*__restrict__buf);extern__attribute__((__nothrow__))int(__attribute__((__nonnull__(2),__leaf__))fstat)(int__fd,structstat*__buf);externintclose(int__fd);charconstdiacrit_base[256];charconstdiacrit_diac[256];charconstdiacrit_base[256]=(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)'A',(charconst)'B',(charconst)'C',(charconst)'D',(charconst)'E',(charconst)'F',(charconst)'G',(charconst)'H',(charconst)'I',(charconst)'J',(charconst)'K',(charconst)'L',(charconst)'M',(charconst)'N',(charconst)'O',(charconst)'P',(charconst)'Q',(charconst)'R',(charconst)'S',(charconst)'T',(charconst)'U',(charconst)'V',(charconst)'W',(charconst)'X',(charconst)'Y',(charconst)'Z',(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)'a',(charconst)'b',(charconst)'c',(charconst)'d',(charconst)'e',(charconst)'f',(charconst)'g',(charconst)'h',(charconst)'i',(charconst)'j',(charconst)'k',(charconst)'l',(charconst)'m',(charconst)'n',(charconst)'o',(charconst)'p',(charconst)'q',(charconst)'r',(charconst)'s',(charconst)'t',(charconst)'u',(charconst)'v',(charconst)'w',(charconst)'x',(charconst)'y',(charconst)'z',(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)'A',(charconst)'A',(charconst)'A',(charconst)'A',(charconst)'A',(charconst)'A',(charconst)'A',(charconst)'C',(charconst)'E',(charconst)'E',(charconst)'E',(charconst)'E',(charconst)'I',(charconst)'I',(charconst)'I',(charconst)'I',(charconst)0,(charconst)'N',(charconst)'O',(charconst)'O',(charconst)'O',(charconst)'O',(charconst)'O',(charconst)0,(charconst)'O',(charconst)'U',(charconst)'U',(charconst)'U',(charconst)'U',(charconst)'Y',(charconst)0,(charconst)0,(charconst)'a',(charconst)'a',(charconst)'a',(charconst)'a',(charconst)'a',(charconst)'a',(charconst)'a',(charconst)'c',(charconst)'e',(charconst)'e',(charconst)'e',(charconst)'e',(charconst)'i',(charconst)'i',(charconst)'i',(charconst)'i',(charconst)0,(charconst)'n',(charconst)'o',(charconst)'o',(charconst)'o',(charconst)'o',(charconst)'o',(charconst)0,(charconst)'o',(charconst)'u',(charconst)'u',(charconst)'u',(charconst)'u',(charconst)'y',(charconst)0,(charconst)'y';charconstdiacrit_diac[256]=(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)4,(charconst)0,(charconst)3,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)6,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)3,(charconst)2,(charconst)4,(charconst)6,(charconst)5,(charconst)8,(charconst)1,(charconst)7,(charconst)3,(charconst)2,(charconst)4,(charconst)5,(charconst)3,(charconst)2,(charconst)4,(charconst)5,(charconst)0,(charconst)6,(charconst)3,(charconst)2,(charconst)4,(charconst)6,(charconst)5,(charconst)0,(charconst)9,(charconst)3,(charconst)2,(charconst)4,(charconst)5,(charconst)2,(charconst)0,(charconst)0,(charconst)3,(charconst)2,(charconst)4,(charconst)6,(charconst)5,(charconst)8,(charconst)1,(charconst)7,(charconst)3,(charconst)2,(charconst)4,(charconst)5,(charconst)3,(charconst)2,(charconst)4,(charconst)5,(charconst)0,(charconst)6,(charconst)3,(charconst)2,(charconst)4,(charconst)6,(charconst)5,(charconst)0,(charconst)9,(charconst)3,(charconst)2,(charconst)4,(charconst)5,(charconst)2,(charconst)0,(charconst)0;Hash_table*(__attribute__((__warn_unused_result__))hash_initialize)(size_tcandidate,Hash_tuningconst*tuning,size_t(*hasher)(voidconst*,size_t),_Bool(*comparator)(voidconst*,voidconst*),void(*data_freer)(void*));void*(__attribute__((__warn_unused_result__))hash_insert)(Hash_table*table___0,voidconst*entry);inthash_insert_if_absent(Hash_table*table___0,voidconst*entry,voidconst**matched_ent);extern__attribute__((__nothrow__))void(__attribute__((__leaf__))free)(void*__ptr);extern__attribute__((__nothrow__,__noreturn__))void(__attribute__((__leaf__))__assert_fail)(charconst*__assertion,charconst*__file,unsignedint__line,charconst*__function);intfd_safer(intfd);externvoiderror(int__status,int__errnum,charconst*__format,...);charconst*quote(charconst*name);extern__attribute__((__nothrow__))char*(__attribute__((__leaf__))gettext)(charconst*__msgid)__attribute__((__format_arg__(1)));voidclose_stdout(void);externstruct_IO_FILE*stdout;externstruct_IO_FILE*stderr;extern__attribute__((__noreturn__))void_exit(int__status);intclose_stream(FILE*stream);intvolatileexit_failure;char*quotearg_colon(charconst*arg);staticcharconst*file_name;static_Boolignore_EPIPE;voidclose_stdout(void)charconst*write_error;charconst*tmp;char*tmp___0;int*tmp___1;int*tmp___2;inttmp___3;int*tmp___4;inttmp___5;tmp___3=close_stream(stdout);if(tmp___3!=0)if(ignore_EPIPE)tmp___4=__errno_location();if(!(*tmp___4==32))goto_L;else_L:tmp=(charconst*)gettext("writeerror");write_error=tmp;if(file_name)tmp___0=quotearg_colon(file_name);tmp___1=__errno_location();error(0,*tmp___1,"%s:%s",tmp___0,write_error);elsetmp___2=__errno_location();error(0,*tmp___2,"%s",write_error);_exit((int)exit_failure);tmp___5=close_stream(stderr);if(tmp___5!=0)_exit((int)exit_failure);return;externstruct_IO_FILE*stdin;intrpl_fflush(FILE*stream);int(__attribute__((__nonnull__(1)))rpl_fseeko)(FILE*fp,off_toffset,intwhence);extern__attribute__((__nothrow__))int(__attribute__((__leaf__))ferror_unlocked)(FILE*__stream);int(__attribute__((__nonnull__(1)))rpl_fclose)(FILE*fp);extern__attribute__((__nothrow__))size_t(__attribute__((__leaf__))__fpending)(FILE*__fp);intclose_stream(FILE*stream)_Boolsome_pending;size_ttmp;_Boolprev_fail;inttmp___0;_Boolfclose_fail;inttmp___1;int*tmp___2;int*tmp___3;tmp=__fpending(stream);some_pending=(_Bool)(tmp!=0UL);tmp___0=ferror_unlocked(stream);prev_fail=(_Bool)(tmp___0!=0);tmp___1=rpl_fclose(stream);fclose_fail=(_Bool)(tmp___1!=0);if(prev_fail)goto_L___0;elseif(fclose_fail)if(some_pending)goto_L___0;elsetmp___3=__errno_location();if(*tmp___3!=9)_L___0:if(!fclose_fail)tmp___2=__errno_location();*tmp___2=0;return(-1);return(0);intrpl_fcntl(intfd,intaction,...);extern__attribute__((__nothrow__))void*(__attribute__((__nonnull__(1),__leaf__))memchr)(voidconst*__s,int__c,size_t__n)__attribute__((__pure__));extern__attribute__((__nothrow__))size_t(__attribute__((__nonnull__(1),__leaf__))strlen)(charconst*__s)__attribute__((__pure__));extern__attribute__((__nothrow__,__noreturn__))void(__attribute__((__leaf__))abort)(void);structallocatorconststdlib_allocator;extern__attribute__((__nothrow__))void*(__attribute__((__nonnull__(1,2),__leaf__))memmove)(void*__dest,voidconst*__src,size_t__n);extern__attribute__((__nothrow__))char*(__attribute__((__nonnull__(1),__leaf__))strchr)(charconst*__s,int__c)__attribute__((__pure__));size_ttriple_hash(voidconst*x,size_ttable_size)__attribute__((__pure__));_Booltriple_compare_ino_str(voidconst*x,voidconst*y)__attribute__((__pure__));void*xmalloc(size_tn)__attribute__((__malloc__,__alloc_size__(1)));void*xrealloc(void*p,size_tn)__attribute__((__alloc_size__(2)));extern__attribute__((__nothrow__))char*(__attribute__((__nonnull__(1),__leaf__))strdup)(charconst*__s)__attribute__((__malloc__));intc_tolower(intc)__attribute__((__const__));intc_strcasecmp(charconst*s1,charconst*s2)__attribute__((__pure__));intc_strcasecmp(charconst*s1,charconst*s2)__attribute__((__pure__));intc_strcasecmp(charconst*s1,charconst*s2)registerunsignedcharconst*p1;registerunsignedcharconst*p2;unsignedcharc1;unsignedcharc2;p1=(unsignedcharconst*)s1;p2=(unsignedcharconst*)s2;if((unsignedlong)p1==(unsignedlong)p2)return(0);while(1)c1=(unsignedchar)c_tolower((int)*p1);c2=(unsignedchar)c_tolower((int)*p2);if((int)c1==0)gotowhile_break;p1++;p2++;if(!((int)c1==(int)c2))gotowhile_break;while_break:;return((int)c1-(int)c2);_Boolc_isalnum(intc)__attribute__((__const__));_Boolc_isalpha(intc)__attribute__((__const__));_Boolc_isdigit(intc)__attribute__((__const__));_Boolc_isspace(intc)__attribute__((__const__));_Boolc_isalnum(intc)__attribute__((__const__));_Boolc_isalnum(intc)inttmp;if(c>=48)if(c<=57)tmp=1;elsegoto_L;else_L:if((c&-33)>=65)if((c&-33)<=90)tmp=1;elsetmp=0;elsetmp=0;return((_Bool)tmp);_Boolc_isalpha(intc)__attribute__((__const__));_Boolc_isalpha(intc)inttmp;if((c&-33)>=65)if((c&-33)<=90)tmp=1;elsetmp=0;elsetmp=0;return((_Bool)tmp);_Boolc_isdigit(intc)__attribute__((__const__));_Boolc_isdigit(intc)inttmp;if(c>=48)if(c<=57)tmp=1;elsetmp=0;elsetmp=0;return((_Bool)tmp);_Boolc_isspace(intc)__attribute__((__const__));_Boolc_isspace(intc)inttmp;if(c==32)tmp=1;elseif(c==9)tmp=1;elseif(c==10)tmp=1;elseif(c==11)tmp=1;elseif(c==12)tmp=1;elseif(c==13)tmp=1;elsetmp=0;return((_Bool)tmp);intc_tolower(intc)__attribute__((__const__));intc_tolower(intc)inttmp;if(c>=65)if(c<=90)tmp=(c-65)+97;elsetmp=c;elsetmp=c;return(tmp);char*last_component(charconst*name)__attribute__((__pure__));char*last_component(charconst*name)charconst*base;charconst*p;_Boolsaw_slash;base=name+0;saw_slash=(_Bool)0;while(1)if(!((intconst)*base==47))gotowhile_break;base++;while_break:p=base;while(1)if(!*p)gotowhile_break___0;if((intconst)*p==47)saw_slash=(_Bool)1;elseif(saw_slash)base=p;saw_slash=(_Bool)0;p++;while_break___0:;return((char*)base);__inlinestaticunsignedcharto_uchar(charch)return((unsignedchar)ch);charconst*simple_backup_suffix;void(*argmatch_die)(void);ptrdiff_t__xargmatch_internal(charconst*context,charconst*arg,charconst*const*arglist,charconst*vallist,size_tvalsize,void(*exit_fn)(void));extern__attribute__((__nothrow__))char*(__attribute__((__nonnull__(1),__leaf__))getenv)(charconst*__name);extern__attribute__((__nothrow__))int(__attribute__((__nonnull__(1,2),__leaf__))memcmp)(voidconst*__s1,voidconst*__s2,size_t__n)__attribute__((__pure__));extern__attribute__((__nothrow__))char*(__attribute__((__nonnull__(1,2),__leaf__))strcpy)(char*__restrict__dest,charconst*__restrict__src);charconst*simple_backup_suffix="~";ptrdiff_targmatch(charconst*arg,charconst*const*arglist,charconst*vallist,size_tvalsize)__attribute__((__pure__));voidargmatch_invalid(charconst*context,charconst*value,ptrdiff_tproblem);voidargmatch_valid(charconst*const*arglist,charconst*vallist,size_tvalsize);externintfprintf(FILE*__restrict__stream,charconst*__restrict__format,...);externintputc_unlocked(int__c,FILE*__stream);externintfputs_unlocked(charconst*__restrict__s,FILE*__restrict__stream);extern__attribute__((__nothrow__))int(__attribute__((__nonnull__(1,2),__leaf__))strncmp)(charconst*__s1,charconst*__s2,size_t__n)__attribute__((__pure__));char*quotearg_n_style(intn,enumquoting_styles,charconst*arg);charconst*quote_n(intn,charconst*name);__attribute__((__noreturn__))voidusage(intstatus);staticvoid__argmatch_die(void)usage(1);return;void(*argmatch_die)(void)=&__argmatch_die;ptrdiff_targmatch(charconst*arg,charconst*const*arglist,charconst*vallist,size_tvalsize)__attribute__((__pure__));ptrdiff_targmatch(charconst*arg,charconst*const*arglist,charconst*vallist,size_tvalsize)size_ti;size_targlen;ptrdiff_tmatchind;_Boolambiguous;inttmp;size_ttmp___0;inttmp___1;matchind=(ptrdiff_t)-1;ambiguous=(_Bool)0;arglen=strlen(arg);i=(size_t)0;while(1)if(!*(arglist+i))gotowhile_break;tmp___1=strncmp((charconst*)*(arglist+i),arg,arglen);if(!tmp___1)tmp___0=strlen((charconst*)*(arglist+i));if(tmp___0==arglen)return((ptrdiff_t)i);elseif(matchind==-1L)matchind=(ptrdiff_t)i;elseif((unsignedlong)vallist==(unsignedlong)((void*)0))ambiguous=(_Bool)1;elsetmp=memcmp((voidconst*)(vallist+valsize*(size_t)matchind),(voidconst*)(vallist+valsize*i),valsize);if(tmp)ambiguous=(_Bool)1;i++;while_break:;if(ambiguous)return((ptrdiff_t)-2);elsereturn(matchind);voidargmatch_invalid(charconst*context,charconst*value,ptrdiff_tproblem)charconst*format;char*tmp;char*tmp___0;char*tmp___1;charconst*tmp___2;char*tmp___3;if(problem==-1L)tmp=gettext("invalidargument%sfor%s");tmp___1=tmp;elsetmp___0=gettext("ambiguousargument%sfor%s");tmp___1=tmp___0;format=(charconst*)tmp___1;tmp___2=quote_n(1,context);tmp___3=quotearg_n_style(0,(enumquoting_style)6,value);error(0,0,format,tmp___3,tmp___2);return;voidargmatch_valid(charconst*const*arglist,charconst*vallist,size_tvalsize)size_ti;charconst*last_val;char*tmp;charconst*tmp___0;charconst*tmp___1;inttmp___2;last_val=(charconst*)((void*)0);tmp=gettext("Validargumentsare:");fputs_unlocked((charconst*)tmp,stderr);i=(size_t)0;while(1)if(!*(arglist+i))gotowhile_break;if(i==0UL)tmp___0=quote((charconst*)*(arglist+i));fprintf(stderr,"\n-%s",tmp___0);last_val=vallist+valsize*i;elsetmp___2=memcmp((voidconst*)last_val,(voidconst*)(vallist+valsize*i),valsize);if(tmp___2)tmp___0=quote((charconst*)*(arglist+i));fprintf(stderr,"\n-%s",tmp___0);last_val=vallist+valsize*i;elsetmp___1=quote((charconst*)*(arglist+i));fprintf(stderr,",%s",tmp___1);i++;while_break:putc_unlocked('\n',stderr);return;ptrdiff_t__xargmatch_internal(charconst*context,charconst*arg,charconst*const*arglist,charconst*vallist,size_tvalsize,void(*exit_fn)(void))ptrdiff_tres;ptrdiff_ttmp;tmp=argmatch(arg,arglist,vallist,valsize);res=tmp;if(res>=0L)return(res);argmatch_invalid(context,arg,res);argmatch_valid(arglist,vallist,valsize);(*exit_fn)();return((ptrdiff_t)-1);extern__attribute__((__nothrow__))void*(__attribute__((__warn_unused_result__,__leaf__))realloc)(void*__ptr,size_t__size);structallocatorconststdlib_allocator=(void*(*)(size_t))(&malloc),(void*(*)(void*,size_t))(&realloc),(void(*)(void*))(&free),(void(*)(size_t))((void*)0);__inlinestaticvoid*xnmalloc(size_tn,size_ts)__attribute__((__malloc__,__alloc_size__(1,2)));__inlinestaticvoid*xnmalloc(size_tn,size_ts)__attribute__((__malloc__,__alloc_size__(1,2)));__inlinestaticvoid*xnmalloc(size_tn,size_ts)inttmp;void*tmp___0;if(sizeof(ptrdiff_t)<=sizeof(size_t))tmp=-1;elsetmp=-2;if((size_t)tmp/s<n)xalloc_die();tmp___0=xmalloc(n*s);return(tmp___0);extern__attribute__((__nothrow__))unsignedshortconst**(__attribute__((__leaf__))__ctype_b_loc)(void)__attribute__((__const__));extern__attribute__((__nothrow__))uintmax_t(__attribute__((__leaf__))strtoumax)(charconst*__restrict__nptr,char**__restrict__endptr,int__base);strtol_errorxstrtoumax(charconst*s,char**ptr,intstrtol_base,uintmax_t*val,charconst*valid_suffixes);staticstrtol_errorbkm_scale(uintmax_t*x,intscale_factor)if(0xffffffffffffffffUL/(unsignedlong)scale_factor<*x)*x=0xffffffffffffffffUL;return((strtol_error)1);*x*=(uintmax_t)scale_factor;return((strtol_error)0);staticstrtol_errorbkm_scale_by_power(uintmax_t*x,intbase,intpower)strtol_errorerr;strtol_errortmp;inttmp___0;err=(strtol_error)0;while(1)tmp___0=power;power--;if(!tmp___0)gotowhile_break;tmp=bkm_scale(x,base);err=(strtol_error)((unsignedint)err|(unsignedint)tmp);while_break:;return(err);strtol_errorxstrtoumax(charconst*s,char**ptr,intstrtol_base,uintmax_t*val,charconst*valid_suffixes)char*t_ptr;char**p;uintmax_ttmp;strtol_errorerr;charconst*q;unsignedcharch;unsignedshortconst**tmp___0;int*tmp___1;char*tmp___2;int*tmp___3;int*tmp___4;intbase;intsuffixes;strtol_erroroverflow;char*tmp___5;char*tmp___6;err=(strtol_error)0;if(0<=strtol_base)if(!(strtol_base<=36))__assert_fail("0<=strtol_base&&strtol_base<=36","/home/khheo/project/program-reduce/benchmark/coreutils-8.16/lib/xstrtol.c",96U,"xstrtoumax");else__assert_fail("0<=strtol_base&&strtol_base<=36","/home/khheo/project/program-reduce/benchmark/coreutils-8.16/lib/xstrtol.c",96U,"xstrtoumax");if(ptr)p=ptr;elsep=&t_ptr;q=s;ch=(unsignedchar)*q;while(1)tmp___0=__ctype_b_loc();if(!((intconst)*(*tmp___0+(int)ch)&8192))gotowhile_break;q++;ch=(unsignedchar)*q;while_break:;if((int)ch==45)return((strtol_error)4);tmp___1=__errno_location();*tmp___1=0;tmp=strtoumax(s,p,strtol_base);if((unsignedlong)*p==(unsignedlong)s)if(valid_suffixes)if(*(*p))tmp___2=strchr(valid_suffixes,(int)*(*p));if(tmp___2)tmp=(uintmax_t)1;elsereturn((strtol_error)4);elsereturn((strtol_error)4);elsereturn((strtol_error)4);elsetmp___4=__errno_location();if(*tmp___4!=0)tmp___3=__errno_location();if(*tmp___3!=34)return((strtol_error)4);err=(strtol_error)1;if(!valid_suffixes)*val=tmp;return(err);if((int)*(*p)!=0)base=1024;suffixes=1;tmp___5=strchr(valid_suffixes,(int)*(*p));if(!tmp___5)*val=tmp;return((strtol_error)((unsignedint)err|2U));tmp___6=strchr(valid_suffixes,'0');if(tmp___6)if((int)*(*(p+0)+1)==105)gotocase_105;if((int)*(*(p+0)+1)==66)gotocase_66;if((int)*(*(p+0)+1)==68)gotocase_66;gotoswitch_break;case_105:if((int)*(*(p+0)+2)==66)suffixes+=2;gotoswitch_break;case_66:base=1000;suffixes++;gotoswitch_break;switch_break:;if((int)*(*p)==98)gotocase_98;if((int)*(*p)==66)gotocase_66___0;if((int)*(*p)==99)gotocase_99;if((int)*(*p)==69)gotocase_69;if((int)*(*p)==71)gotocase_71;if((int)*(*p)==103)gotocase_71;if((int)*(*p)==107)gotocase_107;if((int)*(*p)==75)gotocase_107;if((int)*(*p)==77)gotocase_77;if((int)*(*p)==109)gotocase_77;if((int)*(*p)==80)gotocase_80;if((int)*(*p)==84)gotocase_84;if((int)*(*p)==116)gotocase_84;if((int)*(*p)==119)gotocase_119;if((int)*(*p)==89)gotocase_89;if((int)*(*p)==90)gotocase_90;gotoswitch_default;case_98:overflow=bkm_scale(&tmp,512);gotoswitch_break___0;case_66___0:overflow=bkm_scale(&tmp,1024);gotoswitch_break___0;case_99:overflow=(strtol_error)0;gotoswitch_break___0;case_69:overflow=bkm_scale_by_power(&tmp,base,6);gotoswitch_break___0;case_71:overflow=bkm_scale_by_power(&tmp,base,3);gotoswitch_break___0;case_107:overflow=bkm_scale_by_power(&tmp,base,1);gotoswitch_break___0;case_77:overflow=bkm_scale_by_power(&tmp,base,2);gotoswitch_break___0;case_80:overflow=bkm_scale_by_power(&tmp,base,5);gotoswitch_break___0;case_84:overflow=bkm_scale_by_power(&tmp,base,4);gotoswitch_break___0;case_119:overflow=bkm_scale(&tmp,2);gotoswitch_break___0;case_89:overflow=bkm_scale_by_power(&tmp,base,8);gotoswitch_break___0;case_90:overflow=bkm_scale_by_power(&tmp,base,7);gotoswitch_break___0;switch_default:*val=tmp;return((strtol_error)((unsignedint)err|2U));switch_break___0:err=(strtol_error)((unsignedint)err|(unsignedint)overflow);*p+=suffixes;if(*(*p))err=(strtol_error)((unsignedint)err|2U);*val=tmp;return(err);strtol_errorxstrtoul(charconst*s,char**ptr,intstrtol_base,unsignedlong*val,charconst*valid_suffixes);extern__attribute__((__nothrow__))unsignedlong(__attribute__((__nonnull__(1),__leaf__))strtoul)(charconst*__restrict__nptr,char**__restrict__endptr,int__base);staticstrtol_errorbkm_scale___0(unsignedlong*x,intscale_factor)if(0xffffffffffffffffUL/(unsignedlong)scale_factor<*x)*x=0xffffffffffffffffUL;return((strtol_error)1);*x*=(unsignedlong)scale_factor;return((strtol_error)0);staticstrtol_errorbkm_scale_by_power___0(unsignedlong*x,intbase,intpower)strtol_errorerr;strtol_errortmp;inttmp___0;err=(strtol_error)0;while(1)tmp___0=power;power--;if(!tmp___0)gotowhile_break;tmp=bkm_scale___0(x,base);err=(strtol_error)((unsignedint)err|(unsignedint)tmp);while_break:;return(err);strtol_errorxstrtoul(charconst*s,char**ptr,intstrtol_base,unsignedlong*val,charconst*valid_suffixes)char*t_ptr;char**p;unsignedlongtmp;strtol_errorerr;charconst*q;unsignedcharch;unsignedshortconst**tmp___0;int*tmp___1;char*tmp___2;int*tmp___3;int*tmp___4;intbase;intsuffixes;strtol_erroroverflow;char*tmp___5;char*tmp___6;err=(strtol_error)0;if(0<=strtol_base)if(!(strtol_base<=36))__assert_fail("0<=strtol_base&&strtol_base<=36","/home/khheo/project/program-reduce/benchmark/coreutils-8.16/lib/xstrtol.c",96U,"xstrtoul");else__assert_fail("0<=strtol_base&&strtol_base<=36","/home/khheo/project/program-reduce/benchmark/coreutils-8.16/lib/xstrtol.c",96U,"xstrtoul");if(ptr)p=ptr;elsep=&t_ptr;q=s;ch=(unsignedchar)*q;while(1)tmp___0=__ctype_b_loc();if(!((intconst)*(*tmp___0+(int)ch)&8192))gotowhile_break;q++;ch=(unsignedchar)*q;while_break:;if((int)ch==45)return((strtol_error)4);tmp___1=__errno_location();*tmp___1=0;tmp=strtoul(s,p,strtol_base);if((unsignedlong)*p==(unsignedlong)s)if(valid_suffixes)if(*(*p))tmp___2=strchr(valid_suffixes,(int)*(*p));if(tmp___2)tmp=1UL;elsereturn((strtol_error)4);elsereturn((strtol_error)4);elsereturn((strtol_error)4);elsetmp___4=__errno_location();if(*tmp___4!=0)tmp___3=__errno_location();if(*tmp___3!=34)return((strtol_error)4);err=(strtol_error)1;if(!valid_suffixes)*val=tmp;return(err);if((int)*(*p)!=0)base=1024;suffixes=1;tmp___5=strchr(valid_suffixes,(int)*(*p));if(!tmp___5)*val=tmp;return((strtol_error)((unsignedint)err|2U));tmp___6=strchr(valid_suffixes,'0');if(tmp___6)if((int)*(*(p+0)+1)==105)gotocase_105;if((int)*(*(p+0)+1)==66)gotocase_66;if((int)*(*(p+0)+1)==68)gotocase_66;gotoswitch_break;case_105:if((int)*(*(p+0)+2)==66)suffixes+=2;gotoswitch_break;case_66:base=1000;suffixes++;gotoswitch_break;switch_break:;if((int)*(*p)==98)gotocase_98;if((int)*(*p)==66)gotocase_66___0;if((int)*(*p)==99)gotocase_99;if((int)*(*p)==69)gotocase_69;if((int)*(*p)==71)gotocase_71;if((int)*(*p)==103)gotocase_71;if((int)*(*p)==107)gotocase_107;if((int)*(*p)==75)gotocase_107;if((int)*(*p)==77)gotocase_77;if((int)*(*p)==109)gotocase_77;if((int)*(*p)==80)gotocase_80;if((int)*(*p)==84)gotocase_84;if((int)*(*p)==116)gotocase_84;if((int)*(*p)==119)gotocase_119;if((int)*(*p)==89)gotocase_89;if((int)*(*p)==90)gotocase_90;gotoswitch_default;case_98:overflow=bkm_scale___0(&tmp,512);gotoswitch_break___0;case_66___0:overflow=bkm_scale___0(&tmp,1024);gotoswitch_break___0;case_99:overflow=(strtol_error)0;gotoswitch_break___0;case_69:overflow=bkm_scale_by_power___0(&tmp,base,6);gotoswitch_break___0;case_71:overflow=bkm_scale_by_power___0(&tmp,base,3);gotoswitch_break___0;case_107:overflow=bkm_scale_by_power___0(&tmp,base,1);gotoswitch_break___0;case_77:overflow=bkm_scale_by_power___0(&tmp,base,2);gotoswitch_break___0;case_80:overflow=bkm_scale_by_power___0(&tmp,base,5);gotoswitch_break___0;case_84:overflow=bkm_scale_by_power___0(&tmp,base,4);gotoswitch_break___0;case_119:overflow=bkm_scale___0(&tmp,2);gotoswitch_break___0;case_89:overflow=bkm_scale_by_power___0(&tmp,base,8);gotoswitch_break___0;case_90:overflow=bkm_scale_by_power___0(&tmp,base,7);gotoswitch_break___0;switch_default:*val=tmp;return((strtol_error)((unsignedint)err|2U));switch_break___0:err=(strtol_error)((unsignedint)err|(unsignedint)overflow);*p+=suffixes;if(*(*p))err=(strtol_error)((unsignedint)err|2U);*val=tmp;return(err);extern__attribute__((__nothrow__))long(__attribute__((__nonnull__(1),__leaf__))strtol)(charconst*__restrict__nptr,char**__restrict__endptr,int__base);__attribute__((__noreturn__))voidxstrtol_fatal(enumstrtol_errorerr,intopt_idx,charc,structoptionconst*long_options___2,charconst*arg);staticvoidxstrtol_error(enumstrtol_errorerr,intopt_idx,charc,structoptionconst*long_options___2,charconst*arg,intexit_status)charconst*hyphens;charconst*msgid;charconst*option;charoption_buffer[2];char*tmp;hyphens="--";if((unsignedint)err==4U)gotocase_4;if((unsignedint)err==2U)gotocase_2;if((unsignedint)err==3U)gotocase_2;if((unsignedint)err==1U)gotocase_1;gotoswitch_default;switch_default:abort();case_4:msgid="invalid%s%sargument\'%s\'";gotoswitch_break;case_2:msgid="invalidsuffixin%s%sargument\'%s\'";gotoswitch_break;case_1:msgid="%s%sargument\'%s\'toolarge";gotoswitch_break;switch_break:;if(opt_idx<0)hyphens-=opt_idx;option_buffer[0]=c;option_buffer[1]=(char)'\000';option=(charconst*)(option_buffer);elseoption=(charconst*)(long_options___2+opt_idx)->name;tmp=gettext(msgid);error(exit_status,0,(charconst*)tmp,hyphens,option,arg);return;__attribute__((__noreturn__))voidxstrtol_fatal(enumstrtol_errorerr,intopt_idx,charc,structoptionconst*long_options___2,charconst*arg);voidxstrtol_fatal(enumstrtol_errorerr,intopt_idx,charc,structoptionconst*long_options___2,charconst*arg)xstrtol_error(err,opt_idx,c,long_options___2,arg,(int)exit_failure);abort();extern__attribute__((__nothrow__))int(__attribute__((__leaf__))ferror)(FILE*__stream);intxnanosleep(doubleseconds);int(__attribute__((__nonnull__(1)))rpl_nanosleep)(structtimespecconst*requested_delay,structtimespec*remaining_delay);intxnanosleep(doubleseconds)structtimespects_sleep;structtimespectmp;int*tmp___0;inttmp___1;int*tmp___2;int*tmp___3;tmp=dtotimespec(seconds);ts_sleep=tmp;while(1)tmp___0=__errno_location();*tmp___0=0;tmp___1=rpl_nanosleep((structtimespecconst*)(&ts_sleep),(structtimespec*)((void*)0));if(tmp___1==0)gotowhile_break;tmp___2=__errno_location();if(*tmp___2!=4)tmp___3=__errno_location();if(*tmp___3!=0)return(-1);while_break:;return(0);intmemcoll0(charconst*s1,size_ts1size,charconst*s2,size_ts2size);char*quotearg_n_style_mem(intn,enumquoting_styles,charconst*arg,size_targsize);intxmemcoll0(charconst*s1,size_ts1size,charconst*s2,size_ts2size);staticvoidcollate_error(intcollation_errno,charconst*s1,size_ts1len,charconst*s2,size_ts2len)char*tmp;char*tmp___0;char*tmp___1;char*tmp___2;char*tmp___3;tmp=gettext("stringcomparisonfailed");error(0,collation_errno,(charconst*)tmp);tmp___0=gettext("SetLC_ALL=\'C\'toworkaroundtheproblem.");error(0,0,(charconst*)tmp___0);tmp___1=quotearg_n_style_mem(1,(enumquoting_style)6,s2,s2len);tmp___2=quotearg_n_style_mem(0,(enumquoting_style)6,s1,s1len);tmp___3=gettext("Thestringscomparedwere%sand%s.");error((int)exit_failure,0,(charconst*)tmp___3,tmp___2,tmp___1);return;intxmemcoll0(charconst*s1,size_ts1size,charconst*s2,size_ts2size)intdiff;inttmp;intcollation_errno;int*tmp___0;tmp=memcoll0(s1,s1size,s2,s2size);diff=tmp;tmp___0=__errno_location();collation_errno=*tmp___0;if(collation_errno)collate_error(collation_errno,s1,s1size-1UL,s2,s2size-1UL);return(diff);void*xcalloc(size_tn,size_ts)__attribute__((__malloc__,__alloc_size__(1,2)));void*xmemdup(voidconst*p,size_ts)__attribute__((__malloc__,__alloc_size__(2)));__inlinestaticvoid*x2nrealloc(void*p,size_t*pn,size_ts)size_tn;void*tmp;n=*pn;if(!p)if(!n)n=128UL/s;n+=(size_t)(!n);elseif(0xaaaaaaaaaaaaaaaaUL/s<=n)xalloc_die();n+=(n+1UL)/2UL;*pn=n;tmp=xrealloc(p,n*s);return(tmp);extern__attribute__((__nothrow__))void*(__attribute__((__leaf__))calloc)(size_t__nmemb,size_t__size)__attribute__((__malloc__));extern__attribute__((__nothrow__))void*(__attribute__((__nonnull__(1),__leaf__))memset)(void*__s,int__c,size_t__n);void*xmalloc(size_tn)__attribute__((__malloc__,__alloc_size__(1)));void*xmalloc(size_tn)void*p;void*tmp;tmp=malloc(n);p=tmp;if(!p)if(n!=0UL)xalloc_die();return(p);void*xrealloc(void*p,size_tn)__attribute__((__alloc_size__(2)));void*xrealloc(void*p,size_tn)if(!n)if(p)free(p);return((void*)0);p=realloc(p,n);if(!p)if(n)xalloc_die();return(p);void*xcalloc(size_tn,size_ts)__attribute__((__malloc__,__alloc_size__(1,2)));void*xcalloc(size_tn,size_ts)void*p;p=calloc(n,s);if(!p)xalloc_die();return(p);void*xmemdup(voidconst*p,size_ts)__attribute__((__malloc__,__alloc_size__(2)));void*xmemdup(voidconst*p,size_ts)void*tmp;void*tmp___0;tmp=xmalloc(s);tmp___0=memcpy(tmp,p,s);return(tmp___0);__attribute__((__noreturn__))voidxalloc_die(void);voidxalloc_die(void)char*tmp;tmp=gettext("memoryexhausted");error((int)exit_failure,0,"%s",tmp);abort();extern__attribute__((__nothrow__))int(__attribute__((__nonnull__(1,2),__leaf__))strcmp)(charconst*__s1,charconst*__s2)__attribute__((__pure__));extern__attribute__((__nothrow__))int(__attribute__((__nonnull__(1),__leaf__))atexit)(void(*__func)(void));extern__pid_twaitpid(__pid_t__pid,int*__stat_loc,int__options);externintprintf(charconst*__restrict__format,...);charconstversion_etc_copyright[47];voidversion_etc_arn(FILE*stream,charconst*command_name,charconst*package,charconst*version,charconst*const*authors,size_tn_authors);voidversion_etc_va(FILE*stream,charconst*command_name,charconst*package,charconst*version,va_listauthors);voidversion_etc(FILE*stream,charconst*command_name,charconst*package,charconst*version,...)__attribute__((__sentinel__));voidversion_etc_arn(FILE*stream,charconst*command_name,charconst*package,charconst*version,charconst*const*authors,size_tn_authors)char*tmp;char*tmp___0;char*tmp___1;char*tmp___2;char*tmp___3;char*tmp___4;char*tmp___5;char*tmp___6;char*tmp___7;char*tmp___8;char*tmp___9;char*tmp___10;if(command_name)fprintf(stream,"%s(%s)%s\n",command_name,package,version);elsefprintf(stream,"%s%s\n",package,version);tmp=gettext("(C)");fprintf(stream,version_etc_copyright,tmp,2012);tmp___0=gettext("\nLicenseGPLv3+:GNUGPLversion3orlater<http://gnu.org/licenses/gpl.html>.\nThisisfreesoftware:youarefreetochangeandredistributeit.\nThereisNOWARRANTY,totheextentpermittedbylaw.\n\n");fputs_unlocked((charconst*)tmp___0,stream);if(n_authors==0UL)gotocase_0;if(n_authors==1UL)gotocase_1;if(n_authors==2UL)gotocase_2;if(n_authors==3UL)gotocase_3;if(n_authors==4UL)gotocase_4;if(n_authors==5UL)gotocase_5;if(n_authors==6UL)gotocase_6;if(n_authors==7UL)gotocase_7;if(n_authors==8UL)gotocase_8;if(n_authors==9UL)gotocase_9;gotoswitch_default;case_0:abort();case_1:tmp___1=gettext("Writtenby%s.\n");fprintf(stream,(charconst*)tmp___1,*(authors+0));gotoswitch_break;case_2:tmp___2=gettext("Writtenby%sand%s.\n");fprintf(stream,(charconst*)tmp___2,*(authors+0),*(authors+1));gotoswitch_break;case_3:tmp___3=gettext("Writtenby%s,%s,and%s.\n");fprintf(stream,(charconst*)tmp___3,*(authors+0),*(authors+1),*(authors+2));gotoswitch_break;case_4:tmp___4=gettext("Writtenby%s,%s,%s,\nand%s.\n");fprintf(stream,(charconst*)tmp___4,*(authors+0),*(authors+1),*(authors+2),*(authors+3));gotoswitch_break;case_5:tmp___5=gettext("Writtenby%s,%s,%s,\n%s,and%s.\n");fprintf(stream,(charconst*)tmp___5,*(authors+0),*(authors+1),*(authors+2),*(authors+3),*(authors+4));gotoswitch_break;case_6:tmp___6=gettext("Writtenby%s,%s,%s,\n%s,%s,and%s.\n");fprintf(stream,(charconst*)tmp___6,*(authors+0),*(authors+1),*(authors+2),*(authors+3),*(authors+4),*(authors+5));gotoswitch_break;case_7:tmp___7=gettext("Writtenby%s,%s,%s,\n%s,%s,%s,and%s.\n");fprintf(stream,(charconst*)tmp___7,*(authors+0),*(authors+1),*(authors+2),*(authors+3),*(authors+4),*(authors+5),*(authors+6));gotoswitch_break;case_8:tmp___8=gettext("Writtenby%s,%s,%s,\n%s,%s,%s,%s,\nand%s.\n");fprintf(stream,(charconst*)tmp___8,*(authors+0),*(authors+1),*(authors+2),*(authors+3),*(authors+4),*(authors+5),*(authors+6),*(authors+7));gotoswitch_break;case_9:tmp___9=gettext("Writtenby%s,%s,%s,\n%s,%s,%s,%s,\n%s,and%s.\n");fprintf(stream,(charconst*)tmp___9,*(authors+0),*(authors+1),*(authors+2),*(authors+3),*(authors+4),*(authors+5),*(authors+6),*(authors+7),*(authors+8));gotoswitch_break;switch_default:tmp___10=gettext("Writtenby%s,%s,%s,\n%s,%s,%s,%s,\n%s,%s,andothers.\n");fprintf(stream,(charconst*)tmp___10,*(authors+0),*(authors+1),*(authors+2),*(authors+3),*(authors+4),*(authors+5),*(authors+6),*(authors+7),*(authors+8));gotoswitch_break;switch_break:;return;voidversion_etc_va(FILE*stream,charconst*command_name,charconst*package,charconst*version,va_listauthors)size_tn_authors;charconst*authtab[10];charconst*tmp;n_authors=(size_t)0;while(1)if(n_authors<10UL)tmp=__builtin_va_arg(authors,charconst*);authtab[n_authors]=tmp;if(!((unsignedlong)tmp!=(unsignedlong)((void*)0)))gotowhile_break;elsegotowhile_break;n_authors++;while_break:version_etc_arn(stream,command_name,package,version,(charconst*const*)(authtab),n_authors);return;voidversion_etc(FILE*stream,charconst*command_name,charconst*package,charconst*version,...)__attribute__((__sentinel__));voidversion_etc(FILE*stream,charconst*command_name,charconst*package,charconst*version,...)va_listauthors;__builtin_va_start(authors,version);version_etc_va(stream,command_name,package,version,authors);__builtin_va_end(authors);return;charconstversion_etc_copyright[47]=(charconst)'C',(charconst)'o',(charconst)'p',(charconst)'y',(charconst)'r',(charconst)'i',(charconst)'g',(charconst)'h',(charconst)'t',(charconst)'',(charconst)'%',(charconst)'s',(charconst)'',(charconst)'%',(charconst)'d',(charconst)'',(charconst)'F',(charconst)'r',(charconst)'e',(charconst)'e',(charconst)'',(charconst)'S',(charconst)'o',(charconst)'f',(charconst)'t',(charconst)'w',(charconst)'a',(charconst)'r',(charconst)'e',(charconst)'',(charconst)'F',(charconst)'o',(charconst)'u',(charconst)'n',(charconst)'d',(charconst)'a',(charconst)'t',(charconst)'i',(charconst)'o',(charconst)'n',(charconst)',',(charconst)'',(charconst)'I',(charconst)'n',(charconst)'c',(charconst)'.',(charconst)'\000';extern__attribute__((__nothrow__))char*(__attribute__((__leaf__))nl_langinfo)(nl_item__item);char*(__attribute__((__warn_unused_result__))umaxtostr)(uintmax_ti,char*buf___1);charconst*locale_charset(void);#pragmaGCCdiagnosticignored"-Wtype-limits"char*(__attribute__((__warn_unused_result__))umaxtostr)(uintmax_ti,char*buf___1)char*p;p=buf___1+((sizeof(uintmax_t)*8UL)*146UL+484UL)/485UL;*p=(char)0;if(i<0UL)while(1)p--;*p=(char)(48UL-i%10UL);i/=10UL;if(!(i!=0UL))gotowhile_break;while_break:p--;*p=(char)'-';elsewhile(1)p--;*p=(char)(48UL+i%10UL);i/=10UL;if(!(i!=0UL))gotowhile_break___0;while_break___0:;return(p);#pragmaGCCdiagnosticignored"-Wtype-limits"char*(__attribute__((__warn_unused_result__))uinttostr)(unsignedinti,char*buf___1);char*(__attribute__((__warn_unused_result__))uinttostr)(unsignedinti,char*buf___1)char*p;p=buf___1+((sizeof(unsignedint)*8UL)*146UL+484UL)/485UL;*p=(char)0;if(i<0U)while(1)p--;*p=(char)(48U-i%10U);i/=10U;if(!(i!=0U))gotowhile_break;while_break:p--;*p=(char)'-';elsewhile(1)p--;*p=(char)(48U+i%10U);i/=10U;if(!(i!=0U))gotowhile_break___0;while_break___0:;return(p);extern__attribute__((__nothrow__))size_t(__attribute__((__leaf__))__ctype_get_mb_cur_max)(void);extern__attribute__((__nothrow__))int(__attribute__((__leaf__))mbsinit)(mbstate_tconst*__ps)__attribute__((__pure__));extern__attribute__((__nothrow__))size_t(__attribute__((__leaf__))mbrtowc)(wchar_t*__restrict__pwc,charconst*__restrict__s,size_t__n,mbstate_t*__restrict__p);unsignedintconstis_basic_table[8];__inlinestatic_Boolis_basic(charc)return((_Bool)((is_basic_table[(int)((unsignedchar)c)>>5]>>((int)((unsignedchar)c)&31))&1U));#pragmaweakpthread_key_create#pragmaweakpthread_getspecific#pragmaweakpthread_setspecific#pragmaweakpthread_key_delete#pragmaweakpthread_self#pragmaweakpthread_cancelexternint(__attribute__((__nonnull__(1)))open)(charconst*__file,int__oflag,...);int__attribute__((__pure__))strnumcmp(charconst*a,charconst*b,intdecimal_point___0,intthousands_sep___0);__inlinestaticint__attribute__((__pure__))fraccompare(charconst*a,charconst*b,chardecimal_point___0)charconst*tmp;charconst*tmp___0;if((intconst)*a==(intconst)decimal_point___0)if((intconst)*b==(intconst)decimal_point___0)while(1)a++;b++;if(!((intconst)*a==(intconst)*b))gotowhile_break;if(!((unsignedint)*a-48U<=9U))return((int__attribute__((__pure__)))0);while_break:;if((unsignedint)*a-48U<=9U)if((unsignedint)*b-48U<=9U)return((int__attribute__((__pure__)))((intconst)*a-(intconst)*b));if((unsignedint)*a-48U<=9U)gotoa_trailing_nonzero;if((unsignedint)*b-48U<=9U)gotob_trailing_nonzero;return((int__attribute__((__pure__)))0);elsegoto_L;else_L:tmp___0=a;a++;if((intconst)*tmp___0==(intconst)decimal_point___0)a_trailing_nonzero:while(1)if(!((intconst)*a==48))gotowhile_break___0;a++;while_break___0:;return((int__attribute__((__pure__)))((unsignedint)*a-48U<=9U));elsetmp=b;b++;if((intconst)*tmp==(intconst)decimal_point___0)b_trailing_nonzero:while(1)if(!((intconst)*b==48))gotowhile_break___1;b++;while_break___1:;return((int__attribute__((__pure__)))(-((unsignedint)*b-48U<=9U)));return((int__attribute__((__pure__)))0);__inlinestaticint__attribute__((__pure__))numcompare(charconst*a,charconst*b,intdecimal_point___0,intthousands_sep___0)unsignedchartmpa;unsignedchartmpb;inttmp;size_tlog_a;size_tlog_b;int__attribute__((__pure__))tmp___0;inttmp___1;int__attribute__((__pure__))tmp___2;inttmp___3;tmpa=(unsignedchar)*a;tmpb=(unsignedchar)*b;if((int)tmpa==45)while(1)a++;tmpa=(unsignedchar)*a;if(!((int)tmpa==48))if(!((int)tmpa==thousands_sep___0))gotowhile_break;while_break:;if((int)tmpb!=45)if((int)tmpa==decimal_point___0)while(1)a++;tmpa=(unsignedchar)*a;if(!((int)tmpa==48))gotowhile_break___0;while_break___0:;if((unsignedint)tmpa-48U<=9U)return((int__attribute__((__pure__)))-1);while(1)if(!((int)tmpb==48))if(!((int)tmpb==thousands_sep___0))gotowhile_break___1;b++;tmpb=(unsignedchar)*b;while_break___1:;if((int)tmpb==decimal_point___0)while(1)b++;tmpb=(unsignedchar)*b;if(!((int)tmpb==48))gotowhile_break___2;while_break___2:;return((int__attribute__((__pure__)))(-((unsignedint)tmpb-48U<=9U)));while(1)b++;tmpb=(unsignedchar)*b;if(!((int)tmpb==48))if(!((int)tmpb==thousands_sep___0))gotowhile_break___3;while_break___3:;while(1)if((int)tmpa==(int)tmpb)if(!((unsignedint)tmpa-48U<=9U))gotowhile_break___4;elsegotowhile_break___4;while(1)a++;tmpa=(unsignedchar)*a;if(!((int)tmpa==thousands_sep___0))gotowhile_break___5;while_break___5:;while(1)b++;tmpb=(unsignedchar)*b;if(!((int)tmpb==thousands_sep___0))gotowhile_break___6;while_break___6:;while_break___4:;if((int)tmpa==decimal_point___0)if(!((unsignedint)tmpb-48U<=9U))tmp___0=fraccompare(b,a,(char)decimal_point___0);return(tmp___0);elsegoto_L;else_L:if((int)tmpb==decimal_point___0)if(!((unsignedint)tmpa-48U<=9U))tmp___0=fraccompare(b,a,(char)decimal_point___0);return(tmp___0);tmp=(int)tmpb-(int)tmpa;log_a=(size_t)0;while(1)if(!((unsignedint)tmpa-48U<=9U))gotowhile_break___7;while(1)a++;tmpa=(unsignedchar)*a;if(!((int)tmpa==thousands_sep___0))gotowhile_break___8;while_break___8:log_a++;while_break___7:log_b=(size_t)0;while(1)if(!((unsignedint)tmpb-48U<=9U))gotowhile_break___9;while(1)b++;tmpb=(unsignedchar)*b;if(!((int)tmpb==thousands_sep___0))gotowhile_break___10;while_break___10:log_b++;while_break___9:;if(log_a!=log_b)if(log_a<log_b)tmp___1=1;elsetmp___1=-1;return((int__attribute__((__pure__)))tmp___1);if(!log_a)return((int__attribute__((__pure__)))0);return((int__attribute__((__pure__)))tmp);elseif((int)tmpb==45)while(1)b++;tmpb=(unsignedchar)*b;if(!((int)tmpb==48))if(!((int)tmpb==thousands_sep___0))gotowhile_break___11;while_break___11:;if((int)tmpb==decimal_point___0)while(1)b++;tmpb=(unsignedchar)*b;if(!((int)tmpb==48))gotowhile_break___12;while_break___12:;if((unsignedint)tmpb-48U<=9U)return((int__attribute__((__pure__)))1);while(1)if(!((int)tmpa==48))if(!((int)tmpa==thousands_sep___0))gotowhile_break___13;a++;tmpa=(unsignedchar)*a;while_break___13:;if((int)tmpa==decimal_point___0)while(1)a++;tmpa=(unsignedchar)*a;if(!((int)tmpa==48))gotowhile_break___14;while_break___14:;return((int__attribute__((__pure__)))((unsignedint)tmpa-48U<=9U));elsewhile(1)if(!((int)tmpa==48))if(!((int)tmpa==thousands_sep___0))gotowhile_break___15;a++;tmpa=(unsignedchar)*a;while_break___15:;while(1)if(!((int)tmpb==48))if(!((int)tmpb==thousands_sep___0))gotowhile_break___16;b++;tmpb=(unsignedchar)*b;while_break___16:;while(1)if((int)tmpa==(int)tmpb)if(!((unsignedint)tmpa-48U<=9U))gotowhile_break___17;elsegotowhile_break___17;while(1)a++;tmpa=(unsignedchar)*a;if(!((int)tmpa==thousands_sep___0))gotowhile_break___18;while_break___18:;while(1)b++;tmpb=(unsignedchar)*b;if(!((int)tmpb==thousands_sep___0))gotowhile_break___19;while_break___19:;while_break___17:;if((int)tmpa==decimal_point___0)if(!((unsignedint)tmpb-48U<=9U))tmp___2=fraccompare(a,b,(char)decimal_point___0);return(tmp___2);elsegoto_L___0;else_L___0:if((int)tmpb==decimal_point___0)if(!((unsignedint)tmpa-48U<=9U))tmp___2=fraccompare(a,b,(char)decimal_point___0);return(tmp___2);tmp=(int)tmpa-(int)tmpb;log_a=(size_t)0;while(1)if(!((unsignedint)tmpa-48U<=9U))gotowhile_break___20;while(1)a++;tmpa=(unsignedchar)*a;if(!((int)tmpa==thousands_sep___0))gotowhile_break___21;while_break___21:log_a++;while_break___20:log_b=(size_t)0;while(1)if(!((unsignedint)tmpb-48U<=9U))gotowhile_break___22;while(1)b++;tmpb=(unsignedchar)*b;if(!((int)tmpb==thousands_sep___0))gotowhile_break___23;while_break___23:log_b++;while_break___22:;if(log_a!=log_b)if(log_a<log_b)tmp___3=-1;elsetmp___3=1;return((int__attribute__((__pure__)))tmp___3);if(!log_a)return((int__attribute__((__pure__)))0);return((int__attribute__((__pure__)))tmp);int__attribute__((__pure__))strnumcmp(charconst*a,charconst*b,intdecimal_point___0,intthousands_sep___0)int__attribute__((__pure__))tmp;tmp=numcompare(a,b,decimal_point___0,thousands_sep___0);return(tmp);size_tstrnlen1(charconst*string,size_tmaxlen)__attribute__((__pure__));size_tstrnlen1(charconst*string,size_tmaxlen)__attribute__((__pure__));size_tstrnlen1(charconst*string,size_tmaxlen)charconst*end;charconst*tmp;tmp=(charconst*)memchr((voidconst*)string,'\000',maxlen);end=tmp;if((unsignedlong)end!=(unsignedlong)((void*)0))return((size_t)((end-string)+1L));elsereturn(maxlen);extern__attribute__((__nothrow__))int(__attribute__((__leaf__))tolower)(int__c);extern__attribute__((__nothrow__))int(__attribute__((__leaf__))toupper)(int__c);extern__attribute__((__nothrow__))int(__attribute__((__leaf__))sigprocmask)(int__how,sigset_tconst*__restrict__set,sigset_t*__restrict__oset);externsize_tfread_unlocked(void*__restrict__ptr,size_t__size,size_t__n,FILE*__restrict__stream);extern__attribute__((__nothrow__))int(__attribute__((__leaf__))feof_unlocked)(FILE*__stream);__inlinestaticvoidset_uint32(char*cp,uint32_tv)memcpy((void*)cp,(voidconst*)(&v),sizeof(v));return;extern__attribute__((__nothrow__))int(__attribute__((__leaf__))raise)(int__sig);extern__attribute__((__nothrow__))__pid_tfork(void);externssize_tread(int__fd,void*__buf,size_t__nbytes);extern__attribute__((__nothrow__))int(__attribute__((__nonnull__(1),__leaf__))unlink)(charconst*__name);externintfgetc(FILE*__stream);externvoid_obstack_newchunk(structobstack*,int);externint_obstack_begin(structobstack*,int,int,void*(*)(long),void(*)(void*));voidreadtokens0_init(structTokens*t);_Boolreadtokens0(FILE*in,structTokens*t);voidreadtokens0_init(structTokens*t)t->n_tok=(size_t)0;t->tok=(char**)((void*)0);t->tok_len=(size_t*)((void*)0);_obstack_begin(&t->o_data,0,0,(void*(*)(long))(&malloc),(void(*)(void*))(&free));_obstack_begin(&t->o_tok,0,0,(void*(*)(long))(&malloc),(void(*)(void*))(&free));_obstack_begin(&t->o_tok_len,0,0,(void*(*)(long))(&malloc),(void(*)(void*))(&free));return;staticvoidsave_token(structTokens*t)size_tlen;structobstackconst*__o;charconst*s;structobstack*__o1;void*__value;char*tmp;char*tmp___0;structobstack*__o___0;structobstack*__o1___0;structobstack*__o___1;int__len;__o=(structobstackconst*)(&t->o_data);len=(size_t)((unsignedint)(__o->next_free-__o->object_base)-1U);__o1=&t->o_data;__value=(void*)__o1->object_base;if((unsignedlong)__o1->next_free==(unsignedlong)__value)__o1->maybe_empty_object=1U;if(sizeof(long)<sizeof(void*))tmp=__o1->object_base;elsetmp=(char*)0;if(sizeof(long)<sizeof(void*))tmp___0=__o1->object_base;elsetmp___0=(char*)0;__o1->next_free=tmp+(((__o1->next_free-tmp___0)+(long)__o1->alignment_mask)&(long)(~__o1->alignment_mask));if(__o1->next_free-(char*)__o1->chunk>__o1->chunk_limit-(char*)__o1->chunk)__o1->next_free=__o1->chunk_limit;__o1->object_base=__o1->next_free;s=(charconst*)__value;__o___0=&t->o_tok;if((unsignedlong)(__o___0->next_free+sizeof(void*))>(unsignedlong)__o___0->chunk_limit)_obstack_newchunk(__o___0,(int)sizeof(void*));__o1___0=__o___0;*((voidconst**)__o1___0->next_free)=(voidconst*)s;__o1___0->next_free+=sizeof(voidconst*);__o___1=&t->o_tok_len;__len=(int)sizeof(len);if((unsignedlong)(__o___1->next_free+__len)>(unsignedlong)__o___1->chunk_limit)_obstack_newchunk(__o___1,__len);memcpy((void*)__o___1->next_free,(voidconst*)(&len),(size_t)__len);__o___1->next_free+=__len;(t->n_tok)++;return;_Boolreadtokens0(FILE*in,structTokens*t)intc;inttmp;size_tlen;structobstackconst*__o;structobstack*__o___0;char*tmp___0;structobstack*__o___1;char*tmp___1;structobstack*__o___2;structobstack*__o1;structobstack*__o1___0;void*__value;char*tmp___2;char*tmp___3;structobstack*__o1___1;void*__value___0;char*tmp___4;char*tmp___5;inttmp___6;inttmp___7;while(1)tmp=fgetc(in);c=tmp;if(c==-1)__o=(structobstackconst*)(&t->o_data);len=(size_t)((unsignedint)(__o->next_free-__o->object_base));if(len)__o___0=&t->o_data;if((unsignedlong)(__o___0->next_free+1)>(unsignedlong)__o___0->chunk_limit)_obstack_newchunk(__o___0,1);tmp___0=__o___0->next_free;(__o___0->next_free)++;*tmp___0=(char)'\000';save_token(t);gotowhile_break;__o___1=&t->o_data;if((unsignedlong)(__o___1->next_free+1)>(unsignedlong)__o___1->chunk_limit)_obstack_newchunk(__o___1,1);tmp___1=__o___1->next_free;(__o___1->next_free)++;*tmp___1=(char)c;if(c==0)save_token(t);while_break:__o___2=&t->o_tok;if((unsignedlong)(__o___2->next_free+sizeof(void*))>(unsignedlong)__o___2->chunk_limit)_obstack_newchunk(__o___2,(int)sizeof(void*));__o1=__o___2;*((voidconst**)__o1->next_free)=(voidconst*)((void*)0);__o1->next_free+=sizeof(voidconst*);__o1___0=&t->o_tok;__value=(void*)__o1___0->object_base;if((unsignedlong)__o1___0->next_free==(unsignedlong)__value)__o1___0->maybe_empty_object=1U;if(sizeof(long)<sizeof(void*))tmp___2=__o1___0->object_base;elsetmp___2=(char*)0;if(sizeof(long)<sizeof(void*))tmp___3=__o1___0->object_base;elsetmp___3=(char*)0;__o1___0->next_free=tmp___2+(((__o1___0->next_free-tmp___3)+(long)__o1___0->alignment_mask)&(long)(~__o1___0->alignment_mask));if(__o1___0->next_free-(char*)__o1___0->chunk>__o1___0->chunk_limit-(char*)__o1___0->chunk)__o1___0->next_free=__o1___0->chunk_limit;__o1___0->object_base=__o1___0->next_free;t->tok=(char**)__value;__o1___1=&t->o_tok_len;__value___0=(void*)__o1___1->object_base;if((unsignedlong)__o1___1->next_free==(unsignedlong)__value___0)__o1___1->maybe_empty_object=1U;if(sizeof(long)<sizeof(void*))tmp___4=__o1___1->object_base;elsetmp___4=(char*)0;if(sizeof(long)<sizeof(void*))tmp___5=__o1___1->object_base;elsetmp___5=(char*)0;__o1___1->next_free=tmp___4+(((__o1___1->next_free-tmp___5)+(long)__o1___1->alignment_mask)&(long)(~__o1___1->alignment_mask));if(__o1___1->next_free-(char*)__o1___1->chunk>__o1___1->chunk_limit-(char*)__o1___1->chunk)__o1___1->next_free=__o1___1->chunk_limit;__o1___1->object_base=__o1___1->next_free;t->tok_len=(size_t*)__value___0;tmp___6=ferror(in);if(tmp___6)tmp___7=0;elsetmp___7=1;return((_Bool)tmp___7);externintgetc_unlocked(FILE*__stream);externFILE*fopen(charconst*__restrict__filename,charconst*__restrict__modes);extern__attribute__((__nothrow__))int(__attribute__((__leaf__))fileno)(FILE*__stream);structrandread_source*randread_new(charconst*name,size_tbytes_bound);voidrandread(structrandread_source*s,void*buf___1,size_tsize);intrandread_free(structrandread_source*s);extern__attribute__((__nothrow__))int(__attribute__((__leaf__))setvbuf)(FILE*__restrict__stream,char*__restrict__buf,int__modes,size_t__n);extern__attribute__((__nothrow__))int(__attribute__((__nonnull__(1),__leaf__))gettimeofday)(structtimeval*__restrict__tv,__timezone_ptr_t__tz);extern__attribute__((__nothrow__))__pid_t(__attribute__((__leaf__))getpid)(void);extern__attribute__((__nothrow__))__pid_t(__attribute__((__leaf__))getppid)(void);extern__attribute__((__nothrow__))__uid_t(__attribute__((__leaf__))getuid)(void);extern__attribute__((__nothrow__))__gid_t(__attribute__((__leaf__))getgid)(void);voidisaac_seed(structisaac_state*s);voidisaac_refill(structisaac_state*s,isaac_word*result);FILE*fopen_safer(charconst*file,charconst*mode);staticvoidrandread_error(voidconst*file_name___3)char*tmp;charconst*tmp___1;int*tmp___2;char*tmp___3;int*tmp___4;if(file_name___3)tmp=quotearg_colon(file_name___3);tmp___2=__errno_location();if(*tmp___2==0)tmp___1="%s:endoffile";elsetmp___1="%s:readerror";tmp___3=gettext(tmp___1);tmp___4=__errno_location();error(exit_failure,*tmp___4,tmp___3,tmp);abort();staticstructrandread_source*simple_new(FILE*source,voidconst*handler_arg)structrandread_source*s;structrandread_source*tmp;tmp=(structrandread_source*)xmalloc(sizeof(*s));s=tmp;s->source=source;s->handler=&randread_error;s->handler_arg=handler_arg;return(s);staticvoidget_nonce(void*buffer,size_tbufsize___1,size_tbytes_bound)char*buf___1;ssize_tseeded;intfd;inttmp;size_ttmp___0;structtimevalv;size_tnbytes;unsignedlongtmp___1;pid_tv___0;size_tnbytes___0;unsignedlongtmp___2;pid_tv___1;size_tnbytes___1;unsignedlongtmp___3;uid_tv___2;size_tnbytes___2;unsignedlongtmp___4;uid_tv___3;size_tnbytes___3;unsignedlongtmp___5;buf___1=(char*)buffer;seeded=(ssize_t)0;tmp=open("/dev/urandom",0);fd=tmp;if(0<=fd)if(bufsize___1<bytes_bound)tmp___0=bufsize___1;elsetmp___0=bytes_bound;seeded=read(fd,(void*)buf___1,tmp___0);if(seeded<0L)seeded=(ssize_t)0;close(fd);if((size_t)seeded<bufsize___1)if(sizeof(v)<bufsize___1-(size_t)seeded)tmp___1=sizeof(v);elsetmp___1=bufsize___1-(size_t)seeded;nbytes=tmp___1;gettimeofday(&v,(__timezone_ptr_t)((void*)0));memcpy((void*)(buf___1+seeded),(voidconst*)(&v),nbytes);seeded=(ssize_t)((size_t)seeded+nbytes);if((size_t)seeded<bufsize___1)if(sizeof(v___0)<bufsize___1-(size_t)seeded)tmp___2=sizeof(v___0);elsetmp___2=bufsize___1-(size_t)seeded;nbytes___0=tmp___2;v___0=getpid();memcpy((void*)(buf___1+seeded),(voidconst*)(&v___0),nbytes___0);seeded=(ssize_t)((size_t)seeded+nbytes___0);if((size_t)seeded<bufsize___1)if(sizeof(v___1)<bufsize___1-(size_t)seeded)tmp___3=sizeof(v___1);elsetmp___3=bufsize___1-(size_t)seeded;nbytes___1=tmp___3;v___1=getppid();memcpy((void*)(buf___1+seeded),(voidconst*)(&v___1),nbytes___1);seeded=(ssize_t)((size_t)seeded+nbytes___1);if((size_t)seeded<bufsize___1)if(sizeof(v___2)<bufsize___1-(size_t)seeded)tmp___4=sizeof(v___2);elsetmp___4=bufsize___1-(size_t)seeded;nbytes___2=tmp___4;v___2=getuid();memcpy((void*)(buf___1+seeded),(voidconst*)(&v___2),nbytes___2);seeded=(ssize_t)((size_t)seeded+nbytes___2);if((size_t)seeded<bufsize___1)if(sizeof(v___3)<bufsize___1-(size_t)seeded)tmp___5=sizeof(v___3);elsetmp___5=bufsize___1-(size_t)seeded;nbytes___3=tmp___5;v___3=getgid();memcpy((void*)(buf___1+seeded),(voidconst*)(&v___3),nbytes___3);seeded=(ssize_t)((size_t)seeded+nbytes___3);return;structrandread_source*randread_new(charconst*name,size_tbytes_bound)structrandread_source*tmp;FILE*source;structrandread_source*s;unsignedlongtmp___0;if(bytes_bound==0UL)tmp=simple_new((FILE*)((void*)0),(voidconst*)((void*)0));return(tmp);elsesource=(FILE*)((void*)0);if(name)source=fopen_safer(name,"rb");if(!source)return((structrandread_source*)((void*)0));s=simple_new(source,(voidconst*)name);if(source)if(sizeof(s->buf.c)<bytes_bound)tmp___0=sizeof(s->buf.c);elsetmp___0=bytes_bound;setvbuf(source,s->buf.c,0,tmp___0);elses->buf.isaac.buffered=(size_t)0;get_nonce((void*)(s->buf.isaac.state.m),sizeof(s->buf.isaac.state.m),bytes_bound);isaac_seed(&s->buf.isaac.state);return(s);staticvoidreadsource(structrandread_source*s,unsignedchar*p,size_tsize)size_tinbytes;size_ttmp;intfread_errno;int*tmp___0;int*tmp___1;inttmp___3;while(1)tmp=fread_unlocked((void*)p,sizeof(*p),size,s->source);inbytes=tmp;tmp___0=__errno_location();fread_errno=*tmp___0;p+=inbytes;size-=inbytes;if(size==0UL)gotowhile_break;tmp___1=__errno_location();tmp___3=ferror_unlocked(s->source);if(tmp___3)*tmp___1=fread_errno;else*tmp___1=0;(*(s->handler))(s->handler_arg);while_break:;return;staticvoidreadisaac(structisaac*isaac,unsignedchar*p,size_tsize)size_tinbytes;isaac_word*wp;inbytes=isaac->buffered;while(1)if(size<=inbytes)memcpy((void*)p,(voidconst*)((isaac->data.b+(unsignedlong)(1<<8)*sizeof(isaac_word))-inbytes),size);isaac->buffered=inbytes-size;return;memcpy((void*)p,(voidconst*)((isaac->data.b+(unsignedlong)(1<<8)*sizeof(isaac_word))-inbytes),inbytes);p+=inbytes;size-=inbytes;wp=(isaac_word*)p;while(1)if(!((unsignedlong)(1<<8)*sizeof(isaac_word)<=size))gotowhile_break___0;isaac_refill(&isaac->state,wp);wp+=1<<8;size-=(unsignedlong)(1<<8)*sizeof(isaac_word);if(size==0UL)isaac->buffered=(size_t)0;return;while_break___0:p=(unsignedchar*)wp;isaac_refill(&isaac->state,isaac->data.w);inbytes=(unsignedlong)(1<<8)*sizeof(isaac_word);return;voidrandread(structrandread_source*s,void*buf___1,size_tsize)if(s->source)readsource(s,(unsignedchar*)buf___1,size);elsereadisaac(&s->buf.isaac,(unsignedchar*)buf___1,size);return;intrandread_free(structrandread_source*s)FILE*source;inttmp;inttmp___0;source=s->source;memset((void*)s,0,sizeof(*s));free((void*)s);if(source)tmp=rpl_fclose(source);tmp___0=tmp;elsetmp___0=0;return(tmp___0);void*hash_delete(Hash_table*table___0,voidconst*entry);__inlinestaticisaac_wordjust(isaac_worda)isaac_worddesired_bits;desired_bits=((1UL<<1)<<((1<<6)-1))-1UL;return(a&desired_bits);__inlinestaticisaac_wordind(isaac_wordconst*m,isaac_wordx)isaac_wordtmp;if(sizeof(*m)*8UL==(unsignedlong)(1<<6))tmp=*((isaac_word*)((char*)m+(x&(unsignedlong)((1<<8)-1)*sizeof(*m))));elsetmp=(isaac_word)*(m+(x/(isaac_word)((1<<6)/8)&(unsignedlong)((1<<8)-1)));return(tmp);voidisaac_refill(structisaac_state*s,isaac_word*result)isaac_worda;isaac_wordb;isaac_word*m;isaac_word*r;isaac_wordx;isaac_wordy;isaac_wordtmp;isaac_wordtmp___0;isaac_wordtmp___1;isaac_wordtmp___2;isaac_wordx___0;isaac_wordy___0;isaac_wordtmp___3;isaac_wordtmp___4;isaac_wordtmp___5;isaac_wordtmp___6;isaac_wordtmp___7;isaac_wordtmp___8;isaac_wordx___1;isaac_wordy___1;isaac_wordtmp___9;isaac_wordtmp___10;isaac_wordtmp___11;isaac_wordtmp___12;isaac_wordx___2;isaac_wordy___2;isaac_wordtmp___13;isaac_wordtmp___14;isaac_wordtmp___15;isaac_wordtmp___16;isaac_wordtmp___17;isaac_wordtmp___18;isaac_wordx___3;isaac_wordy___3;isaac_wordtmp___19;isaac_wordtmp___20;isaac_wordtmp___21;isaac_wordtmp___22;isaac_wordx___4;isaac_wordy___4;isaac_wordtmp___23;isaac_wordtmp___24;isaac_wordtmp___25;isaac_wordtmp___26;isaac_wordtmp___27;isaac_wordtmp___28;isaac_wordx___5;isaac_wordy___5;isaac_wordtmp___29;isaac_wordtmp___30;isaac_wordtmp___31;isaac_wordtmp___32;isaac_wordx___6;isaac_wordy___6;isaac_wordtmp___33;isaac_wordtmp___34;isaac_wordtmp___35;isaac_wordtmp___36;isaac_wordtmp___37;isaac_wordtmp___38;a=s->a;(s->c)++;b=s->b+s->c;m=s->m;r=result;while(1)if(1<<6==32)tmp=a;elsetmp=(isaac_word)0;if(1<<6==32)tmp___0=a<<13;elsetmp___0=~(a^(a<<21));a=(tmp^tmp___0)+*(m+128);x=*(m+0);tmp___1=ind((isaac_wordconst*)(s->m),x);y=(tmp___1+a)+b;*(m+0)=y;tmp___2=ind((isaac_wordconst*)(s->m),y>>8);b=just(tmp___2+x);*(r+0)=b;if(1<<6==32)tmp___3=a;elsetmp___3=(isaac_word)0;if(1<<6==32)tmp___4=just(a);tmp___6=tmp___4>>6;elsetmp___5=just(a);tmp___6=a^(tmp___5>>5);a=(tmp___3^tmp___6)+*(m+129);x___0=*(m+1);tmp___7=ind((isaac_wordconst*)(s->m),x___0);y___0=(tmp___7+a)+b;*(m+1)=y___0;tmp___8=ind((isaac_wordconst*)(s->m),y___0>>8);b=just(tmp___8+x___0);*(r+1)=b;if(1<<6==32)tmp___9=a;elsetmp___9=(isaac_word)0;if(1<<6==32)tmp___10=a<<2;elsetmp___10=a^(a<<12);a=(tmp___9^tmp___10)+*(m+130);x___1=*(m+2);tmp___11=ind((isaac_wordconst*)(s->m),x___1);y___1=(tmp___11+a)+b;*(m+2)=y___1;tmp___12=ind((isaac_wordconst*)(s->m),y___1>>8);b=just(tmp___12+x___1);*(r+2)=b;if(1<<6==32)tmp___13=a;elsetmp___13=(isaac_word)0;if(1<<6==32)tmp___14=just(a);tmp___16=tmp___14>>16;elsetmp___15=just(a);tmp___16=a^(tmp___15>>33);a=(tmp___13^tmp___16)+*(m+131);x___2=*(m+3);tmp___17=ind((isaac_wordconst*)(s->m),x___2);y___2=(tmp___17+a)+b;*(m+3)=y___2;tmp___18=ind((isaac_wordconst*)(s->m),y___2>>8);b=just(tmp___18+x___2);*(r+3)=b;r+=4;m+=4;if(!((unsignedlong)m<(unsignedlong)(s->m+128)))gotowhile_break;while_break:;while(1)if(1<<6==32)tmp___19=a;elsetmp___19=(isaac_word)0;if(1<<6==32)tmp___20=a<<13;elsetmp___20=~(a^(a<<21));a=(tmp___19^tmp___20)+*(m+-128);x___3=*(m+0);tmp___21=ind((isaac_wordconst*)(s->m),x___3);y___3=(tmp___21+a)+b;*(m+0)=y___3;tmp___22=ind((isaac_wordconst*)(s->m),y___3>>8);b=just(tmp___22+x___3);*(r+0)=b;if(1<<6==32)tmp___23=a;elsetmp___23=(isaac_word)0;if(1<<6==32)tmp___24=just(a);tmp___26=tmp___24>>6;elsetmp___25=just(a);tmp___26=a^(tmp___25>>5);a=(tmp___23^tmp___26)+*(m+-127);x___4=*(m+1);tmp___27=ind((isaac_wordconst*)(s->m),x___4);y___4=(tmp___27+a)+b;*(m+1)=y___4;tmp___28=ind((isaac_wordconst*)(s->m),y___4>>8);b=just(tmp___28+x___4);*(r+1)=b;if(1<<6==32)tmp___29=a;elsetmp___29=(isaac_word)0;if(1<<6==32)tmp___30=a<<2;elsetmp___30=a^(a<<12);a=(tmp___29^tmp___30)+*(m+-126);x___5=*(m+2);tmp___31=ind((isaac_wordconst*)(s->m),x___5);y___5=(tmp___31+a)+b;*(m+2)=y___5;tmp___32=ind((isaac_wordconst*)(s->m),y___5>>8);b=just(tmp___32+x___5);*(r+2)=b;if(1<<6==32)tmp___33=a;elsetmp___33=(isaac_word)0;if(1<<6==32)tmp___34=just(a);tmp___36=tmp___34>>16;elsetmp___35=just(a);tmp___36=a^(tmp___35>>33);a=(tmp___33^tmp___36)+*(m+-125);x___6=*(m+3);tmp___37=ind((isaac_wordconst*)(s->m),x___6);y___6=(tmp___37+a)+b;*(m+3)=y___6;tmp___38=ind((isaac_wordconst*)(s->m),y___6>>8);b=just(tmp___38+x___6);*(r+3)=b;r+=4;m+=4;if(!((unsignedlong)m<(unsignedlong)(s->m+(1<<8))))gotowhile_break___0;while_break___0:s->a=a;s->b=b;return;voidisaac_seed(structisaac_state*s)isaac_worda;unsignedlongtmp;isaac_wordb;unsignedlongtmp___0;isaac_wordc;unsignedlongtmp___1;isaac_wordd;unsignedlongtmp___2;isaac_worde;unsignedlongtmp___3;isaac_wordf;unsignedlongtmp___4;isaac_wordg;unsignedlongtmp___5;isaac_wordh;unsignedlongtmp___6;inti;isaac_wordtmp___7;isaac_wordtmp___8;isaac_wordtmp___9;isaac_wordtmp___10;inti___0;isaac_wordtmp___11;isaac_wordtmp___12;isaac_wordtmp___13;isaac_wordtmp___14;isaac_wordtmp___15;isaac_wordtmp___16;if(1<<6==32)tmp=325574490UL;elsetmp=7240739780546808700UL;a=tmp;if(1<<6==32)tmp___0=2514026585UL;elsetmp___0=0xb9f8b322c73ac862UL;b=tmp___0;if(1<<6==32)tmp___1=3273014859UL;elsetmp___1=0x8c0ea5053d4712a0UL;c=tmp___1;if(1<<6==32)tmp___2=255990488UL;elsetmp___2=0xb29b2e824a595524UL;d=tmp___2;if(1<<6==32)tmp___3=3643427448UL;elsetmp___3=0x82f053db8355e0ceUL;e=tmp___3;if(1<<6==32)tmp___4=2769960009UL;elsetmp___4=5259722845879046933UL;f=tmp___4;if(1<<6==32)tmp___5=3304057371UL;elsetmp___5=0xae985bf2cbfc89edUL;g=tmp___5;if(1<<6==32)tmp___6=811634969UL;elsetmp___6=0x98f5704f6c44c0abUL;h=tmp___6;i=0;while(1)if(!(i<1<<8))gotowhile_break;a+=s->m[i];b+=s->m[i+1];c+=s->m[i+2];d+=s->m[i+3];e+=s->m[i+4];f+=s->m[i+5];g+=s->m[i+6];h+=s->m[i+7];a-=e;tmp___7=just(h);f^=tmp___7>>9;h+=a;b-=f;g^=a<<9;a+=b;c-=g;tmp___8=just(b);h^=tmp___8>>23;b+=c;d-=h;a^=c<<15;c+=d;e-=a;tmp___9=just(d);b^=tmp___9>>14;d+=e;f-=b;c^=e<<20;e+=f;g-=c;tmp___10=just(f);d^=tmp___10>>17;f+=g;h-=d;e^=g<<14;g+=h;s->m[i]=a;s->m[i+1]=b;s->m[i+2]=c;s->m[i+3]=d;s->m[i+4]=e;s->m[i+5]=f;s->m[i+6]=g;s->m[i+7]=h;i+=8;while_break:i___0=0;while(1)if(!(i___0<1<<8))gotowhile_break___0;a+=s->m[i___0];b+=s->m[i___0+1];c+=s->m[i___0+2];d+=s->m[i___0+3];e+=s->m[i___0+4];f+=s->m[i___0+5];g+=s->m[i___0+6];h+=s->m[i___0+7];a-=e;tmp___11=just(h);f^=tmp___11>>9;h+=a;b-=f;g^=a<<9;a+=b;c-=g;tmp___12=just(b);h^=tmp___12>>23;b+=c;d-=h;a^=c<<15;c+=d;e-=a;tmp___13=just(d);b^=tmp___13>>14;d+=e;f-=b;c^=e<<20;e+=f;g-=c;tmp___14=just(f);d^=tmp___14>>17;f+=g;h-=d;e^=g<<14;g+=h;s->m[i___0]=a;s->m[i___0+1]=b;s->m[i___0+2]=c;s->m[i___0+3]=d;s->m[i___0+4]=e;s->m[i___0+5]=f;s->m[i___0+6]=g;s->m[i___0+7]=h;i___0+=8;while_break___0:tmp___16=(isaac_word)0;s->c=tmp___16;tmp___15=tmp___16;s->b=tmp___15;s->a=tmp___15;return;#pragmaGCCdiagnosticignored"-Wsuggest-attribute=pure"charconst*constquoting_style_args[9];enumquoting_styleconstquoting_style_vals[8];intset_char_quoting(structquoting_options*o,charc,inti);char*quotearg_char(charconst*arg,charch);char*quotearg_char_mem(charconst*arg,size_targsize,charch);structquoting_optionsquote_quoting_options;__inlinestaticchar*xcharalloc(size_tn)__attribute__((__malloc__,__alloc_size__(1)));__inlinestaticchar*xcharalloc(size_tn)__attribute__((__malloc__,__alloc_size__(1)));__inlinestaticchar*xcharalloc(size_tn)void*tmp;void*tmp___0;void*tmp___1;if(sizeof(char)==1UL)tmp=xmalloc(n);tmp___1=tmp;elsetmp___0=xnmalloc(n,sizeof(char));tmp___1=tmp___0;return((char*)tmp___1);extern__attribute__((__nothrow__))int(__attribute__((__leaf__))iswprint)(wint_t__wc);charconst*constquoting_style_args[9]="literal","shell","shell-always","c","c-maybe","escape","locale","clocale",(charconst*)0;enumquoting_styleconstquoting_style_vals[8]=(enumquoting_styleconst)0,(enumquoting_styleconst)1,(enumquoting_styleconst)2,(enumquoting_styleconst)3,(enumquoting_styleconst)4,(enumquoting_styleconst)5,(enumquoting_styleconst)6,(enumquoting_styleconst)7;staticstructquoting_optionsdefault_quoting_options;intset_char_quoting(structquoting_options*o,charc,inti)unsignedcharuc;unsignedint*p;structquoting_options*tmp;intshift;intr;uc=(unsignedchar)c;if(o)tmp=o;elsetmp=&default_quoting_options;p=tmp->quote_these_too+(unsignedlong)uc/(sizeof(int)*8UL);shift=(int)((unsignedlong)uc%(sizeof(int)*8UL));r=(int)((*p>>shift)&1U);*p^=(unsignedint)(((i&1)^r)<<shift);return(r);staticstructquoting_optionsquoting_options_from_style(enumquoting_stylestyle)structquoting_optionso;unsignedinttmp;o.style=(enumquoting_style)0;o.flags=0;o.quote_these_too[0]=0U;tmp=1U;while(1)if(!(!(tmp>=8U)))gotowhile_break;o.quote_these_too[tmp]=0U;tmp++;while_break:o.left_quote=(charconst*)((void*)0);o.right_quote=(charconst*)((void*)0);if((unsignedint)style==8U)abort();o.style=style;return(o);staticcharconst*gettext_quote(charconst*msgid,enumquoting_styles)charconst*translation;charconst*tmp;charconst*locale_code;charconst*tmp___0;inttmp___1;charconst*tmp___2;inttmp___3;charconst*tmp___4;tmp=(charconst*)gettext(msgid);translation=tmp;if((unsignedlong)translation!=(unsignedlong)msgid)return(translation);locale_code=locale_charset();tmp___1=c_strcasecmp(locale_code,"UTF-8");if(tmp___1==0)if((intconst)*(msgid+0)==96)tmp___0="\342\200\230";elsetmp___0="\342\200\231";return(tmp___0);tmp___3=c_strcasecmp(locale_code,"GB18030");if(tmp___3==0)if((intconst)*(msgid+0)==96)tmp___2="\241\ae";elsetmp___2="\241\257";return(tmp___2);if((unsignedint)s==7U)tmp___4="\"";elsetmp___4="\'";return(tmp___4);staticsize_tquotearg_buffer_restyled(char*buffer,size_tbuffersize,charconst*arg,size_targsize,enumquoting_stylequoting_style,intflags,unsignedintconst*quote_these_too,charconst*left_quote,charconst*right_quote)size_ti;size_tlen;charconst*quote_string;size_tquote_string_len;_Boolbackslash_escapes;_Boolunibyte_locale;size_ttmp;_Boolelide_outer_quotes;unsignedcharc;unsignedcharesc;_Boolis_right_quote;inttmp___0;inttmp___1;size_tm;_Boolprintable;unsignedshortconst**tmp___2;mbstate_tmbstate;wchar_tw;size_tbytes;size_ttmp___3;size_tj;inttmp___4;inttmp___5;size_tilim;inttmp___6;size_ttmp___7;len=(size_t)0;quote_string=(charconst*)0;quote_string_len=(size_t)0;backslash_escapes=(_Bool)0;tmp=__ctype_get_mb_cur_max();unibyte_locale=(_Bool)(tmp==1UL);elide_outer_quotes=(_Bool)((flags&2)!=0);if((unsignedint)quoting_style==4U)gotocase_4;if((unsignedint)quoting_style==3U)gotocase_3;if((unsignedint)quoting_style==5U)gotocase_5;if((unsignedint)quoting_style==6U)gotocase_6;if((unsignedint)quoting_style==7U)gotocase_6;if((unsignedint)quoting_style==8U)gotocase_6;if((unsignedint)quoting_style==1U)gotocase_1;if((unsignedint)quoting_style==2U)gotocase_2;if((unsignedint)quoting_style==0U)gotocase_0;gotoswitch_default;case_4:quoting_style=(enumquoting_style)3;elide_outer_quotes=(_Bool)1;case_3:if(!elide_outer_quotes)while(1)if(len<buffersize)*(buffer+len)=(char)'\"';len++;gotowhile_break;while_break:;backslash_escapes=(_Bool)1;quote_string="\"";quote_string_len=(size_t)1;gotoswitch_break;case_5:backslash_escapes=(_Bool)1;elide_outer_quotes=(_Bool)0;gotoswitch_break;case_6:if((unsignedint)quoting_style!=8U)left_quote=gettext_quote("`",quoting_style);right_quote=gettext_quote("\'",quoting_style);if(!elide_outer_quotes)quote_string=left_quote;while(1)if(!*quote_string)gotowhile_break___0;while(1)if(len<buffersize)*(buffer+len)=(char)*quote_string;len++;gotowhile_break___1;while_break___1:quote_string++;while_break___0:;backslash_escapes=(_Bool)1;quote_string=right_quote;quote_string_len=strlen(quote_string);gotoswitch_break;case_1:quoting_style=(enumquoting_style)2;elide_outer_quotes=(_Bool)1;case_2:if(!elide_outer_quotes)while(1)if(len<buffersize)*(buffer+len)=(char)'\'';len++;gotowhile_break___2;while_break___2:;quote_string="\'";quote_string_len=(size_t)1;gotoswitch_break;case_0:elide_outer_quotes=(_Bool)0;gotoswitch_break;switch_default:abort();switch_break:i=(size_t)0;while(1)if(argsize==0xffffffffffffffffUL)tmp___6=(intconst)*(arg+i)==0;elsetmp___6=i==argsize;if(tmp___6)gotowhile_break___3;is_right_quote=(_Bool)0;if(backslash_escapes)if(quote_string_len)if(i+quote_string_len<=argsize)tmp___0=memcmp((voidconst*)(arg+i),(voidconst*)quote_string,quote_string_len);if(tmp___0==0)if(elide_outer_quotes)gotoforce_outer_quoting_style;is_right_quote=(_Bool)1;c=(unsignedchar)*(arg+i);if((int)c==0)gotocase_0___0;if((int)c==63)gotocase_63;if((int)c==7)gotocase_7___0;if((int)c==8)gotocase_8___0;if((int)c==12)gotocase_12;if((int)c==10)gotocase_10;if((int)c==13)gotocase_13;if((int)c==9)gotocase_9;if((int)c==11)gotocase_11;if((int)c==92)gotocase_92;if((int)c==123)gotocase_123;if((int)c==125)gotocase_123;if((int)c==35)gotocase_35;if((int)c==126)gotocase_35;if((int)c==32)gotocase_32;if((int)c==33)gotocase_32;if((int)c==34)gotocase_32;if((int)c==36)gotocase_32;if((int)c==38)gotocase_32;if((int)c==40)gotocase_32;if((int)c==41)gotocase_32;if((int)c==42)gotocase_32;if((int)c==59)gotocase_32;if((int)c==60)gotocase_32;if((int)c==61)gotocase_32;if((int)c==62)gotocase_32;if((int)c==91)gotocase_32;if((int)c==94)gotocase_32;if((int)c==96)gotocase_32;if((int)c==124)gotocase_32;if((int)c==39)gotocase_39___0;if((int)c==37)gotocase_37;if((int)c==43)gotocase_37;if((int)c==44)gotocase_37;if((int)c==45)gotocase_37;if((int)c==46)gotocase_37;if((int)c==47)gotocase_37;if((int)c==48)gotocase_37;if((int)c==49)gotocase_37;if((int)c==50)gotocase_37;if((int)c==51)gotocase_37;if((int)c==52)gotocase_37;if((int)c==53)gotocase_37;if((int)c==54)gotocase_37;if((int)c==55)gotocase_37;if((int)c==56)gotocase_37;if((int)c==57)gotocase_37;if((int)c==58)gotocase_37;if((int)c==65)gotocase_37;if((int)c==66)gotocase_37;if((int)c==67)gotocase_37;if((int)c==68)gotocase_37;if((int)c==69)gotocase_37;if((int)c==70)gotocase_37;if((int)c==71)gotocase_37;if((int)c==72)gotocase_37;if((int)c==73)gotocase_37;if((int)c==74)gotocase_37;if((int)c==75)gotocase_37;if((int)c==76)gotocase_37;if((int)c==77)gotocase_37;if((int)c==78)gotocase_37;if((int)c==79)gotocase_37;if((int)c==80)gotocase_37;if((int)c==81)gotocase_37;if((int)c==82)gotocase_37;if((int)c==83)gotocase_37;if((int)c==84)gotocase_37;if((int)c==85)gotocase_37;if((int)c==86)gotocase_37;if((int)c==87)gotocase_37;if((int)c==88)gotocase_37;if((int)c==89)gotocase_37;if((int)c==90)gotocase_37;if((int)c==93)gotocase_37;if((int)c==95)gotocase_37;if((int)c==97)gotocase_37;if((int)c==98)gotocase_37;if((int)c==99)gotocase_37;if((int)c==100)gotocase_37;if((int)c==101)gotocase_37;if((int)c==102)gotocase_37;if((int)c==103)gotocase_37;if((int)c==104)gotocase_37;if((int)c==105)gotocase_37;if((int)c==106)gotocase_37;if((int)c==107)gotocase_37;if((int)c==108)gotocase_37;if((int)c==109)gotocase_37;if((int)c==110)gotocase_37;if((int)c==111)gotocase_37;if((int)c==112)gotocase_37;if((int)c==113)gotocase_37;if((int)c==114)gotocase_37;if((int)c==115)gotocase_37;if((int)c==116)gotocase_37;if((int)c==117)gotocase_37;if((int)c==118)gotocase_37;if((int)c==119)gotocase_37;if((int)c==120)gotocase_37;if((int)c==121)gotocase_37;if((int)c==122)gotocase_37;gotoswitch_default___2;case_0___0:if(backslash_escapes)if(elide_outer_quotes)gotoforce_outer_quoting_style;while(1)if(len<buffersize)*(buffer+len)=(char)'\\';len++;gotowhile_break___4;while_break___4:;if(i+1UL<argsize)if(48<=(int)*(arg+(i+1UL)))if((intconst)*(arg+(i+1UL))<=57)while(1)if(len<buffersize)*(buffer+len)=(char)'0';len++;gotowhile_break___5;while_break___5:;while(1)if(len<buffersize)*(buffer+len)=(char)'0';len++;gotowhile_break___6;while_break___6:;c=(unsignedchar)'0';elseif(flags&1)goto__Cont;gotoswitch_break___0;case_63:if((unsignedint)quoting_style==2U)gotocase_2___0;if((unsignedint)quoting_style==3U)gotocase_3___0;gotoswitch_default___1;case_2___0:if(elide_outer_quotes)gotoforce_outer_quoting_style;gotoswitch_break___1;case_3___0:if(flags&4)if(i+2UL<argsize)if((intconst)*(arg+(i+1UL))==63)if((intconst)*(arg+(i+2UL))==33)gotocase_33;if((intconst)*(arg+(i+2UL))==39)gotocase_33;if((intconst)*(arg+(i+2UL))==40)gotocase_33;if((intconst)*(arg+(i+2UL))==41)gotocase_33;if((intconst)*(arg+(i+2UL))==45)gotocase_33;if((intconst)*(arg+(i+2UL))==47)gotocase_33;if((intconst)*(arg+(i+2UL))==60)gotocase_33;if((intconst)*(arg+(i+2UL))==61)gotocase_33;if((intconst)*(arg+(i+2UL))==62)gotocase_33;gotoswitch_default___0;case_33:if(elide_outer_quotes)gotoforce_outer_quoting_style;c=(unsignedchar)*(arg+(i+2UL));i+=2UL;while(1)if(len<buffersize)*(buffer+len)=(char)'?';len++;gotowhile_break___7;while_break___7:;while(1)if(len<buffersize)*(buffer+len)=(char)'\"';len++;gotowhile_break___8;while_break___8:;while(1)if(len<buffersize)*(buffer+len)=(char)'\"';len++;gotowhile_break___9;while_break___9:;while(1)if(len<buffersize)*(buffer+len)=(char)'?';len++;gotowhile_break___10;while_break___10:;gotoswitch_break___2;switch_default___0:gotoswitch_break___2;switch_break___2:;gotoswitch_break___1;switch_default___1:gotoswitch_break___1;switch_break___1:;gotoswitch_break___0;case_7___0:esc=(unsignedchar)'a';gotoc_escape;case_8___0:esc=(unsignedchar)'b';gotoc_escape;case_12:esc=(unsignedchar)'f';gotoc_escape;case_10:esc=(unsignedchar)'n';gotoc_and_shell_escape;case_13:esc=(unsignedchar)'r';gotoc_and_shell_escape;case_9:esc=(unsignedchar)'t';gotoc_and_shell_escape;case_11:esc=(unsignedchar)'v';gotoc_escape;case_92:esc=c;if(backslash_escapes)if(elide_outer_quotes)if(quote_string_len)gotostore_c;c_and_shell_escape:if((unsignedint)quoting_style==2U)if(elide_outer_quotes)gotoforce_outer_quoting_style;c_escape:if(backslash_escapes)c=esc;gotostore_escape;gotoswitch_break___0;case_123:if(argsize==0xffffffffffffffffUL)tmp___1=(intconst)*(arg+1)==0;elsetmp___1=argsize==1UL;if(!tmp___1)gotoswitch_break___0;case_35:if(i!=0UL)gotoswitch_break___0;case_32:if((unsignedint)quoting_style==2U)if(elide_outer_quotes)gotoforce_outer_quoting_style;gotoswitch_break___0;case_39___0:if((unsignedint)quoting_style==2U)if(elide_outer_quotes)gotoforce_outer_quoting_style;while(1)if(len<buffersize)*(buffer+len)=(char)'\'';len++;gotowhile_break___11;while_break___11:;while(1)if(len<buffersize)*(buffer+len)=(char)'\\';len++;gotowhile_break___12;while_break___12:;while(1)if(len<buffersize)*(buffer+len)=(char)'\'';len++;gotowhile_break___13;while_break___13:;gotoswitch_break___0;case_37:gotoswitch_break___0;switch_default___2:if(unibyte_locale)m=(size_t)1;tmp___2=__ctype_b_loc();printable=(_Bool)(((intconst)*(*tmp___2+(int)c)&16384)!=0);elsememset((void*)(&mbstate),0,sizeof(mbstate));m=(size_t)0;printable=(_Bool)1;if(argsize==0xffffffffffffffffUL)argsize=strlen(arg);while(1)tmp___3=mbrtowc(&w,arg+(i+m),argsize-(i+m),&mbstate);bytes=tmp___3;if(bytes==0UL)gotowhile_break___14;elseif(bytes==0xffffffffffffffffUL)printable=(_Bool)0;gotowhile_break___14;elseif(bytes==0xfffffffffffffffeUL)printable=(_Bool)0;while(1)if(i+m<argsize)if(!*(arg+(i+m)))gotowhile_break___15;elsegotowhile_break___15;m++;while_break___15:;gotowhile_break___14;elseif(elide_outer_quotes)if((unsignedint)quoting_style==2U)j=(size_t)1;while(1)if(!(j<bytes))gotowhile_break___16;if((intconst)*(arg+((i+m)+j))==91)gotocase_91___0;if((intconst)*(arg+((i+m)+j))==92)gotocase_91___0;if((intconst)*(arg+((i+m)+j))==94)gotocase_91___0;if((intconst)*(arg+((i+m)+j))==96)gotocase_91___0;if((intconst)*(arg+((i+m)+j))==124)gotocase_91___0;gotoswitch_default___3;case_91___0:gotoforce_outer_quoting_style;switch_default___3:gotoswitch_break___3;switch_break___3:j++;while_break___16:;tmp___4=iswprint((wint_t)w);if(!tmp___4)printable=(_Bool)0;m+=bytes;tmp___5=mbsinit((mbstate_tconst*)(&mbstate));if(tmp___5)gotowhile_break___14;while_break___14:;if(1UL<m)goto_L___0;elseif(backslash_escapes)if(!printable)_L___0:ilim=i+m;while(1)if(backslash_escapes)if(!printable)if(elide_outer_quotes)gotoforce_outer_quoting_style;while(1)if(len<buffersize)*(buffer+len)=(char)'\\';len++;gotowhile_break___18;while_break___18:;while(1)if(len<buffersize)*(buffer+len)=(char)(48+((int)c>>6));len++;gotowhile_break___19;while_break___19:;while(1)if(len<buffersize)*(buffer+len)=(char)(48+(((int)c>>3)&7));len++;gotowhile_break___20;while_break___20:c=(unsignedchar)(48+((int)c&7));elsegoto_L;else_L:if(is_right_quote)while(1)if(len<buffersize)*(buffer+len)=(char)'\\';len++;gotowhile_break___21;while_break___21:is_right_quote=(_Bool)0;if(ilim<=i+1UL)gotowhile_break___17;while(1)if(len<buffersize)*(buffer+len)=(char)c;len++;gotowhile_break___22;while_break___22:i++;c=(unsignedchar)*(arg+i);while_break___17:;gotostore_c;switch_break___0:;if(backslash_escapes)goto_L___3;elseif(elide_outer_quotes)_L___3:if(quote_these_too)if(!(*(quote_these_too+(unsignedlong)c/(sizeof(int)*8UL))&(unsignedintconst)(1<<(unsignedlong)c%(sizeof(int)*8UL))))goto_L___2;elsegoto_L___2;else_L___2:if(!is_right_quote)gotostore_c;store_escape:if(elide_outer_quotes)gotoforce_outer_quoting_style;while(1)if(len<buffersize)*(buffer+len)=(char)'\\';len++;gotowhile_break___23;while_break___23:;store_c:while(1)if(len<buffersize)*(buffer+len)=(char)c;len++;gotowhile_break___24;while_break___24:;__Cont:i++;while_break___3:;if(len==0UL)if((unsignedint)quoting_style==2U)if(elide_outer_quotes)gotoforce_outer_quoting_style;if(quote_string)if(!elide_outer_quotes)while(1)if(!*quote_string)gotowhile_break___25;while(1)if(len<buffersize)*(buffer+len)=(char)*quote_string;len++;gotowhile_break___26;while_break___26:quote_string++;while_break___25:;if(len<buffersize)*(buffer+len)=(char)'\000';return(len);force_outer_quoting_style:tmp___7=quotearg_buffer_restyled(buffer,buffersize,arg,argsize,quoting_style,flags&-3,(unsignedintconst*)((void*)0),left_quote,right_quote);return(tmp___7);staticcharslot0[256];staticunsignedintnslots=1U;staticstructslotvecslotvec0=sizeof(slot0),slot0;staticstructslotvec*slotvec=&slotvec0;staticchar*quotearg_n_options(intn,charconst*arg,size_targsize,structquoting_optionsconst*options)inte;int*tmp;unsignedintn0;structslotvec*sv;size_tn1;_Boolpreallocated;inttmp___0;structslotvec*tmp___1;size_tsize;char*val;intflags;size_tqsize;size_ttmp___2;int*tmp___3;tmp=__errno_location();e=*tmp;n0=(unsignedint)n;sv=slotvec;if(n<0)abort();if(nslots<=n0)n1=(size_t)(n0+1U);preallocated=(_Bool)((unsignedlong)sv==(unsignedlong)(&slotvec0));if(sizeof(ptrdiff_t)<=sizeof(size_t))tmp___0=-1;elsetmp___0=-2;if((size_t)tmp___0/sizeof(*sv)<n1)xalloc_die();if(preallocated)tmp___1=(structslotvec*)((void*)0);elsetmp___1=sv;sv=(structslotvec*)xrealloc((void*)tmp___1,n1*sizeof(*sv));slotvec=sv;if(preallocated)*sv=slotvec0;memset((void*)(sv+nslots),0,(n1-(size_t)nslots)*sizeof(*sv));nslots=(unsignedint)n1;size=(sv+n)->size;val=(sv+n)->val;flags=(int)(options->flags|1);tmp___2=quotearg_buffer_restyled(val,size,arg,argsize,(enumquoting_style)options->style,flags,(unsignedintconst*)(options->quote_these_too),(charconst*)options->left_quote,(charconst*)options->right_quote);qsize=tmp___2;if(size<=qsize)size=qsize+1UL;(sv+n)->size=size;if((unsignedlong)val!=(unsignedlong)(slot0))free((void*)val);val=xcharalloc(size);(sv+n)->val=val;quotearg_buffer_restyled(val,size,arg,argsize,(enumquoting_style)options->style,flags,(unsignedintconst*)(options->quote_these_too),(charconst*)options->left_quote,(charconst*)options->right_quote);tmp___3=__errno_location();*tmp___3=e;return(val);char*quotearg_n_style(intn,enumquoting_styles,charconst*arg)structquoting_optionso;structquoting_optionstmp;char*tmp___0;tmp=quoting_options_from_style(s);o=tmp;tmp___0=quotearg_n_options(n,arg,(size_t)-1,(structquoting_optionsconst*)(&o));return(tmp___0);char*quotearg_n_style_mem(intn,enumquoting_styles,charconst*arg,size_targsize)structquoting_optionso;structquoting_optionstmp;char*tmp___0;tmp=quoting_options_from_style(s);o=tmp;tmp___0=quotearg_n_options(n,arg,argsize,(structquoting_optionsconst*)(&o));return(tmp___0);char*quotearg_char_mem(charconst*arg,size_targsize,charch)structquoting_optionsoptions;char*tmp;options=default_quoting_options;set_char_quoting(&options,ch,1);tmp=quotearg_n_options(0,arg,argsize,(structquoting_optionsconst*)(&options));return(tmp);char*quotearg_char(charconst*arg,charch)char*tmp;tmp=quotearg_char_mem(arg,(size_t)-1,ch);return(tmp);char*quotearg_colon(charconst*arg)char*tmp;tmp=quotearg_char(arg,(char)':');return(tmp);structquoting_optionsquote_quoting_options=(enumquoting_style)6,0,0U,(charconst*)((void*)0),(charconst*)((void*)0);charconst*quote_n(intn,charconst*name)charconst*tmp;tmp=(charconst*)quotearg_n_options(n,name,(size_t)-1,(structquoting_optionsconst*)(&quote_quoting_options));return(tmp);charconst*quote(charconst*name)charconst*tmp;tmp=quote_n(0,name);return(tmp);#pragmaGCCdiagnosticignored"-Wsuggest-attribute=const"__inlinestaticvoidmbuiter_multi_next(structmbuiter_multi*iter)inttmp;size_ttmp___0;size_ttmp___1;inttmp___2;_Booltmp___3;if(iter->next_done)return;if(iter->in_shift)gotowith_shift;tmp___3=is_basic((char)*(iter->cur.ptr));if(tmp___3)iter->cur.bytes=(size_t)1;iter->cur.wc=(wchar_t)*(iter->cur.ptr);iter->cur.wc_valid=(_Bool)1;elsetmp=mbsinit((mbstate_tconst*)(&iter->state));if(!tmp)__assert_fail("mbsinit(&iter->state)","/home/khheo/project/program-reduce/benchmark/coreutils-8.16/lib/mbuiter.h",142U,"mbuiter_multi_next");iter->in_shift=(_Bool)1;with_shift:tmp___0=__ctype_get_mb_cur_max();tmp___1=strnlen1(iter->cur.ptr,tmp___0);iter->cur.bytes=mbrtowc(&iter->cur.wc,iter->cur.ptr,tmp___1,&iter->state);if(iter->cur.bytes==0xffffffffffffffffUL)iter->cur.bytes=(size_t)1;iter->cur.wc_valid=(_Bool)0;elseif(iter->cur.bytes==0xfffffffffffffffeUL)iter->cur.bytes=strlen(iter->cur.ptr);iter->cur.wc_valid=(_Bool)0;elseif(iter->cur.bytes==0UL)iter->cur.bytes=(size_t)1;if(!((intconst)*(iter->cur.ptr)==0))__assert_fail("*iter->cur.ptr==\'\\0\'","/home/khheo/project/program-reduce/benchmark/coreutils-8.16/lib/mbuiter.h",170U,"mbuiter_multi_next");if(!(iter->cur.wc==0))__assert_fail("iter->cur.wc==0","/home/khheo/project/program-reduce/benchmark/coreutils-8.16/lib/mbuiter.h",171U,"mbuiter_multi_next");iter->cur.wc_valid=(_Bool)1;tmp___2=mbsinit((mbstate_tconst*)(&iter->state));if(tmp___2)iter->in_shift=(_Bool)0;iter->next_done=(_Bool)1;return;charconst*program_name;voidset_program_name(charconst*argv0);externchar*program_invocation_name;externchar*program_invocation_short_name;externintfputs(charconst*__restrict__s,FILE*__restrict__stream);extern__attribute__((__nothrow__))char*(__attribute__((__nonnull__(1),__leaf__))strrchr)(charconst*__s,int__c)__attribute__((__pure__));charconst*program_name=(charconst*)((void*)0);voidset_program_name(charconst*argv0)charconst*slash;charconst*base;inttmp;inttmp___0;if((unsignedlong)argv0==(unsignedlong)((void*)0))fputs("ANULLargv[0]waspassedthroughanexecsystemcall.\n",stderr);abort();slash=(charconst*)strrchr(argv0,'/');if((unsignedlong)slash!=(unsignedlong)((void*)0))base=slash+1;elsebase=argv0;if(base-argv0>=7L)tmp___0=strncmp(base-7,"/.libs/",(size_t)7);if(tmp___0==0)argv0=base;tmp=strncmp(base,"lt-",(size_t)3);if(tmp==0)argv0=base+3;program_invocation_short_name=(char*)argv0;program_name=argv0;program_invocation_name=(char*)argv0;return;intposix2_version(void);intposix2_version(void)longv;charconst*s;charconst*tmp;char*e;longi;longtmp___0;longtmp___1;longtmp___2;v=200809L;tmp=(charconst*)getenv("_POSIX2_VERSION");s=tmp;if(s)if(*s)tmp___0=strtol(s,&e,10);i=tmp___0;if(!*e)v=i;if(v<(-0x7FFFFFFF-1))tmp___2=(-0x7FFFFFFF-1);elseif(v<2147483647L)tmp___1=v;elsetmp___1=2147483647L;tmp___2=tmp___1;return((int)tmp___2);extern__attribute__((__nothrow__))char*(__attribute__((__nonnull__(1,2),__leaf__))stpcpy)(char*__restrict__dest,charconst*__restrict__src);extern__attribute__((__nothrow__))int(__attribute__((__leaf__))pipe)(int*__pipedes);doublephysmem_total(void);doublephysmem_available(void);extern__attribute__((__nothrow__))long(__attribute__((__leaf__))sysconf)(int__name);doublephysmem_total(void)doublepages;doubletmp;doublepagesize;doubletmp___0;tmp=(double)sysconf(85);pages=tmp;tmp___0=(double)sysconf(30);pagesize=tmp___0;if((double)0<=pages)if((double)0<=pagesize)return(pages*pagesize);return((double)67108864);doublephysmem_available(void)doublepages;doubletmp;doublepagesize;doubletmp___0;doubletmp___1;tmp=(double)sysconf(86);pages=tmp;tmp___0=(double)sysconf(30);pagesize=tmp___0;if((double)0<=pages)if((double)0<=pagesize)return(pages*pagesize);tmp___1=physmem_total();return(tmp___1/(double)4);intdup_safer(intfd);#pragmaGCCdiagnosticignored"-Wtype-limits"unsignedlongnum_processors(enumnproc_queryquery);extern__attribute__((__nothrow__))int(__attribute__((__leaf__))__sched_cpucount)(size_t__setsize,cpu_set_tconst*__setp);extern__attribute__((__nothrow__))int(__attribute__((__leaf__))sched_getaffinity)(__pid_t__pid,size_t__cpusetsize,cpu_set_t*__cpuset);staticunsignedlongnum_processors_via_affinity_mask(void)cpu_set_tset;unsignedlongcount;inttmp;tmp=sched_getaffinity(0,sizeof(set),&set);if(tmp==0)count=(unsignedlong)__sched_cpucount(sizeof(cpu_set_t),(cpu_set_tconst*)(&set));if(count>0UL)return(count);return(0UL);unsignedlongnum_processors(enumnproc_queryquery)charconst*envvalue;charconst*tmp;_Booltmp___0;char*endptr;unsignedlongvalue;unsignedlongtmp___1;_Booltmp___2;unsignedlongtmp___3;_Booltmp___4;unsignedlongnprocs___0;unsignedlongtmp___5;longnprocs___1;longtmp___6;longnprocs___2;longtmp___7;unsignedlongnprocs_current;unsignedlongtmp___8;if((unsignedint)query==2U)tmp=(charconst*)getenv("OMP_NUM_THREADS");envvalue=tmp;if((unsignedlong)envvalue!=(unsignedlong)((void*)0))while(1)if((intconst)*envvalue!=0)tmp___0=c_isspace((int)*envvalue);if(!tmp___0)gotowhile_break;elsegotowhile_break;envvalue++;while_break:tmp___4=c_isdigit((int)*envvalue);if(tmp___4)endptr=(char*)((void*)0);tmp___1=strtoul(envvalue,&endptr,10);value=tmp___1;if((unsignedlong)endptr!=(unsignedlong)((void*)0))while(1)if((int)*endptr!=0)tmp___2=c_isspace((int)*endptr);if(!tmp___2)gotowhile_break___0;elsegotowhile_break___0;endptr++;while_break___0:;if((int)*endptr==0)if(value>0UL)tmp___3=value;elsetmp___3=1UL;return(tmp___3);query=(enumnproc_query)1;if((unsignedint)query==1U)tmp___5=num_processors_via_affinity_mask();nprocs___0=tmp___5;if(nprocs___0>0UL)return(nprocs___0);tmp___6=sysconf(84);nprocs___1=tmp___6;if(nprocs___1>0L)return((unsignedlong)nprocs___1);elsetmp___7=sysconf(83);nprocs___2=tmp___7;if(nprocs___2==1L)tmp___8=num_processors_via_affinity_mask();nprocs_current=tmp___8;if(nprocs_current>0UL)nprocs___2=(long)nprocs_current;if(nprocs___2>0L)return((unsignedlong)nprocs___2);return(1UL);externintnanosleep(structtimespecconst*__requested_time,structtimespec*__remaining);int(__attribute__((__nonnull__(1)))rpl_nanosleep)(structtimespecconst*requested_delay,structtimespec*remaining_delay)int*tmp;time_tlimit;time_tseconds;structtimespecintermediate;intresult;inttmp___0;if(requested_delay->tv_nsec<0L)tmp=__errno_location();*tmp=22;return(-1);elseif(1000000000L<=(long)requested_delay->tv_nsec)tmp=__errno_location();*tmp=22;return(-1);limit=(time_t)2073600;seconds=(time_t)requested_delay->tv_sec;intermediate.tv_nsec=(__syscall_slong_t)requested_delay->tv_nsec;while(1)if(!(limit<seconds))gotowhile_break;intermediate.tv_sec=limit;result=nanosleep((structtimespecconst*)(&intermediate),remaining_delay);seconds-=limit;if(result)if(remaining_delay)remaining_delay->tv_sec+=seconds;return(result);intermediate.tv_nsec=(__syscall_slong_t)0;while_break:intermediate.tv_sec=seconds;tmp___0=nanosleep((structtimespecconst*)(&intermediate),remaining_delay);return(tmp___0);intmkstemp_safer(char*templ);externint(__attribute__((__nonnull__(1)))mkstemp)(char*__template);intmkstemp_safer(char*templ)inttmp;inttmp___0;tmp=mkstemp(templ);tmp___0=fd_safer(tmp);return(tmp___0);extern__attribute__((__nothrow__))int(__attribute__((__nonnull__(1,2),__leaf__))strcoll)(charconst*__s1,charconst*__s2)__attribute__((__pure__));__inlinestaticintstrcoll_loop(charconst*s1,size_ts1size,charconst*s2,size_ts2size)intdiff;size_tsize1;size_ttmp;size_tsize2;size_ttmp___0;int*tmp___1;int*tmp___2;inttmp___3;while(1)tmp___1=__errno_location();*tmp___1=0;diff=strcoll(s1,s2);if(diff)tmp___3=1;elsetmp___2=__errno_location();if(*tmp___2)tmp___3=1;elsetmp___3=0;if(tmp___3)gotowhile_break;tmp=strlen(s1);size1=tmp+1UL;tmp___0=strlen(s2);size2=tmp___0+1UL;s1+=size1;s2+=size2;s1size-=size1;s2size-=size2;if(s1size==0UL)return(-(s2size!=0UL));if(s2size==0UL)return(1);while_break:;return(diff);intmemcoll0(charconst*s1,size_ts1size,charconst*s2,size_ts2size)int*tmp;inttmp___0;inttmp___1;if(s1size==s2size)tmp___1=memcmp((voidconst*)s1,(voidconst*)s2,s1size);if(tmp___1==0)tmp=__errno_location();*tmp=0;return(0);elsetmp___0=strcoll_loop(s1,s1size,s2,s2size);return(tmp___0);elsetmp___0=strcoll_loop(s1,s1size,s2,s2size);return(tmp___0);__attribute__((__nothrow__))void(__attribute__((__leaf__))md5_init_ctx)(structmd5_ctx*ctx);__attribute__((__nothrow__))void(__attribute__((__leaf__))md5_process_block)(voidconst*buffer,size_tlen,structmd5_ctx*ctx);__attribute__((__nothrow__))void(__attribute__((__leaf__))md5_process_bytes)(voidconst*buffer,size_tlen,structmd5_ctx*ctx);__attribute__((__nothrow__))void*(__attribute__((__leaf__))md5_finish_ctx)(structmd5_ctx*ctx,void*resbuf);__attribute__((__nothrow__))void*(__attribute__((__leaf__))md5_read_ctx)(structmd5_ctxconst*ctx,void*resbuf);staticunsignedcharconstfillbuf___2[64]=(unsignedcharconst)128,(unsignedcharconst)0;__attribute__((__nothrow__))void(__attribute__((__leaf__))md5_init_ctx)(structmd5_ctx*ctx);void(__attribute__((__leaf__))md5_init_ctx)(structmd5_ctx*ctx)uint32_ttmp;ctx->A=(uint32_t)1732584193;ctx->B=4023233417U;ctx->C=2562383102U;ctx->D=(uint32_t)271733878;tmp=(uint32_t)0;ctx->total[1]=tmp;ctx->total[0]=tmp;ctx->buflen=(uint32_t)0;return;__attribute__((__nothrow__))void*(__attribute__((__leaf__))md5_read_ctx)(structmd5_ctxconst*ctx,void*resbuf);void*(__attribute__((__leaf__))md5_read_ctx)(structmd5_ctxconst*ctx,void*resbuf)char*r;r=(char*)resbuf;set_uint32(r+0UL,(uint32_t)ctx->A);set_uint32(r+sizeof(ctx->B),(uint32_t)ctx->B);set_uint32(r+2UL*sizeof(ctx->C),(uint32_t)ctx->C);set_uint32(r+3UL*sizeof(ctx->D),(uint32_t)ctx->D);return(resbuf);__attribute__((__nothrow__))void*(__attribute__((__leaf__))md5_finish_ctx)(structmd5_ctx*ctx,void*resbuf);void*(__attribute__((__leaf__))md5_finish_ctx)(structmd5_ctx*ctx,void*resbuf)uint32_tbytes;size_tsize;inttmp;void*tmp___0;bytes=ctx->buflen;if(bytes<56U)tmp=16;elsetmp=32;size=(size_t)tmp;ctx->total[0]+=bytes;if(ctx->total[0]<bytes)(ctx->total[1])++;ctx->buffer[size-2UL]=ctx->total[0]<<3;ctx->buffer[size-1UL]=(ctx->total[1]<<3)|(ctx->total[0]>>29);memcpy((void*)((char*)(ctx->buffer)+bytes),(voidconst*)(fillbuf___2),(size-2UL)*4UL-(size_t)bytes);md5_process_block((voidconst*)(ctx->buffer),size*4UL,ctx);tmp___0=md5_read_ctx((structmd5_ctxconst*)ctx,resbuf);return(tmp___0);__attribute__((__nothrow__))void(__attribute__((__leaf__))md5_process_bytes)(voidconst*buffer,size_tlen,structmd5_ctx*ctx);void(__attribute__((__leaf__))md5_process_bytes)(voidconst*buffer,size_tlen,structmd5_ctx*ctx)size_tleft_over;size_tadd;size_ttmp;size_tleft_over___0;if(ctx->buflen!=0U)left_over=(size_t)ctx->buflen;if(128UL-left_over>len)tmp=len;elsetmp=128UL-left_over;add=tmp;memcpy((void*)((char*)(ctx->buffer)+left_over),buffer,add);ctx->buflen=(uint32_t)((size_t)ctx->buflen+add);if(ctx->buflen>64U)md5_process_block((voidconst*)(ctx->buffer),(size_t)(ctx->buflen&4294967232U),ctx);ctx->buflen&=63U;memcpy((void*)(ctx->buffer),(voidconst*)((char*)(ctx->buffer)+((left_over+add)&0xffffffffffffffc0UL)),(size_t)ctx->buflen);buffer=(voidconst*)((charconst*)buffer+add);len-=add;if(len>=64UL)md5_process_block(buffer,len&0xffffffffffffffc0UL,ctx);buffer=(voidconst*)((charconst*)buffer+(len&0xffffffffffffffc0UL));len&=63UL;if(len>0UL)left_over___0=(size_t)ctx->buflen;memcpy((void*)((char*)(ctx->buffer)+left_over___0),buffer,len);left_over___0+=len;if(left_over___0>=64UL)md5_process_block((voidconst*)(ctx->buffer),(size_t)64,ctx);left_over___0-=64UL;memcpy((void*)(ctx->buffer),(voidconst*)(&ctx->buffer[16]),left_over___0);ctx->buflen=(uint32_t)left_over___0;return;__attribute__((__nothrow__))void(__attribute__((__leaf__))md5_process_block)(voidconst*buffer,size_tlen,structmd5_ctx*ctx);void(__attribute__((__leaf__))md5_process_block)(voidconst*buffer,size_tlen,structmd5_ctx*ctx)uint32_tcorrect_words[16];uint32_tconst*words;size_tnwords;uint32_tconst*endp;uint32_tA;uint32_tB;uint32_tC;uint32_tD;uint32_t*cwp;uint32_tA_save;uint32_tB_save;uint32_tC_save;uint32_tD_save;uint32_t*tmp;uint32_ttmp___0;uint32_t*tmp___1;uint32_ttmp___2;uint32_t*tmp___3;uint32_ttmp___4;uint32_t*tmp___5;uint32_ttmp___6;uint32_t*tmp___7;uint32_ttmp___8;uint32_t*tmp___9;uint32_ttmp___10;uint32_t*tmp___11;uint32_ttmp___12;uint32_t*tmp___13;uint32_ttmp___14;uint32_t*tmp___15;uint32_ttmp___16;uint32_t*tmp___17;uint32_ttmp___18;uint32_t*tmp___19;uint32_ttmp___20;uint32_t*tmp___21;uint32_ttmp___22;uint32_t*tmp___23;uint32_ttmp___24;uint32_t*tmp___25;uint32_ttmp___26;uint32_t*tmp___27;uint32_ttmp___28;uint32_t*tmp___29;uint32_ttmp___30;words=(uint32_tconst*)buffer;nwords=len/sizeof(uint32_t);endp=words+nwords;A=ctx->A;B=ctx->B;C=ctx->C;D=ctx->D;ctx->total[0]=(uint32_t)((size_t)ctx->total[0]+len);if((size_t)ctx->total[0]<len)(ctx->total[1])++;while(1)if(!((unsignedlong)words<(unsignedlong)endp))gotowhile_break;cwp=correct_words;A_save=A;B_save=B;C_save=C;D_save=D;while(1)tmp=cwp;cwp++;tmp___0=(uint32_t)*words;*tmp=tmp___0;A+=((D^(B&(C^D)))+tmp___0)+3614090360U;words++;A=(A<<7)|(A>>25);A+=B;gotowhile_break___0;while_break___0:;while(1)tmp___1=cwp;cwp++;tmp___2=(uint32_t)*words;*tmp___1=tmp___2;D+=((C^(A&(B^C)))+tmp___2)+3905402710U;words++;D=(D<<12)|(D>>20);D+=A;gotowhile_break___1;while_break___1:;while(1)tmp___3=cwp;cwp++;tmp___4=(uint32_t)*words;*tmp___3=tmp___4;C+=((B^(D&(A^B)))+tmp___4)+606105819U;words++;C=(C<<17)|(C>>15);C+=D;gotowhile_break___2;while_break___2:;while(1)tmp___5=cwp;cwp++;tmp___6=(uint32_t)*words;*tmp___5=tmp___6;B+=((A^(C&(D^A)))+tmp___6)+3250441966U;words++;B=(B<<22)|(B>>10);B+=C;gotowhile_break___3;while_break___3:;while(1)tmp___7=cwp;cwp++;tmp___8=(uint32_t)*words;*tmp___7=tmp___8;A+=((D^(B&(C^D)))+tmp___8)+4118548399U;words++;A=(A<<7)|(A>>25);A+=B;gotowhile_break___4;while_break___4:;while(1)tmp___9=cwp;cwp++;tmp___10=(uint32_t)*words;*tmp___9=tmp___10;D+=((C^(A&(B^C)))+tmp___10)+1200080426U;words++;D=(D<<12)|(D>>20);D+=A;gotowhile_break___5;while_break___5:;while(1)tmp___11=cwp;cwp++;tmp___12=(uint32_t)*words;*tmp___11=tmp___12;C+=((B^(D&(A^B)))+tmp___12)+2821735955U;words++;C=(C<<17)|(C>>15);C+=D;gotowhile_break___6;while_break___6:;while(1)tmp___13=cwp;cwp++;tmp___14=(uint32_t)*words;*tmp___13=tmp___14;B+=((A^(C&(D^A)))+tmp___14)+4249261313U;words++;B=(B<<22)|(B>>10);B+=C;gotowhile_break___7;while_break___7:;while(1)tmp___15=cwp;cwp++;tmp___16=(uint32_t)*words;*tmp___15=tmp___16;A+=((D^(B&(C^D)))+tmp___16)+1770035416U;words++;A=(A<<7)|(A>>25);A+=B;gotowhile_break___8;while_break___8:;while(1)tmp___17=cwp;cwp++;tmp___18=(uint32_t)*words;*tmp___17=tmp___18;D+=((C^(A&(B^C)))+tmp___18)+2336552879U;words++;D=(D<<12)|(D>>20);D+=A;gotowhile_break___9;while_break___9:;while(1)tmp___19=cwp;cwp++;tmp___20=(uint32_t)*words;*tmp___19=tmp___20;C+=((B^(D&(A^B)))+tmp___20)+4294925233U;words++;C=(C<<17)|(C>>15);C+=D;gotowhile_break___10;while_break___10:;while(1)tmp___21=cwp;cwp++;tmp___22=(uint32_t)*words;*tmp___21=tmp___22;B+=((A^(C&(D^A)))+tmp___22)+2304563134U;words++;B=(B<<22)|(B>>10);B+=C;gotowhile_break___11;while_break___11:;while(1)tmp___23=cwp;cwp++;tmp___24=(uint32_t)*words;*tmp___23=tmp___24;A+=((D^(B&(C^D)))+tmp___24)+1804603682U;words++;A=(A<<7)|(A>>25);A+=B;gotowhile_break___12;while_break___12:;while(1)tmp___25=cwp;cwp++;tmp___26=(uint32_t)*words;*tmp___25=tmp___26;D+=((C^(A&(B^C)))+tmp___26)+4254626195U;words++;D=(D<<12)|(D>>20);D+=A;gotowhile_break___13;while_break___13:;while(1)tmp___27=cwp;cwp++;tmp___28=(uint32_t)*words;*tmp___27=tmp___28;C+=((B^(D&(A^B)))+tmp___28)+2792965006U;words++;C=(C<<17)|(C>>15);C+=D;gotowhile_break___14;while_break___14:;while(1)tmp___29=cwp;cwp++;tmp___30=(uint32_t)*words;*tmp___29=tmp___30;B+=((A^(C&(D^A)))+tmp___30)+1236535329U;words++;B=(B<<22)|(B>>10);B+=C;gotowhile_break___15;while_break___15:;while(1)A+=((C^(D&(B^C)))+correct_words[1])+4129170786U;A=(A<<5)|(A>>27);A+=B;gotowhile_break___16;while_break___16:;while(1)D+=((B^(C&(A^B)))+correct_words[6])+3225465664U;D=(D<<9)|(D>>23);D+=A;gotowhile_break___17;while_break___17:;while(1)C+=((A^(B&(D^A)))+correct_words[11])+643717713U;C=(C<<14)|(C>>18);C+=D;gotowhile_break___18;while_break___18:;while(1)B+=((D^(A&(C^D)))+correct_words[0])+3921069994U;B=(B<<20)|(B>>12);B+=C;gotowhile_break___19;while_break___19:;while(1)A+=((C^(D&(B^C)))+correct_words[5])+3593408605U;A=(A<<5)|(A>>27);A+=B;gotowhile_break___20;while_break___20:;while(1)D+=((B^(C&(A^B)))+correct_words[10])+38016083U;D=(D<<9)|(D>>23);D+=A;gotowhile_break___21;while_break___21:;while(1)C+=((A^(B&(D^A)))+correct_words[15])+3634488961U;C=(C<<14)|(C>>18);C+=D;gotowhile_break___22;while_break___22:;while(1)B+=((D^(A&(C^D)))+correct_words[4])+3889429448U;B=(B<<20)|(B>>12);B+=C;gotowhile_break___23;while_break___23:;while(1)A+=((C^(D&(B^C)))+correct_words[9])+568446438U;A=(A<<5)|(A>>27);A+=B;gotowhile_break___24;while_break___24:;while(1)D+=((B^(C&(A^B)))+correct_words[14])+3275163606U;D=(D<<9)|(D>>23);D+=A;gotowhile_break___25;while_break___25:;while(1)C+=((A^(B&(D^A)))+correct_words[3])+4107603335U;C=(C<<14)|(C>>18);C+=D;gotowhile_break___26;while_break___26:;while(1)B+=((D^(A&(C^D)))+correct_words[8])+1163531501U;B=(B<<20)|(B>>12);B+=C;gotowhile_break___27;while_break___27:;while(1)A+=((C^(D&(B^C)))+correct_words[13])+2850285829U;A=(A<<5)|(A>>27);A+=B;gotowhile_break___28;while_break___28:;while(1)D+=((B^(C&(A^B)))+correct_words[2])+4243563512U;D=(D<<9)|(D>>23);D+=A;gotowhile_break___29;while_break___29:;while(1)C+=((A^(B&(D^A)))+correct_words[7])+1735328473U;C=(C<<14)|(C>>18);C+=D;gotowhile_break___30;while_break___30:;while(1)B+=((D^(A&(C^D)))+correct_words[12])+2368359562U;B=(B<<20)|(B>>12);B+=C;gotowhile_break___31;while_break___31:;while(1)A+=(((B^C)^D)+correct_words[5])+4294588738U;A=(A<<4)|(A>>28);A+=B;gotowhile_break___32;while_break___32:;while(1)D+=(((A^B)^C)+correct_words[8])+2272392833U;D=(D<<11)|(D>>21);D+=A;gotowhile_break___33;while_break___33:;while(1)C+=(((D^A)^B)+correct_words[11])+1839030562U;C=(C<<16)|(C>>16);C+=D;gotowhile_break___34;while_break___34:;while(1)B+=(((C^D)^A)+correct_words[14])+4259657740U;B=(B<<23)|(B>>9);B+=C;gotowhile_break___35;while_break___35:;while(1)A+=(((B^C)^D)+correct_words[1])+2763975236U;A=(A<<4)|(A>>28);A+=B;gotowhile_break___36;while_break___36:;while(1)D+=(((A^B)^C)+correct_words[4])+1272893353U;D=(D<<11)|(D>>21);D+=A;gotowhile_break___37;while_break___37:;while(1)C+=(((D^A)^B)+correct_words[7])+4139469664U;C=(C<<16)|(C>>16);C+=D;gotowhile_break___38;while_break___38:;while(1)B+=(((C^D)^A)+correct_words[10])+3200236656U;B=(B<<23)|(B>>9);B+=C;gotowhile_break___39;while_break___39:;while(1)A+=(((B^C)^D)+correct_words[13])+681279174U;A=(A<<4)|(A>>28);A+=B;gotowhile_break___40;while_break___40:;while(1)D+=(((A^B)^C)+correct_words[0])+3936430074U;D=(D<<11)|(D>>21);D+=A;gotowhile_break___41;while_break___41:;while(1)C+=(((D^A)^B)+correct_words[3])+3572445317U;C=(C<<16)|(C>>16);C+=D;gotowhile_break___42;while_break___42:;while(1)B+=(((C^D)^A)+correct_words[6])+76029189U;B=(B<<23)|(B>>9);B+=C;gotowhile_break___43;while_break___43:;while(1)A+=(((B^C)^D)+correct_words[9])+3654602809U;A=(A<<4)|(A>>28);A+=B;gotowhile_break___44;while_break___44:;while(1)D+=(((A^B)^C)+correct_words[12])+3873151461U;D=(D<<11)|(D>>21);D+=A;gotowhile_break___45;while_break___45:;while(1)C+=(((D^A)^B)+correct_words[15])+530742520U;C=(C<<16)|(C>>16);C+=D;gotowhile_break___46;while_break___46:;while(1)B+=(((C^D)^A)+correct_words[2])+3299628645U;B=(B<<23)|(B>>9);B+=C;gotowhile_break___47;while_break___47:;while(1)A+=((C^(B|~D))+correct_words[0])+4096336452U;A=(A<<6)|(A>>26);A+=B;gotowhile_break___48;while_break___48:;while(1)D+=((B^(A|~C))+correct_words[7])+1126891415U;D=(D<<10)|(D>>22);D+=A;gotowhile_break___49;while_break___49:;while(1)C+=((A^(D|~B))+correct_words[14])+2878612391U;C=(C<<15)|(C>>17);C+=D;gotowhile_break___50;while_break___50:;while(1)B+=((D^(C|~A))+correct_words[5])+4237533241U;B=(B<<21)|(B>>11);B+=C;gotowhile_break___51;while_break___51:;while(1)A+=((C^(B|~D))+correct_words[12])+1700485571U;A=(A<<6)|(A>>26);A+=B;gotowhile_break___52;while_break___52:;while(1)D+=((B^(A|~C))+correct_words[3])+2399980690U;D=(D<<10)|(D>>22);D+=A;gotowhile_break___53;while_break___53:;while(1)C+=((A^(D|~B))+correct_words[10])+4293915773U;C=(C<<15)|(C>>17);C+=D;gotowhile_break___54;while_break___54:;while(1)B+=((D^(C|~A))+correct_words[1])+2240044497U;B=(B<<21)|(B>>11);B+=C;gotowhile_break___55;while_break___55:;while(1)A+=((C^(B|~D))+correct_words[8])+1873313359U;A=(A<<6)|(A>>26);A+=B;gotowhile_break___56;while_break___56:;while(1)D+=((B^(A|~C))+correct_words[15])+4264355552U;D=(D<<10)|(D>>22);D+=A;gotowhile_break___57;while_break___57:;while(1)C+=((A^(D|~B))+correct_words[6])+2734768916U;C=(C<<15)|(C>>17);C+=D;gotowhile_break___58;while_break___58:;while(1)B+=((D^(C|~A))+correct_words[13])+1309151649U;B=(B<<21)|(B>>11);B+=C;gotowhile_break___59;while_break___59:;while(1)A+=((C^(B|~D))+correct_words[4])+4149444226U;A=(A<<6)|(A>>26);A+=B;gotowhile_break___60;while_break___60:;while(1)D+=((B^(A|~C))+correct_words[11])+3174756917U;D=(D<<10)|(D>>22);D+=A;gotowhile_break___61;while_break___61:;while(1)C+=((A^(D|~B))+correct_words[2])+718787259U;C=(C<<15)|(C>>17);C+=D;gotowhile_break___62;while_break___62:;while(1)B+=((D^(C|~A))+correct_words[9])+3951481745U;B=(B<<21)|(B>>11);B+=C;gotowhile_break___63;while_break___63:A+=A_save;B+=B_save;C+=C_save;D+=D_save;while_break:ctx->A=A;ctx->B=B;ctx->C=C;ctx->D=D;return;intmbsnwidth(charconst*string,size_tnbytes,intflags);extern__attribute__((__nothrow__))int(__attribute__((__leaf__))wcwidth)(wchar_t__c);extern__attribute__((__nothrow__))int(__attribute__((__leaf__))iswcntrl)(wint_t__wc);intmbsnwidth(charconst*string,size_tnbytes,intflags)charconst*p;charconst*plimit;intwidth;mbstate_tmbstate;wchar_twc;size_tbytes;intw;inttmp;inttmp___0;size_ttmp___1;unsignedcharc;charconst*tmp___2;unsignedshortconst**tmp___3;unsignedshortconst**tmp___4;p=string;plimit=p+nbytes;width=0;tmp___1=__ctype_get_mb_cur_max();if(tmp___1>1UL)while(1)if(!((unsignedlong)p<(unsignedlong)plimit))gotowhile_break;if((intconst)*p==32)gotocase_32;if((intconst)*p==33)gotocase_32;if((intconst)*p==34)gotocase_32;if((intconst)*p==35)gotocase_32;if((intconst)*p==37)gotocase_32;if((intconst)*p==38)gotocase_32;if((intconst)*p==39)gotocase_32;if((intconst)*p==40)gotocase_32;if((intconst)*p==41)gotocase_32;if((intconst)*p==42)gotocase_32;if((intconst)*p==43)gotocase_32;if((intconst)*p==44)gotocase_32;if((intconst)*p==45)gotocase_32;if((intconst)*p==46)gotocase_32;if((intconst)*p==47)gotocase_32;if((intconst)*p==48)gotocase_32;if((intconst)*p==49)gotocase_32;if((intconst)*p==50)gotocase_32;if((intconst)*p==51)gotocase_32;if((intconst)*p==52)gotocase_32;if((intconst)*p==53)gotocase_32;if((intconst)*p==54)gotocase_32;if((intconst)*p==55)gotocase_32;if((intconst)*p==56)gotocase_32;if((intconst)*p==57)gotocase_32;if((intconst)*p==58)gotocase_32;if((intconst)*p==59)gotocase_32;if((intconst)*p==60)gotocase_32;if((intconst)*p==61)gotocase_32;if((intconst)*p==62)gotocase_32;if((intconst)*p==63)gotocase_32;if((intconst)*p==65)gotocase_32;if((intconst)*p==66)gotocase_32;if((intconst)*p==67)gotocase_32;if((intconst)*p==68)gotocase_32;if((intconst)*p==69)gotocase_32;if((intconst)*p==70)gotocase_32;if((intconst)*p==71)gotocase_32;if((intconst)*p==72)gotocase_32;if((intconst)*p==73)gotocase_32;if((intconst)*p==74)gotocase_32;if((intconst)*p==75)gotocase_32;if((intconst)*p==76)gotocase_32;if((intconst)*p==77)gotocase_32;if((intconst)*p==78)gotocase_32;if((intconst)*p==79)gotocase_32;if((intconst)*p==80)gotocase_32;if((intconst)*p==81)gotocase_32;if((intconst)*p==82)gotocase_32;if((intconst)*p==83)gotocase_32;if((intconst)*p==84)gotocase_32;if((intconst)*p==85)gotocase_32;if((intconst)*p==86)gotocase_32;if((intconst)*p==87)gotocase_32;if((intconst)*p==88)gotocase_32;if((intconst)*p==89)gotocase_32;if((intconst)*p==90)gotocase_32;if((intconst)*p==91)gotocase_32;if((intconst)*p==92)gotocase_32;if((intconst)*p==93)gotocase_32;if((intconst)*p==94)gotocase_32;if((intconst)*p==95)gotocase_32;if((intconst)*p==97)gotocase_32;if((intconst)*p==98)gotocase_32;if((intconst)*p==99)gotocase_32;if((intconst)*p==100)gotocase_32;if((intconst)*p==101)gotocase_32;if((intconst)*p==102)gotocase_32;if((intconst)*p==103)gotocase_32;if((intconst)*p==104)gotocase_32;if((intconst)*p==105)gotocase_32;if((intconst)*p==106)gotocase_32;if((intconst)*p==107)gotocase_32;if((intconst)*p==108)gotocase_32;if((intconst)*p==109)gotocase_32;if((intconst)*p==110)gotocase_32;if((intconst)*p==111)gotocase_32;if((intconst)*p==112)gotocase_32;if((intconst)*p==113)gotocase_32;if((intconst)*p==114)gotocase_32;if((intconst)*p==115)gotocase_32;if((intconst)*p==116)gotocase_32;if((intconst)*p==117)gotocase_32;if((intconst)*p==118)gotocase_32;if((intconst)*p==119)gotocase_32;if((intconst)*p==120)gotocase_32;if((intconst)*p==121)gotocase_32;if((intconst)*p==122)gotocase_32;if((intconst)*p==123)gotocase_32;if((intconst)*p==124)gotocase_32;if((intconst)*p==125)gotocase_32;if((intconst)*p==126)gotocase_32;gotoswitch_default;case_32:p++;width++;gotoswitch_break;switch_default:memset((void*)(&mbstate),0,sizeof(mbstate));while(1)bytes=mbrtowc(&wc,p,(size_t)(plimit-p),&mbstate);if(bytes==0xffffffffffffffffUL)if(!(flags&1))p++;width++;gotowhile_break___0;elsereturn(-1);if(bytes==0xfffffffffffffffeUL)if(!(flags&1))p=plimit;width++;gotowhile_break___0;elsereturn(-1);if(bytes==0UL)bytes=(size_t)1;w=wcwidth(wc);if(w>=0)if(w>2147483647-width)gotooverflow;width+=w;elseif(!(flags&2))tmp=iswcntrl((wint_t)wc);if(!tmp)if(width==2147483647)gotooverflow;width++;elsereturn(-1);p+=bytes;tmp___0=mbsinit((mbstate_tconst*)(&mbstate));if(tmp___0)gotowhile_break___0;while_break___0:;gotoswitch_break;switch_break:;while_break:;return(width);while(1)if(!((unsignedlong)p<(unsignedlong)plimit))gotowhile_break___1;tmp___2=p;p++;c=(unsignedchar)*tmp___2;tmp___4=__ctype_b_loc();if((intconst)*(*tmp___4+(int)c)&16384)if(width==2147483647)gotooverflow;width++;elseif(!(flags&2))tmp___3=__ctype_b_loc();if(!((intconst)*(*tmp___3+(int)c)&2))if(width==2147483647)gotooverflow;width++;elsereturn(-1);while_break___1:;return(width);overflow:return(2147483647);int(__attribute__((__nonnull__(1,2)))mbscasecmp)(charconst*s1,charconst*s2);extern__attribute__((__nothrow__))wint_t(__attribute__((__leaf__))towlower)(wint_t__wc);int(__attribute__((__nonnull__(1,2)))mbscasecmp)(charconst*s1,charconst*s2)mbui_iterator_titer1;mbui_iterator_titer2;intcmp;wint_ttmp;wint_ttmp___0;inttmp___1;inttmp___2;inttmp___4;inttmp___5;inttmp___7;inttmp___8;inttmp___9;inttmp___10;inttmp___11;inttmp___12;inttmp___13;inttmp___14;inttmp___15;inttmp___16;unsignedcharconst*p1;unsignedcharconst*p2;unsignedcharc1;unsignedcharc2;inttmp___18;unsignedshortconst**tmp___19;inttmp___21;unsignedshortconst**tmp___22;size_ttmp___25;if((unsignedlong)s1==(unsignedlong)s2)return(0);tmp___25=__ctype_get_mb_cur_max();if(tmp___25>1UL)iter1.cur.ptr=s1;iter1.in_shift=(_Bool)0;memset((void*)(&iter1.state),'\000',sizeof(mbstate_t));iter1.next_done=(_Bool)0;iter2.cur.ptr=s2;iter2.in_shift=(_Bool)0;memset((void*)(&iter2.state),'\000',sizeof(mbstate_t));iter2.next_done=(_Bool)0;while(1)mbuiter_multi_next(&iter1);if(iter1.cur.wc_valid)if(iter1.cur.wc==0)tmp___13=0;elsetmp___13=1;elsetmp___13=1;if(tmp___13)mbuiter_multi_next(&iter2);if(iter2.cur.wc_valid)if(iter2.cur.wc==0)tmp___14=0;elsetmp___14=1;elsetmp___14=1;if(!tmp___14)gotowhile_break;elsegotowhile_break;if(iter1.cur.wc_valid)if(iter2.cur.wc_valid)tmp=towlower((wint_t)iter1.cur.wc);tmp___0=towlower((wint_t)iter2.cur.wc);tmp___1=(int)tmp-(int)tmp___0;elsetmp___1=-1;tmp___12=tmp___1;elseif(iter2.cur.wc_valid)tmp___11=1;elseif(iter1.cur.bytes==iter2.cur.bytes)tmp___2=memcmp((voidconst*)iter1.cur.ptr,(voidconst*)iter2.cur.ptr,iter1.cur.bytes);tmp___10=tmp___2;elseif(iter1.cur.bytes<iter2.cur.bytes)tmp___5=memcmp((voidconst*)iter1.cur.ptr,(voidconst*)iter2.cur.ptr,iter1.cur.bytes);if(tmp___5>0)tmp___4=1;elsetmp___4=-1;tmp___9=tmp___4;elsetmp___8=memcmp((voidconst*)iter1.cur.ptr,(voidconst*)iter2.cur.ptr,iter2.cur.bytes);if(tmp___8>=0)tmp___7=1;elsetmp___7=-1;tmp___9=tmp___7;tmp___10=tmp___9;tmp___11=tmp___10;tmp___12=tmp___11;cmp=tmp___12;if(cmp!=0)return(cmp);iter1.cur.ptr+=iter1.cur.bytes;iter1.next_done=(_Bool)0;iter2.cur.ptr+=iter2.cur.bytes;iter2.next_done=(_Bool)0;while_break:mbuiter_multi_next(&iter1);if(iter1.cur.wc_valid)if(iter1.cur.wc==0)tmp___15=0;elsetmp___15=1;elsetmp___15=1;if(tmp___15)return(1);mbuiter_multi_next(&iter2);if(iter2.cur.wc_valid)if(iter2.cur.wc==0)tmp___16=0;elsetmp___16=1;elsetmp___16=1;if(tmp___16)return(-1);return(0);elsep1=(unsignedcharconst*)s1;p2=(unsignedcharconst*)s2;while(1)tmp___19=__ctype_b_loc();if((intconst)*(*tmp___19+(int)*p1)&256)tmp___18=tolower((int)*p1);c1=(unsignedchar)tmp___18;elsec1=(unsignedchar)*p1;tmp___22=__ctype_b_loc();if((intconst)*(*tmp___22+(int)*p2)&256)tmp___21=tolower((int)*p2);c2=(unsignedchar)tmp___21;elsec2=(unsignedchar)*p2;if((int)c1==0)gotowhile_break___0;p1++;p2++;if(!((int)c1==(int)c2))gotowhile_break___0;while_break___0:;return((int)c1-(int)c2);unsignedintconstis_basic_table[8]=(unsignedintconst)6656,(unsignedintconst)4294967279U,(unsignedintconst)4294967294U,(unsignedintconst)2147483646;extern__attribute__((__nothrow__,__noreturn__))void(__attribute__((__leaf__))exit)(int__status);externintoptind;extern__attribute__((__nothrow__))int(__attribute__((__leaf__))getopt_long)(int___argc,char*const*___argv,charconst*__shortopts,structoptionconst*__longopts,int*__longind);extern__attribute__((__nothrow__))int(__attribute__((__nonnull__(1),__leaf__))pthread_mutex_init)(pthread_mutex_t*__mutex,pthread_mutexattr_tconst*__mutexattr);#pragmaweakpthread_mutex_init#pragmaweakpthread_mutex_lock#pragmaweakpthread_mutex_unlock#pragmaweakpthread_mutex_destroy#pragmaweakpthread_rwlock_init#pragmaweakpthread_rwlock_rdlock#pragmaweakpthread_rwlock_wrlock#pragmaweakpthread_rwlock_unlock#pragmaweakpthread_rwlock_destroy#pragmaweakpthread_once#pragmaweakpthread_cond_init#pragmaweakpthread_cond_wait#pragmaweakpthread_cond_signal#pragmaweakpthread_cond_broadcast#pragmaweakpthread_cond_destroy#pragmaweakpthread_mutexattr_init#pragmaweakpthread_mutexattr_settype#pragmaweakpthread_mutexattr_destroy#pragmaweakpthread_self#pragmaweakpthread_cancelextern__attribute__((__nothrow__))FILE*(__attribute__((__leaf__))fdopen)(int__fd,charconst*__modes);externintfscanf(FILE*__restrict__stream,charconst*__restrict__format,...);externintungetc(int__c,FILE*__stream);staticcharconst*volatilecharset_aliases;staticcharconst*get_charset_aliases(void)charconst*cp;charconst*dir;charconst*base;char*file_name___3;size_tdir_len___0;size_ttmp;size_tbase_len___0;size_ttmp___0;intadd_slash;inttmp___1;intfd;FILE*fp;char*res_ptr;size_tres_size;intc;charbuf1[51];charbuf2[51];size_tl1;size_tl2;char*old_res_ptr;inttmp___3;cp=(charconst*)charset_aliases;if((unsignedlong)cp==(unsignedlong)((void*)0))base="charset.alias";dir=(charconst*)getenv("CHARSETALIASDIR");if((unsignedlong)dir==(unsignedlong)((void*)0))dir="/usr/local/lib";elseif((intconst)*(dir+0)==0)dir="/usr/local/lib";tmp=strlen(dir);dir_len___0=tmp;tmp___0=strlen(base);base_len___0=tmp___0;if(dir_len___0>0UL)if(!((intconst)*(dir+(dir_len___0-1UL))==47))tmp___1=1;elsetmp___1=0;elsetmp___1=0;add_slash=tmp___1;file_name___3=(char*)malloc(((dir_len___0+(size_t)add_slash)+base_len___0)+1UL);if((unsignedlong)file_name___3!=(unsignedlong)((void*)0))memcpy((void*)file_name___3,(voidconst*)dir,dir_len___0);if(add_slash)*(file_name___3+dir_len___0)=(char)'/';memcpy((void*)((file_name___3+dir_len___0)+add_slash),(voidconst*)base,base_len___0+1UL);if((unsignedlong)file_name___3==(unsignedlong)((void*)0))cp="";elsefd=open((charconst*)file_name___3,131072);if(fd<0)cp="";elsefp=fdopen(fd,"r");if((unsignedlong)fp==(unsignedlong)((void*)0))close(fd);cp="";elseres_ptr=(char*)((void*)0);res_size=(size_t)0;while(1)c=getc_unlocked(fp);if(c==-1)gotowhile_break;if(c==10)goto__Cont;elseif(c==32)goto__Cont;elseif(c==9)goto__Cont;if(c==35)while(1)c=getc_unlocked(fp);if(c==-1)gotowhile_break___0;elseif(c==10)gotowhile_break___0;while_break___0:;if(c==-1)gotowhile_break;goto__Cont;ungetc(c,fp);tmp___3=fscanf(fp,"%50s%50s",buf1,buf2);if(tmp___3<2)gotowhile_break;l1=strlen((charconst*)(buf1));l2=strlen((charconst*)(buf2));old_res_ptr=res_ptr;if(res_size==0UL)res_size=((l1+1UL)+l2)+1UL;res_ptr=(char*)malloc(res_size+1UL);elseres_size+=((l1+1UL)+l2)+1UL;res_ptr=(char*)realloc((void*)res_ptr,res_size+1UL);if((unsignedlong)res_ptr==(unsignedlong)((void*)0))res_size=(size_t)0;free((void*)old_res_ptr);gotowhile_break;strcpy(((res_ptr+res_size)-(l2+1UL))-(l1+1UL),(charconst*)(buf1));strcpy((res_ptr+res_size)-(l2+1UL),(charconst*)(buf2));__Cont:;while_break:rpl_fclose(fp);if(res_size==0UL)cp="";else*(res_ptr+res_size)=(char)'\000';cp=(charconst*)res_ptr;free((void*)file_name___3);charset_aliases=cp;return(cp);charconst*locale_charset(void)charconst*codeset;charconst*aliases;size_ttmp;size_ttmp___0;size_ttmp___1;inttmp___2;codeset=(charconst*)nl_langinfo(14);if((unsignedlong)codeset==(unsignedlong)((void*)0))codeset="";aliases=get_charset_aliases();while(1)if(!((intconst)*aliases!=0))gotowhile_break;tmp___2=strcmp(codeset,aliases);if(tmp___2==0)tmp___1=strlen(aliases);codeset=(aliases+tmp___1)+1;gotowhile_break;elseif((intconst)*(aliases+0)==42)if((intconst)*(aliases+1)==0)tmp___1=strlen(aliases);codeset=(aliases+tmp___1)+1;gotowhile_break;tmp=strlen(aliases);aliases+=tmp+1UL;tmp___0=strlen(aliases);aliases+=tmp___0+1UL;while_break:;if((intconst)*(codeset+0)==0)codeset="ASCII";return(codeset);extern__attribute__((__nothrow__))longdouble(__attribute__((__nonnull__(1),__leaf__))strtold)(charconst*__restrict__nptr,char**__restrict__endptr);#pragmaGCCdiagnosticignored"-Wtype-limits"#pragmaGCCdiagnosticignored"-Wtype-limits"extern__attribute__((__nothrow__))structlconv*(__attribute__((__leaf__))localeconv)(void);structheap*heap_alloc(int(*compare___0)(voidconst*,voidconst*),size_tn_reserve);voidheap_free(structheap*heap);intheap_insert(structheap*heap,void*item);void*heap_remove_top(structheap*heap);staticsize_theapify_down(void**array,size_tcount,size_tinitial,int(*compare___0)(voidconst*,voidconst*));staticvoidheapify_up(void**array,size_tcount,int(*compare___0)(voidconst*,voidconst*));staticintheap_default_compare(voidconst*a,voidconst*b)return(0);structheap*heap_alloc(int(*compare___0)(voidconst*,voidconst*),size_tn_reserve)structheap*heap;structheap*tmp;tmp=(structheap*)xmalloc(sizeof(*heap));heap=tmp;if(n_reserve==0UL)n_reserve=(size_t)1;heap->array=(void**)xnmalloc(n_reserve,sizeof(*(heap->array)));*(heap->array+0)=(void*)0;heap->capacity=n_reserve;heap->count=(size_t)0;if(compare___0)heap->compare=compare___0;elseheap->compare=&heap_default_compare;return(heap);voidheap_free(structheap*heap)free((void*)heap->array);free((void*)heap);return;intheap_insert(structheap*heap,void*item)if(heap->capacity-1UL<=heap->count)heap->array=(void**)x2nrealloc((void*)heap->array,&heap->capacity,sizeof(*(heap->array)));(heap->count)++;*(heap->array+heap->count)=item;heapify_up(heap->array,heap->count,heap->compare);return(0);void*heap_remove_top(structheap*heap)void*top;size_ttmp;if(heap->count==0UL)return((void*)0);top=*(heap->array+1);tmp=heap->count;(heap->count)--;*(heap->array+1)=*(heap->array+tmp);heapify_down(heap->array,heap->count,(size_t)1,heap->compare);return(top);staticsize_theapify_down(void**array,size_tcount,size_tinitial,int(*compare___0)(voidconst*,voidconst*))void*element;size_tparent;size_tchild;inttmp;inttmp___0;element=*(array+initial);parent=initial;while(1)if(!(parent<=count/2UL))gotowhile_break;child=2UL*parent;if(child<count)tmp=(*compare___0)((voidconst*)*(array+child),(voidconst*)*(array+(child+1UL)));if(tmp<0)child++;tmp___0=(*compare___0)((voidconst*)*(array+child),(voidconst*)element);if(tmp___0<=0)gotowhile_break;*(array+parent)=*(array+child);parent=child;while_break:*(array+parent)=element;return(parent);staticvoidheapify_up(void**array,size_tcount,int(*compare___0)(voidconst*,voidconst*))size_tk;void*new_element;inttmp;k=count;new_element=*(array+k);while(1)if(k!=1UL)tmp=(*compare___0)((voidconst*)*(array+k/2UL),(voidconst*)new_element);if(!(tmp<=0))gotowhile_break;elsegotowhile_break;*(array+k)=*(array+k/2UL);k/=2UL;while_break:*(array+k)=new_element;return;size_thash_string(charconst*string,size_tn_buckets)__attribute__((__pure__));_Bool(__attribute__((__warn_unused_result__))hash_rehash)(Hash_table*table___0,size_tcandidate);__inlinestaticsize_trotr_sz(size_tx,intn)return(((x>>n)|(x<<(8UL*sizeof(x)-(unsignedlong)n)))&0xffffffffffffffffUL);staticstructhash_tuningconstdefault_tuning=0.0f,1.0f,0.8f,1.414f,(_Bool)0;staticstructhash_entry*safe_hasher(Hash_tableconst*table___0,voidconst*key)size_tn;size_ttmp;tmp=(*(table___0->hasher))(key,(size_t)table___0->n_buckets);n=tmp;if(!(n<(size_t)table___0->n_buckets))abort();return((structhash_entry*)(table___0->bucket+n));size_thash_string(charconst*string,size_tn_buckets)__attribute__((__pure__));size_thash_string(charconst*string,size_tn_buckets)size_tvalue;unsignedcharch;value=(size_t)0;while(1)ch=(unsignedchar)*string;if(!ch)gotowhile_break;value=(value*31UL+(size_t)ch)%n_buckets;string++;while_break:;return(value);static_Boolis_prime(size_tcandidate)__attribute__((__const__));static_Boolis_prime(size_tcandidate)__attribute__((__const__));static_Boolis_prime(size_tcandidate)size_tdivisor;size_tsquare;inttmp;divisor=(size_t)3;square=divisor*divisor;while(1)if(square<candidate)if(!(candidate%divisor))gotowhile_break;elsegotowhile_break;divisor++;square+=4UL*divisor;divisor++;while_break:;if(candidate%divisor)tmp=1;elsetmp=0;return((_Bool)tmp);staticsize_tnext_prime(size_tcandidate)__attribute__((__const__));staticsize_tnext_prime(size_tcandidate)__attribute__((__const__));staticsize_tnext_prime(size_tcandidate)_Booltmp;if(candidate<10UL)candidate=(size_t)10;candidate|=1UL;while(1)if(0xffffffffffffffffUL!=candidate)tmp=is_prime(candidate);if(tmp)gotowhile_break;elsegotowhile_break;candidate+=2UL;while_break:;return(candidate);staticsize_traw_hasher(voidconst*data,size_tn)size_tval;size_ttmp;tmp=rotr_sz((size_t)data,3);val=tmp;return(val%n);static_Boolraw_comparator(voidconst*a,voidconst*b)return((_Bool)((unsignedlong)a==(unsignedlong)b));static_Boolcheck_tuning(Hash_table*table___0)Hash_tuningconst*tuning;floatepsilon;tuning=table___0->tuning;if((unsignedlong)tuning==(unsignedlong)(&default_tuning))return((_Bool)1);epsilon=0.1f;if(epsilon<(float)tuning->growth_threshold)if(tuning->growth_threshold<(floatconst)((float)1-epsilon))if((float)1+epsilon<(float)tuning->growth_factor)if((floatconst)0<=tuning->shrink_threshold)if(tuning->shrink_threshold+(floatconst)epsilon<tuning->shrink_factor)if(tuning->shrink_factor<=(floatconst)1)if(tuning->shrink_threshold+(floatconst)epsilon<tuning->growth_threshold)return((_Bool)1);table___0->tuning=&default_tuning;return((_Bool)0);staticsize_t__attribute__((__pure__))compute_bucket_size(size_tcandidate,Hash_tuningconst*tuning)floatnew_candidate;inttmp;if(!tuning->is_n_buckets)new_candidate=(float)((floatconst)candidate/tuning->growth_threshold);if((float)0xffffffffffffffffUL<=new_candidate)return((size_t__attribute__((__pure__)))0);candidate=(size_t)new_candidate;candidate=next_prime(candidate);if(sizeof(ptrdiff_t)<=sizeof(size_t))tmp=-1;elsetmp=-2;if((size_t)tmp/sizeof(structhash_entry*)<candidate)return((size_t__attribute__((__pure__)))0);return((size_t__attribute__((__pure__)))candidate);Hash_table*(__attribute__((__warn_unused_result__))hash_initialize)(size_tcandidate,Hash_tuningconst*tuning,size_t(*hasher)(voidconst*,size_t),_Bool(*comparator)(voidconst*,voidconst*),void(*data_freer)(void*))Hash_table*table___0;_Booltmp;if((unsignedlong)hasher==(unsignedlong)((void*)0))hasher=&raw_hasher;if((unsignedlong)comparator==(unsignedlong)((void*)0))comparator=&raw_comparator;table___0=(Hash_table*)malloc(sizeof(*table___0));if((unsignedlong)table___0==(unsignedlong)((void*)0))return((Hash_table*)((void*)0));if(!tuning)tuning=&default_tuning;table___0->tuning=tuning;tmp=check_tuning(table___0);if(!tmp)gotofail;table___0->n_buckets=(size_t)compute_bucket_size(candidate,tuning);if(!table___0->n_buckets)gotofail;table___0->bucket=(structhash_entry*)calloc(table___0->n_buckets,sizeof(*(table___0->bucket)));if((unsignedlong)table___0->bucket==(unsignedlong)((void*)0))gotofail;table___0->bucket_limit=(structhash_entryconst*)(table___0->bucket+table___0->n_buckets);table___0->n_buckets_used=(size_t)0;table___0->n_entries=(size_t)0;table___0->hasher=hasher;table___0->comparator=comparator;table___0->data_freer=data_freer;table___0->free_entry_list=(structhash_entry*)((void*)0);return(table___0);fail:free((void*)table___0);return((Hash_table*)((void*)0));staticstructhash_entry*allocate_entry(Hash_table*table___0)structhash_entry*new;if(table___0->free_entry_list)new=table___0->free_entry_list;table___0->free_entry_list=new->next;elsenew=(structhash_entry*)malloc(sizeof(*new));return(new);staticvoidfree_entry(Hash_table*table___0,structhash_entry*entry)entry->data=(void*)0;entry->next=table___0->free_entry_list;table___0->free_entry_list=entry;return;staticvoid*hash_find_entry(Hash_table*table___0,voidconst*entry,structhash_entry**bucket_head,_Booldelete)structhash_entry*bucket;structhash_entry*tmp;structhash_entry*cursor;void*data;structhash_entry*next;_Booltmp___0;void*data___0;structhash_entry*next___0;_Booltmp___1;tmp=safe_hasher((Hash_tableconst*)table___0,entry);bucket=tmp;*bucket_head=bucket;if((unsignedlong)bucket->data==(unsignedlong)((void*)0))return((void*)0);if((unsignedlong)entry==(unsignedlong)bucket->data)goto_L;elsetmp___0=(*(table___0->comparator))(entry,(voidconst*)bucket->data);if(tmp___0)_L:data=bucket->data;if(delete)if(bucket->next)next=bucket->next;*bucket=*next;free_entry(table___0,next);elsebucket->data=(void*)0;return(data);cursor=bucket;while(1)if(!cursor->next)gotowhile_break;if((unsignedlong)entry==(unsignedlong)(cursor->next)->data)goto_L___0;elsetmp___1=(*(table___0->comparator))(entry,(voidconst*)(cursor->next)->data);if(tmp___1)_L___0:data___0=(cursor->next)->data;if(delete)next___0=cursor->next;cursor->next=next___0->next;free_entry(table___0,next___0);return(data___0);cursor=cursor->next;while_break:;return((void*)0);static_Booltransfer_entries(Hash_table*dst,Hash_table*src,_Boolsafe)structhash_entry*bucket;structhash_entry*cursor;structhash_entry*next;void*data;structhash_entry*new_bucket;structhash_entry*new_entry;structhash_entry*tmp;bucket=src->bucket;while(1)if(!((unsignedlong)bucket<(unsignedlong)src->bucket_limit))gotowhile_break;if(bucket->data)cursor=bucket->next;while(1)if(!cursor)gotowhile_break___0;data=cursor->data;new_bucket=safe_hasher((Hash_tableconst*)dst,(voidconst*)data);next=cursor->next;if(new_bucket->data)cursor->next=new_bucket->next;new_bucket->next=cursor;elsenew_bucket->data=data;(dst->n_buckets_used)++;free_entry(dst,cursor);cursor=next;while_break___0:data=bucket->data;bucket->next=(structhash_entry*)((void*)0);if(safe)goto__Cont;new_bucket=safe_hasher((Hash_tableconst*)dst,(voidconst*)data);if(new_bucket->data)tmp=allocate_entry(dst);new_entry=tmp;if((unsignedlong)new_entry==(unsignedlong)((void*)0))return((_Bool)0);new_entry->data=data;new_entry->next=new_bucket->next;new_bucket->next=new_entry;elsenew_bucket->data=data;(dst->n_buckets_used)++;bucket->data=(void*)0;(src->n_buckets_used)--;__Cont:bucket++;while_break:;return((_Bool)1);_Bool(__attribute__((__warn_unused_result__))hash_rehash)(Hash_table*table___0,size_tcandidate)Hash_tablestorage;Hash_table*new_table;size_tnew_size;size_ttmp;_Booltmp___0;_Booltmp___1;_Booltmp___2;tmp=(size_t)compute_bucket_size(candidate,table___0->tuning);new_size=tmp;if(!new_size)return((_Bool)0);if(new_size==table___0->n_buckets)return((_Bool)1);new_table=&storage;new_table->bucket=(structhash_entry*)calloc(new_size,sizeof(*(new_table->bucket)));if((unsignedlong)new_table->bucket==(unsignedlong)((void*)0))return((_Bool)0);new_table->n_buckets=new_size;new_table->bucket_limit=(structhash_entryconst*)(new_table->bucket+new_size);new_table->n_buckets_used=(size_t)0;new_table->n_entries=(size_t)0;new_table->tuning=table___0->tuning;new_table->hasher=table___0->hasher;new_table->comparator=table___0->comparator;new_table->data_freer=table___0->data_freer;new_table->free_entry_list=table___0->free_entry_list;tmp___0=transfer_entries(new_table,table___0,(_Bool)0);if(tmp___0)free((void*)table___0->bucket);table___0->bucket=new_table->bucket;table___0->bucket_limit=new_table->bucket_limit;table___0->n_buckets=new_table->n_buckets;table___0->n_buckets_used=new_table->n_buckets_used;table___0->free_entry_list=new_table->free_entry_list;return((_Bool)1);table___0->free_entry_list=new_table->free_entry_list;tmp___1=transfer_entries(table___0,new_table,(_Bool)1);if(tmp___1)tmp___2=transfer_entries(table___0,new_table,(_Bool)0);if(!tmp___2)abort();elseabort();free((void*)new_table->bucket);return((_Bool)0);inthash_insert_if_absent(Hash_table*table___0,voidconst*entry,voidconst**matched_ent)void*data;structhash_entry*bucket;Hash_tuningconst*tuning;floatcandidate;floattmp;_Booltmp___0;void*tmp___1;structhash_entry*new_entry;structhash_entry*tmp___2;if(!entry)abort();data=hash_find_entry(table___0,entry,&bucket,(_Bool)0);if((unsignedlong)data!=(unsignedlong)((void*)0))if(matched_ent)*matched_ent=(voidconst*)data;return(0);if((floatconst)table___0->n_buckets_used>(table___0->tuning)->growth_threshold*(floatconst)table___0->n_buckets)check_tuning(table___0);if((floatconst)table___0->n_buckets_used>(table___0->tuning)->growth_threshold*(floatconst)table___0->n_buckets)tuning=table___0->tuning;if(tuning->is_n_buckets)tmp=(float)((floatconst)table___0->n_buckets*tuning->growth_factor);elsetmp=(float)(((floatconst)table___0->n_buckets*tuning->growth_factor)*tuning->growth_threshold);candidate=tmp;if((float)0xffffffffffffffffUL<=candidate)return(-1);tmp___0=hash_rehash(table___0,(size_t)candidate);if(!tmp___0)return(-1);tmp___1=hash_find_entry(table___0,entry,&bucket,(_Bool)0);if((unsignedlong)tmp___1!=(unsignedlong)((void*)0))abort();if(bucket->data)tmp___2=allocate_entry(table___0);new_entry=tmp___2;if((unsignedlong)new_entry==(unsignedlong)((void*)0))return(-1);new_entry->data=(void*)entry;new_entry->next=bucket->next;bucket->next=new_entry;(table___0->n_entries)++;return(1);bucket->data=(void*)entry;(table___0->n_entries)++;(table___0->n_buckets_used)++;return(1);void*(__attribute__((__warn_unused_result__))hash_insert)(Hash_table*table___0,voidconst*entry)voidconst*matched_ent;interr;inttmp;voidconst*tmp___0;void*tmp___1;tmp=hash_insert_if_absent(table___0,entry,&matched_ent);err=tmp;if(err==-1)tmp___1=(void*)0;elseif(err==0)tmp___0=matched_ent;elsetmp___0=entry;tmp___1=(void*)tmp___0;return(tmp___1);void*hash_delete(Hash_table*table___0,voidconst*entry)void*data;structhash_entry*bucket;Hash_tuningconst*tuning;size_tcandidate;floattmp;structhash_entry*cursor;structhash_entry*next;_Booltmp___0;data=hash_find_entry(table___0,entry,&bucket,(_Bool)1);if(!data)return((void*)0);(table___0->n_entries)--;if(!bucket->data)(table___0->n_buckets_used)--;if((floatconst)table___0->n_buckets_used<(table___0->tuning)->shrink_threshold*(floatconst)table___0->n_buckets)check_tuning(table___0);if((floatconst)table___0->n_buckets_used<(table___0->tuning)->shrink_threshold*(floatconst)table___0->n_buckets)tuning=table___0->tuning;if(tuning->is_n_buckets)tmp=(float)((floatconst)table___0->n_buckets*tuning->shrink_factor);elsetmp=(float)(((floatconst)table___0->n_buckets*tuning->shrink_factor)*tuning->growth_threshold);candidate=(size_t)tmp;tmp___0=hash_rehash(table___0,candidate);if(!tmp___0)cursor=table___0->free_entry_list;while(1)if(!cursor)gotowhile_break;next=cursor->next;free((void*)cursor);cursor=next;while_break:table___0->free_entry_list=(structhash_entry*)((void*)0);return(data);size_thash_pjw(voidconst*x,size_ttablesize)__attribute__((__pure__));size_ttriple_hash(voidconst*x,size_ttable_size)__attribute__((__pure__));size_ttriple_hash(voidconst*x,size_ttable_size)structF_tripleconst*p;size_ttmp;size_ttmp___0;p=(structF_tripleconst*)x;tmp___0=hash_pjw((voidconst*)p->name,table_size);tmp=tmp___0;return((tmp^(unsignedlong)p->st_ino)%table_size);_Booltriple_compare_ino_str(voidconst*x,voidconst*y)__attribute__((__pure__));_Booltriple_compare_ino_str(voidconst*x,voidconst*y)structF_tripleconst*a;structF_tripleconst*b;inttmp___0;inttmp___1;a=(structF_tripleconst*)x;b=(structF_tripleconst*)y;if(a->st_ino==b->st_ino)if(a->st_dev==b->st_dev)tmp___1=strcmp((charconst*)a->name,(charconst*)b->name);if(tmp___1==0)tmp___0=1;elsetmp___0=0;elsetmp___0=0;elsetmp___0=0;return((_Bool)tmp___0);size_thash_pjw(voidconst*x,size_ttablesize)__attribute__((__pure__));size_thash_pjw(voidconst*x,size_ttablesize)charconst*s;size_th;h=(size_t)0;s=(charconst*)x;while(1)if(!*s)gotowhile_break;h=(unsignedlong)*s+((h<<9)|(h>>(sizeof(size_t)*8UL-9UL)));s++;while_break:;return(h%tablesize);_Boolhard_locale(intcategory);extern__attribute__((__nothrow__))char*(__attribute__((__leaf__))setlocale)(int__category,charconst*__locale);_Boolhard_locale(intcategory)_Boolhard;charconst*p;charconst*tmp;inttmp___0;inttmp___1;char*locale;char*tmp___2;inttmp___3;inttmp___4;hard=(_Bool)1;tmp=(charconst*)setlocale(category,(charconst*)((void*)0));p=tmp;if(p)if(1)tmp___0=strcmp(p,"C");if(tmp___0==0)hard=(_Bool)0;elsetmp___1=strcmp(p,"POSIX");if(tmp___1==0)hard=(_Bool)0;elsetmp___2=strdup(p);locale=tmp___2;if(locale)p=(charconst*)setlocale(category,"C");if(p)tmp___3=strcmp(p,(charconst*)locale);if(tmp___3==0)hard=(_Bool)0;elsegoto_L;else_L:p=(charconst*)setlocale(category,"POSIX");if(p)tmp___4=strcmp(p,(charconst*)locale);if(tmp___4==0)hard=(_Bool)0;setlocale(category,(charconst*)locale);free((void*)locale);return(hard);externintfflush_unlocked(FILE*__stream);externvoid(__attribute__((__nonnull__(1,4)))qsort)(void*__base,size_t__nmemb,size_t__size,int(*__compar)(voidconst*,voidconst*));externintfseeko(FILE*__stream,__off_t__off,int__whence);extern__attribute__((__nothrow__))__off_t(__attribute__((__leaf__))lseek)(int__fd,__off_t__offset,int__whence);int(__attribute__((__nonnull__(1)))rpl_fseeko)(FILE*fp,off_toffset,intwhence)off_tpos;inttmp;off_ttmp___0;inttmp___1;if((unsignedlong)fp->_IO_read_end==(unsignedlong)fp->_IO_read_ptr)if((unsignedlong)fp->_IO_write_ptr==(unsignedlong)fp->_IO_write_base)if((unsignedlong)fp->_IO_save_base==(unsignedlong)((void*)0))tmp=fileno(fp);tmp___0=lseek(tmp,offset,whence);pos=tmp___0;if(pos==-1L)return(-1);fp->_flags&=-17;fp->_offset=pos;return(0);tmp___1=fseeko(fp,offset,whence);return(tmp___1);extern__attribute__((__nothrow__))int(__attribute__((__leaf__))dup2)(int__fd,int__fd2);FILE*fopen_safer(charconst*file,charconst*mode)FILE*fp;FILE*tmp;intfd;inttmp___0;intf;inttmp___1;inte;int*tmp___2;int*tmp___3;inte___0;int*tmp___4;int*tmp___5;inttmp___6;tmp=fopen(file,mode);fp=tmp;if(fp)tmp___0=fileno(fp);fd=tmp___0;if(0<=fd)if(fd<=2)tmp___1=dup_safer(fd);f=tmp___1;if(f<0)tmp___2=__errno_location();e=*tmp___2;rpl_fclose(fp);tmp___3=__errno_location();*tmp___3=e;return((FILE*)((void*)0));tmp___6=rpl_fclose(fp);if(tmp___6!=0)goto_L;elsefp=fdopen(f,mode);if(!fp)_L:tmp___4=__errno_location();e___0=*tmp___4;close(f);tmp___5=__errno_location();*tmp___5=e___0;return((FILE*)((void*)0));return(fp);intfilevercmp(charconst*s1,charconst*s2);staticcharconst*match_suffix(charconst**str)charconst*match;_Boolread_alpha;_Booltmp;_Booltmp___0;match=(charconst*)((void*)0);read_alpha=(_Bool)0;while(1)if(!*(*str))gotowhile_break;if(read_alpha)read_alpha=(_Bool)0;tmp=c_isalpha((int)*(*str));if(!tmp)if(126!=(int)*(*str))match=(charconst*)((void*)0);elseif(46==(int)*(*str))read_alpha=(_Bool)1;if(!match)match=*str;elsetmp___0=c_isalnum((int)*(*str));if(!tmp___0)if(126!=(int)*(*str))match=(charconst*)((void*)0);(*str)++;while_break:;return(match);__inlinestaticintorder(unsignedcharc)_Booltmp;_Booltmp___0;tmp___0=c_isdigit((int)c);if(tmp___0)return(0);elsetmp=c_isalpha((int)c);if(tmp)return((int)c);elseif((int)c==126)return(-1);elsereturn(((int)c+255)+1);staticint__attribute__((__pure__))verrevcmp(charconst*s1,size_ts1_len,charconst*s2,size_ts2_len)size_ts1_pos;size_ts2_pos;intfirst_diff;ints1_c;inttmp;inttmp___0;ints2_c;inttmp___1;inttmp___2;_Booltmp___3;_Booltmp___4;_Booltmp___5;_Booltmp___6;_Booltmp___7;_Booltmp___8;s1_pos=(size_t)0;s2_pos=(size_t)0;while(1)if(!(s1_pos<s1_len))if(!(s2_pos<s2_len))gotowhile_break;first_diff=0;while(1)if(s1_pos<s1_len)tmp___3=c_isdigit((int)*(s1+s1_pos));if(tmp___3)goto_L;else_L:if(s2_pos<s2_len)tmp___4=c_isdigit((int)*(s2+s2_pos));if(tmp___4)gotowhile_break___0;elsegotowhile_break___0;if(s1_pos==s1_len)tmp___0=0;elsetmp=order((unsignedchar)*(s1+s1_pos));tmp___0=tmp;s1_c=tmp___0;if(s2_pos==s2_len)tmp___2=0;elsetmp___1=order((unsignedchar)*(s2+s2_pos));tmp___2=tmp___1;s2_c=tmp___2;if(s1_c!=s2_c)return((int__attribute__((__pure__)))(s1_c-s2_c));s1_pos++;s2_pos++;while_break___0:;while(1)if(!((intconst)*(s1+s1_pos)==48))gotowhile_break___1;s1_pos++;while_break___1:;while(1)if(!((intconst)*(s2+s2_pos)==48))gotowhile_break___2;s2_pos++;while_break___2:;while(1)tmp___5=c_isdigit((int)*(s1+s1_pos));if(tmp___5)tmp___6=c_isdigit((int)*(s2+s2_pos));if(!tmp___6)gotowhile_break___3;elsegotowhile_break___3;if(!first_diff)first_diff=(int)((intconst)*(s1+s1_pos)-(intconst)*(s2+s2_pos));s1_pos++;s2_pos++;while_break___3:tmp___7=c_isdigit((int)*(s1+s1_pos));if(tmp___7)return((int__attribute__((__pure__)))1);tmp___8=c_isdigit((int)*(s2+s2_pos));if(tmp___8)return((int__attribute__((__pure__)))-1);if(first_diff)return((int__attribute__((__pure__)))first_diff);while_break:;return((int__attribute__((__pure__)))0);intfilevercmp(charconst*s1,charconst*s2)charconst*s1_pos;charconst*s2_pos;charconst*s1_suffix;charconst*s2_suffix;size_ts1_len;size_ts2_len;intresult;intsimple_cmp;inttmp;inttmp___0;inttmp___1;inttmp___2;inttmp___3;charconst*tmp___4;charconst*tmp___5;inttmp___6;inttmp___7;tmp=strcmp(s1,s2);simple_cmp=tmp;if(simple_cmp==0)return(0);if(!*s1)return(-1);if(!*s2)return(1);tmp___0=strcmp(".",s1);if(0==tmp___0)return(-1);tmp___1=strcmp(".",s2);if(0==tmp___1)return(1);tmp___2=strcmp("..",s1);if(0==tmp___2)return(-1);tmp___3=strcmp("..",s2);if(0==tmp___3)return(1);if((intconst)*s1==46)if((intconst)*s2!=46)return(-1);if((intconst)*s1!=46)if((intconst)*s2==46)return(1);if((intconst)*s1==46)if((intconst)*s2==46)s1++;s2++;s1_pos=s1;s2_pos=s2;s1_suffix=match_suffix(&s1_pos);s2_suffix=match_suffix(&s2_pos);if(s1_suffix)tmp___4=s1_suffix;elsetmp___4=s1_pos;s1_len=(size_t)(tmp___4-s1);if(s2_suffix)tmp___5=s2_suffix;elsetmp___5=s2_pos;s2_len=(size_t)(tmp___5-s2);if(s1_suffix)goto_L;elseif(s2_suffix)_L:if(s1_len==s2_len)tmp___6=strncmp(s1,s2,s1_len);if(0==tmp___6)s1_len=(size_t)(s1_pos-s1);s2_len=(size_t)(s2_pos-s2);result=(int)verrevcmp(s1,s1_len,s2,s2_len);if(result==0)tmp___7=simple_cmp;elsetmp___7=result;return(tmp___7);#pragmaGCCdiagnosticignored"-Wsuggest-attribute=const"externintfflush(FILE*__stream);extern__attribute__((__nothrow__))int(__attribute__((__leaf__))__freading)(FILE*__fp);__inlinestaticvoidclear_ungetc_buffer_preserving_position(FILE*fp)if(fp->_flags&256)rpl_fseeko(fp,(off_t)0,1);return;intrpl_fflush(FILE*stream)inttmp;inttmp___0;inttmp___1;if((unsignedlong)stream==(unsignedlong)((void*)0))tmp=fflush(stream);return(tmp);elsetmp___0=__freading(stream);if(!(tmp___0!=0))tmp=fflush(stream);return(tmp);clear_ungetc_buffer_preserving_position(stream);tmp___1=fflush(stream);return(tmp___1);intfd_safer(intfd)intf;inttmp;inte;int*tmp___0;int*tmp___1;if(0<=fd)if(fd<=2)tmp=dup_safer(fd);f=tmp;tmp___0=__errno_location();e=*tmp___0;close(fd);tmp___1=__errno_location();*tmp___1=e;fd=f;return(fd);externintfcntl(int__fd,int__cmd,...);staticinthave_dupfd_cloexec=0;intrpl_fcntl(intfd,intaction,...)va_listarg;intresult;inttarget;inttmp;int*tmp___0;intflags;inttmp___1;intsaved_errno;int*tmp___2;int*tmp___3;inttmp___4;void*p;void*tmp___5;result=-1;__builtin_va_start(arg,action);if(action==1030)gotocase_1030;gotoswitch_default;case_1030:tmp=__builtin_va_arg(arg,int);target=tmp;if(0<=have_dupfd_cloexec)result=fcntl(fd,action,target);if(0<=result)have_dupfd_cloexec=1;elsetmp___0=__errno_location();if(*tmp___0!=22)have_dupfd_cloexec=1;elseresult=rpl_fcntl(fd,0,target);if(result<0)gotoswitch_break;have_dupfd_cloexec=-1;elseresult=rpl_fcntl(fd,0,target);if(0<=result)if(have_dupfd_cloexec==-1)tmp___1=fcntl(result,1);flags=tmp___1;if(flags<0)goto_L;elsetmp___4=fcntl(result,2,flags|1);if(tmp___4==-1)_L:tmp___2=__errno_location();saved_errno=*tmp___2;close(result);tmp___3=__errno_location();*tmp___3=saved_errno;result=-1;gotoswitch_break;switch_default:tmp___5=__builtin_va_arg(arg,void*);p=tmp___5;result=fcntl(fd,action,p);gotoswitch_break;switch_break:__builtin_va_end(arg);return(result);externintfclose(FILE*__stream);int(__attribute__((__nonnull__(1)))rpl_fclose)(FILE*fp)intsaved_errno;intfd;intresult;inttmp;int*tmp___0;inttmp___1;inttmp___2;__off_ttmp___3;inttmp___4;int*tmp___5;saved_errno=0;result=0;fd=fileno(fp);if(fd<0)tmp=fclose(fp);return(tmp);tmp___1=__freading(fp);if(tmp___1!=0)tmp___2=fileno(fp);tmp___3=lseek(tmp___2,(__off_t)0,1);if(tmp___3!=-1L)_L:tmp___4=rpl_fflush(fp);if(tmp___4)tmp___0=__errno_location();saved_errno=*tmp___0;elsegoto_L;result=fclose(fp);if(saved_errno!=0)tmp___5=__errno_location();*tmp___5=saved_errno;result=-1;return(result);extern__attribute__((__nothrow__))int(__attribute__((__nonnull__(1),__leaf__))sigemptyset)(sigset_t*__set);extern__attribute__((__nothrow__))int(__attribute__((__nonnull__(1),__leaf__))sigaddset)(sigset_t*__set,int__signo);extern__attribute__((__nothrow__))int(__attribute__((__leaf__))sigaction)(int__sig,structsigactionconst*__restrict__act,structsigaction*__restrict__oact);extern__attribute__((__nothrow__))int(__attribute__((__leaf__))posix_fadvise)(int__fd,off_t__offset,off_t__len,int__advise);voidfdadvise(intfd,off_toffset,off_tlen,fadvice_tadvice);voidfadvise(FILE*fp,fadvice_tadvice);voidfdadvise(intfd,off_toffset,off_tlen,fadvice_tadvice)int__x;inttmp;tmp=posix_fadvise(fd,offset,len,(int)advice);__x=tmp;return;voidfadvise(FILE*fp,fadvice_tadvice)inttmp;if(fp)tmp=fileno(fp);fdadvise(tmp,(off_t)0,(off_t)0,advice);return;intvolatileexit_failure=(intvolatile)1;intdup_safer(intfd)inttmp;tmp=rpl_fcntl(fd,0,3);return(tmp);#pragmaGCCdiagnosticignored"-Wtype-limits"#pragmaGCCdiagnosticignored"-Wtype-limits"#pragmaweakpthread_key_create#pragmaweakpthread_getspecific#pragmaweakpthread_setspecific#pragmaweakpthread_key_delete#pragmaweakpthread_self#pragmaweakpthread_cancel#pragmaGCCdiagnosticignored"-Wsuggest-attribute=pure"#pragmaGCCdiagnosticignored"-Wsuggest-attribute=const"#pragmaGCCdiagnosticignored"-Wtype-limits"#pragmaweakpthread_mutex_init#pragmaweakpthread_mutex_lock#pragmaweakpthread_mutex_unlock#pragmaweakpthread_mutex_destroy#pragmaweakpthread_rwlock_init#pragmaweakpthread_rwlock_rdlock#pragmaweakpthread_rwlock_wrlock#pragmaweakpthread_rwlock_unlock#pragmaweakpthread_rwlock_destroy#pragmaweakpthread_once#pragmaweakpthread_cond_init#pragmaweakpthread_cond_wait#pragmaweakpthread_cond_signal#pragmaweakpthread_cond_broadcast#pragmaweakpthread_cond_destroy#pragmaweakpthread_mutexattr_init#pragmaweakpthread_mutexattr_settype#pragmaweakpthread_mutexattr_destroy#pragmaweakpthread_self#pragmaweakpthread_cancel#pragmaGCCdiagnosticignored"-Wtype-limits"#pragmaGCCdiagnosticignored"-Wtype-limits"#pragmaGCCdiagnosticignored"-Wsuggest-attribute=const"charconst*Version="8.16";externchar*optarg;extern__attribute__((__nothrow__))int(__attribute__((__nonnull__(1,3)))pthread_create)(pthread_t*__restrict__newthread,pthread_attr_tconst*__restrict__attr,void*(*__start_routine)(void*),void*__restrict__arg);externintpthread_join(pthread_t__th,void**__thread_return);extern__attribute__((__nothrow__))int(__attribute__((__nonnull__(1),__leaf__))pthread_mutex_destroy)(pthread_mutex_t*__mutex);extern__attribute__((__nothrow__))int(__attribute__((__nonnull__(1)))pthread_mutex_lock)(pthread_mutex_t*__mutex);extern__attribute__((__nothrow__))int(__attribute__((__nonnull__(1)))pthread_mutex_unlock)(pthread_mutex_t*__mutex);extern__attribute__((__nothrow__))int(__attribute__((__nonnull__(1),__leaf__))pthread_cond_init)(pthread_cond_t*__restrict__cond,pthread_condattr_tconst*__restrict__cond_attr);extern__attribute__((__nothrow__))int(__attribute__((__nonnull__(1),__leaf__))pthread_cond_destroy)(pthread_cond_t*__cond);extern__attribute__((__nothrow__))int(__attribute__((__nonnull__(1)))pthread_cond_signal)(pthread_cond_t*__cond);externint(__attribute__((__nonnull__(1,2)))pthread_cond_wait)(pthread_cond_t*__restrict__cond,pthread_mutex_t*__restrict__mutex);extern__attribute__((__nothrow__))__sighandler_t(__attribute__((__leaf__))signal)(int__sig,void(*__handler)(int));extern__attribute__((__nothrow__))int(__attribute__((__nonnull__(1),__leaf__))sigismember)(sigset_tconst*__set,int__signo);extern__attribute__((__nothrow__))int(__attribute__((__nonnull__(1,2),__leaf__))execlp)(charconst*__file,charconst*__arg,...);extern__attribute__((__nothrow__))size_t(__attribute__((__nonnull__(2),__leaf__))strxfrm)(char*__restrict__dest,charconst*__restrict__src,size_t__n);__inlinestaticvoidinitialize_exit_failure(intstatus)if(status!=1)exit_failure=(intvolatile)status;return;extern__attribute__((__nothrow__))char*(__attribute__((__leaf__))ngettext)(charconst*__msgid1,charconst*__msgid2,unsignedlong__n)__attribute__((__format_arg__(2),__format_arg__(1)));extern__attribute__((__nothrow__))char*(__attribute__((__leaf__))textdomain)(charconst*__domainname);extern__attribute__((__nothrow__))char*(__attribute__((__leaf__))bindtextdomain)(charconst*__domainname,charconst*__dirname);__inlinestaticunsignedlongselect_plural(uintmax_tn)uintmax_ttmp;if(n<=0xffffffffffffffffUL)tmp=n;elsetmp=n%1000000UL+1000000UL;return(tmp);externintfputc_unlocked(int__c,FILE*__stream);externintputchar_unlocked(int__c);externsize_tfwrite_unlocked(voidconst*__restrict__ptr,size_t__size,size_t__n,FILE*__restrict__stream);extern__attribute__((__nothrow__))void(__attribute__((__leaf__))clearerr_unlocked)(FILE*__stream);__inlinestaticvoidemit_ancillary_info(void)char*tmp;char*tmp___0;char*tmp___1;char*tmp___2;charconst*lc_messages;charconst*tmp___3;char*tmp___4;char*tmp___5;inttmp___6;char*tmp___7;char*tmp___8;tmp=last_component(program_name);tmp___0=gettext("\nReport%sbugsto%s\n");printf((charconst*)tmp___0,tmp,"bug-coreutils@gnu.org");tmp___1=gettext("%shomepage:<%s>\n");printf((charconst*)tmp___1,"GNUcoreutils","http://www.gnu.org/software/coreutils/");tmp___2=gettext("GeneralhelpusingGNUsoftware:<http://www.gnu.org/gethelp/>\n");fputs_unlocked((charconst*)tmp___2,stdout);tmp___3=(charconst*)setlocale(5,(charconst*)((void*)0));lc_messages=tmp___3;if(lc_messages)tmp___6=strncmp(lc_messages,"en_",sizeof("en_")-1UL);if(tmp___6)tmp___4=last_component(program_name);tmp___5=gettext("Report%stranslationbugsto<http://translationproject.org/team/>\n");printf((charconst*)tmp___5,tmp___4);tmp___7=last_component(program_name);tmp___8=gettext("Forcompletedocumentation,run:infocoreutils\'%sinvocation\'\n");printf((charconst*)tmp___8,tmp___7);return;__inlinestaticvoidemit_try_help(void)char*tmp;tmp=gettext("Try\'%s--help\'formoreinformation.\n");fprintf(stderr,(charconst*)tmp,program_name);return;extern__attribute__((__nothrow__))int(__attribute__((__leaf__))getrlimit)(__rlimit_resource_t__resource,structrlimit*__rlimits);staticintdecimal_point;staticintthousands_sep;static_Boolhard_LC_COLLATE;static_Boolhard_LC_TIME;staticchareolchar=(char)'\n';static_Boolblanks[256];static_Boolnonprinting[256];static_Boolnondictionary[256];staticcharfold_toupper[256];staticstructmonthmonthtab[12]="APR",4,"AUG",8,"DEC",12,"FEB",2,"JAN",1,"JUL",7,"JUN",6,"MAR",3,"MAY",5,"NOV",11,"OCT",10,"SEP",9;staticsize_tmerge_buffer_size=(size_t)262144;staticsize_tsort_size;staticcharconst**temp_dirs;staticsize_ttemp_dir_count;staticsize_ttemp_dir_alloc;static_Boolreverse;static_Boolstable;staticinttab=128;static_Boolunique;static_Boolhave_read_stdin;staticstructkeyfield*keylist;staticcharconst*compress_program;static_Booldebug;staticunsignedintnmerge=16U;static__attribute__((__noreturn__))voiddie(charconst*message,charconst*file);static__attribute__((__noreturn__))voiddie(charconst*message,charconst*file);staticvoiddie(charconst*message,charconst*file)char*tmp;charconst*tmp___0;int*tmp___1;if(file)tmp___0=file;elsetmp=gettext("standardoutput");tmp___0=(charconst*)tmp;tmp___1=__errno_location();error(0,*tmp___1,"%s:%s",message,tmp___0);exit(2);__attribute__((__noreturn__))voidusage(intstatus);voidusage(intstatus)char*tmp;char*tmp___0;char*tmp___1;char*tmp___2;char*tmp___3;char*tmp___4;char*tmp___5;char*tmp___6;char*tmp___7;char*tmp___8;char*tmp___9;char*tmp___10;char*tmp___11;char*tmp___12;char*tmp___13;char*tmp___14;char*tmp___15;char*tmp___16;char*tmp___17;char*tmp___18;char*tmp___19;if(status!=0)emit_try_help();elsetmp=gettext("Usage:%s[OPTION]...[FILE]...\nor:%s[OPTION]...--files0-from=F\n");printf((charconst*)tmp,program_name,program_name);tmp___0=gettext("WritesortedconcatenationofallFILE(s)tostandardoutput.\n\n");fputs_unlocked((charconst*)tmp___0,stdout);tmp___1=gettext("Mandatoryargumentstolongoptionsaremandatoryforshortoptionstoo.\n");fputs_unlocked((charconst*)tmp___1,stdout);tmp___2=gettext("Orderingoptions:\n\n");fputs_unlocked((charconst*)tmp___2,stdout);tmp___3=gettext("-b,--ignore-leading-blanksignoreleadingblanks\n-d,--dictionary-orderconsideronlyblanksandalphanumericcharacters\n-f,--ignore-casefoldlowercasetouppercasecharacters\n");fputs_unlocked((charconst*)tmp___3,stdout);tmp___4=gettext("-g,--general-numeric-sortcompareaccordingtogeneralnumericalvalue\n-i,--ignore-nonprintingconsideronlyprintablecharacters\n-M,--month-sortcompare(unknown)<\'JAN\'<...<\'DEC\'\n");fputs_unlocked((charconst*)tmp___4,stdout);tmp___5=gettext("-h,--human-numeric-sortcomparehumanreadablenumbers(e.g.,2K1G)\n");fputs_unlocked((charconst*)tmp___5,stdout);tmp___6=gettext("-n,--numeric-sortcompareaccordingtostringnumericalvalue\n-R,--random-sortsortbyrandomhashofkeys\n--random-source=FILEgetrandombytesfromFILE\n-r,--reversereversetheresultofcomparisons\n");fputs_unlocked((charconst*)tmp___6,stdout);tmp___7=gettext("--sort=WORDsortaccordingtoWORD:\ngeneral-numeric-g,human-numeric-h,month-M,\nnumeric-n,random-R,version-V\n-V,--version-sortnaturalsortof(version)numberswithintext\n\n");fputs_unlocked((charconst*)tmp___7,stdout);tmp___8=gettext("Otheroptions:\n\n");fputs_unlocked((charconst*)tmp___8,stdout);tmp___9=gettext("--batch-size=NMERGEmergeatmostNMERGEinputsatonce;\nformoreusetempfiles\n");fputs_unlocked((charconst*)tmp___9,stdout);tmp___10=gettext("-c,--check,--check=diagnose-firstcheckforsortedinput;donotsort\n-C,--check=quiet,--check=silentlike-c,butdonotreportfirstbadline\n--compress-program=PROGcompresstemporarieswithPROG;\ndecompressthemwithPROG-d\n");fputs_unlocked((charconst*)tmp___10,stdout);tmp___11=gettext("--debugannotatethepartofthelineusedtosort,\nandwarnaboutquestionableusagetostderr\n--files0-from=Freadinputfromthefilesspecifiedby\nNUL-terminatednamesinfileF;\nIfFis-thenreadnamesfromstandardinput\n");fputs_unlocked((charconst*)tmp___11,stdout);tmp___12=gettext("-k,--key=KEYDEFsortviaakey;KEYDEFgiveslocationandtype\n-m,--mergemergealreadysortedfiles;donotsort\n");fputs_unlocked((charconst*)tmp___12,stdout);tmp___13=gettext("-o,--output=FILEwriteresulttoFILEinsteadofstandardoutput\n-s,--stablestabilizesortbydisablinglast-resortcomparison\n-S,--buffer-size=SIZEuseSIZEformainmemorybuffer\n");fputs_unlocked((charconst*)tmp___13,stdout);tmp___14=gettext("-t,--field-separator=SEPuseSEPinsteadofnon-blanktoblanktransition\n-T,--temporary-directory=DIRuseDIRfortemporaries,notTMPDIRor%s;\nmultipleoptionsspecifymultipledirectories\n--parallel=NchangethenumberofsortsrunconcurrentlytoN\n-u,--uniquewith-c,checkforstrictordering;\nwithout-c,outputonlythefirstofanequalrun\n");printf((charconst*)tmp___14,"/tmp");tmp___15=gettext("-z,--zero-terminatedendlineswith0byte,notnewline\n");fputs_unlocked((charconst*)tmp___15,stdout);tmp___16=gettext("--helpdisplaythishelpandexit\n");fputs_unlocked((charconst*)tmp___16,stdout);tmp___17=gettext("--versionoutputversioninformationandexit\n");fputs_unlocked((charconst*)tmp___17,stdout);tmp___18=gettext("\nKEYDEFisF[.C][OPTS][,F[.C][OPTS]]forstartandstopposition,whereFisa\nfieldnumberandCacharacterpositioninthefield;bothareorigin1,and\nthestoppositiondefaultstotheline\'send.Ifneither-tnor-bisin\neffect,charactersinafieldarecountedfromthebeginningofthepreceding\nwhitespace.OPTSisoneormoresingle-letterorderingoptions[bdfgiMhnRrV],\nwhichoverrideglobalorderingoptionsforthatkey.Ifnokeyisgiven,use\ntheentirelineasthekey.\n\nSIZEmaybefollowedbythefollowingmultiplicativesuffixes:\n");fputs_unlocked((charconst*)tmp___18,stdout);tmp___19=gettext("%1%ofmemory,b1,K1024(default),andsoonforM,G,T,P,E,Z,Y.\n\nWithnoFILE,orwhenFILEis-,readstandardinput.\n\n***WARNING***\nThelocalespecifiedbytheenvironmentaffectssortorder.\nSetLC_ALL=Ctogetthetraditionalsortorderthatuses\nnativebytevalues.\n");fputs_unlocked((charconst*)tmp___19,stdout);emit_ancillary_info();exit(status);staticcharconstshort_options[31]=(charconst)'-',(charconst)'b',(charconst)'c',(charconst)'C',(charconst)'d',(charconst)'f',(charconst)'g',(charconst)'h',(charconst)'i',(charconst)'k',(charconst)':',(charconst)'m',(charconst)'M',(charconst)'n',(charconst)'o',(charconst)':',(charconst)'r',(charconst)'R',(charconst)'s',(charconst)'S',(charconst)':',(charconst)'t',(charconst)':',(charconst)'T',(charconst)':',(charconst)'u',(charconst)'V',(charconst)'y',(charconst)':',(charconst)'z',(charconst)'\000';staticstructoptionconstlong_options___1[31]="ignore-leading-blanks",0,(int*)((void*)0),'b',"check",2,(int*)((void*)0),128,"compress-program",1,(int*)((void*)0),129,"debug",0,(int*)((void*)0),130,"dictionary-order",0,(int*)((void*)0),'d',"ignore-case",0,(int*)((void*)0),'f',"files0-from",1,(int*)((void*)0),131,"general-numeric-sort",0,(int*)((void*)0),'g',"ignore-nonprinting",0,(int*)((void*)0),'i',"key",1,(int*)((void*)0),'k',"merge",0,(int*)((void*)0),'m',"month-sort",0,(int*)((void*)0),'M',"numeric-sort",0,(int*)((void*)0),'n',"human-numeric-sort",0,(int*)((void*)0),'h',"version-sort",0,(int*)((void*)0),'V',"random-sort",0,(int*)((void*)0),'R',"random-source",1,(int*)((void*)0),133,"sort",1,(int*)((void*)0),134,"output",1,(int*)((void*)0),'o',"reverse",0,(int*)((void*)0),'r',"stable",0,(int*)((void*)0),'s',"batch-size",1,(int*)((void*)0),132,"buffer-size",1,(int*)((void*)0),'S',"field-separator",1,(int*)((void*)0),'t',"temporary-directory",1,(int*)((void*)0),'T',"unique",0,(int*)((void*)0),'u',"zero-terminated",0,(int*)((void*)0),'z',"parallel",1,(int*)((void*)0),135,"help",0,(int*)((void*)0),-130,"version",0,(int*)((void*)0),-131,(charconst*)((void*)0),0,(int*)((void*)0),0;staticcharconst*constcheck_args[4]="quiet","silent","diagnose-first",(charconst*)((void*)0);staticcharconstcheck_types[3]=(charconst)'C',(charconst)'C',(charconst)'c';staticcharconst*constsort_args[7]="general-numeric","human-numeric","month","numeric","random","version",(charconst*)((void*)0);staticcharconstsort_types[6]=(charconst)'g',(charconst)'h',(charconst)'M',(charconst)'n',(charconst)'R',(charconst)'V';staticsigset_tcaught_signals;staticstructcs_statuscs_enter(void)structcs_statusstatus;inttmp;tmp=sigprocmask(0,(sigset_tconst*)(&caught_signals),&status.sigs);status.valid=(_Bool)(tmp==0);return(status);staticvoidcs_leave(structcs_statusstatus)if(status.valid)sigprocmask(2,(sigset_tconst*)(&status.sigs),(sigset_t*)((void*)0));return;staticstructtempnode*volatiletemphead;staticstructtempnode*volatile*temptail=&temphead;staticHash_table*proctab;staticsize_tproctab_hasher(voidconst*entry,size_ttabsize)structtempnodeconst*node;node=(structtempnodeconst*)entry;return((unsignedlong)node->pid%tabsize);static_Boolproctab_comparator(voidconst*e1,voidconst*e2)structtempnodeconst*n1;structtempnodeconst*n2;n1=(structtempnodeconst*)e1;n2=(structtempnodeconst*)e2;return((_Bool)(n1->pid==n2->pid));staticpid_tnprocs;static_Booldelete_proc(pid_tpid);staticpid_treap(pid_tpid)intstatus;pid_tcpid;inttmp;pid_ttmp___0;pid_ttmp___1;char*tmp___2;int*tmp___3;char*tmp___4;union__anonunion_101__constr_expr_82;union__anonunion_102__constr_expr_83;_Booltmp___5;if(pid)tmp=0;elsetmp=1;if(pid)tmp___0=pid;elsetmp___0=-1;tmp___1=waitpid(tmp___0,&status,tmp);cpid=tmp___1;if(cpid<0)tmp___2=gettext("waitingfor%s[-d]");tmp___3=__errno_location();error(2,*tmp___3,(charconst*)tmp___2,compress_program);elseif(0<cpid)if(0<pid)goto_L;elsetmp___5=delete_proc(cpid);if(tmp___5)_L:__constr_expr_82.__in=status;if((__constr_expr_82.__i&127)==0)__constr_expr_83.__in=status;if((__constr_expr_83.__i&65280)>>8)tmp___4=gettext("%s[-d]terminatedabnormally");error(2,0,(charconst*)tmp___4,compress_program);elsetmp___4=gettext("%s[-d]terminatedabnormally");error(2,0,(charconst*)tmp___4,compress_program);nprocs--;return(cpid);staticvoidregister_proc(structtempnode*temp)void*tmp;if(!proctab)proctab=hash_initialize((size_t)47,(Hash_tuningconst*)((void*)0),&proctab_hasher,&proctab_comparator,(void(*)(void*))((void*)0));if(!proctab)xalloc_die();temp->state=(char)1;tmp=hash_insert(proctab,(voidconst*)temp);if(!tmp)xalloc_die();return;static_Booldelete_proc(pid_tpid)structtempnodetest;structtempnode*node;structtempnode*tmp;test.pid=pid;tmp=(structtempnode*)hash_delete(proctab,(voidconst*)(&test));node=tmp;if(!node)return((_Bool)0);node->state=(char)2;return((_Bool)1);staticvoidwait_proc(pid_tpid)_Booltmp;tmp=delete_proc(pid);if(tmp)reap(pid);return;staticvoidreap_exited(void)pid_ttmp;while(1)while_continue:;if(0<nprocs)tmp=reap(0);if(!tmp)gotowhile_break;elsegotowhile_break;gotowhile_continue;while_break:;return;staticvoidreap_some(void)reap(-1);reap_exited();return;staticvoidreap_all(void)while(1)if(!(0<nprocs))gotowhile_break;reap(-1);while_break:;return;staticvoidcleanup(void)structtempnodeconst*node;node=(structtempnodeconst*)temphead;while(1)if(!node)gotowhile_break;unlink((charconst*)(node->name));node=(structtempnodeconst*)node->next;while_break:temphead=(structtempnode*)((void*)0);return;staticvoidexit_cleanup(void)structcs_statuscs;structcs_statustmp;if(temphead)tmp=cs_enter();cs=tmp;cleanup();cs_leave(cs);close_stdout();return;staticstructtempnode*create_temp_file(int*pfd,_Boolsurvive_fd_exhaustion);staticcharconstslashbase[12]=(charconst)'/',(charconst)'s',(charconst)'o',(charconst)'r',(charconst)'t',(charconst)'X',(charconst)'X',(charconst)'X',(charconst)'X',(charconst)'X',(charconst)'X',(charconst)'\000';staticsize_ttemp_dir_index;staticstructtempnode*create_temp_file(int*pfd,_Boolsurvive_fd_exhaustion)intfd;intsaved_errno;charconst*temp_dir;size_tlen;size_ttmp;structtempnode*node;structtempnode*tmp___0;char*file;structcs_statuscs;int*tmp___1;int*tmp___2;charconst*tmp___3;char*tmp___4;int*tmp___5;int*tmp___6;temp_dir=*(temp_dirs+temp_dir_index);tmp=strlen(temp_dir);len=tmp;tmp___0=(structtempnode*)xmalloc(((unsignedlong)(&((structtempnode*)0)->name)+len)+sizeof(slashbase));node=tmp___0;file=node->name;memcpy((void*)file,(voidconst*)temp_dir,len);memcpy((void*)(file+len),(voidconst*)(slashbase),sizeof(slashbase));node->next=(structtempnode*)((void*)0);temp_dir_index++;if(temp_dir_index==temp_dir_count)temp_dir_index=(size_t)0;cs=cs_enter();fd=mkstemp_safer(file);if(0<=fd)*temptail=node;temptail=&node->next;tmp___1=__errno_location();saved_errno=*tmp___1;cs_leave(cs);tmp___2=__errno_location();*tmp___2=saved_errno;if(fd<0)if(survive_fd_exhaustion)tmp___6=__errno_location();if(!(*tmp___6==24))tmp___3=quote(temp_dir);tmp___4=gettext("cannotcreatetemporaryfilein%s");tmp___5=__errno_location();error(2,*tmp___5,(charconst*)tmp___4,tmp___3);elsetmp___3=quote(temp_dir);tmp___4=gettext("cannotcreatetemporaryfilein%s");tmp___5=__errno_location();error(2,*tmp___5,(charconst*)tmp___4,tmp___3);free((void*)node);node=(structtempnode*)((void*)0);*pfd=fd;return(node);staticFILE*stream_open(charconst*file,charconst*how)FILE*fp;inttmp;FILE*tmp___0;if(!file)return(stdout);if((intconst)*how==114)tmp=strcmp(file,"-");if(tmp==0)have_read_stdin=(_Bool)1;fp=stdin;elsefp=fopen_safer(file,how);fadvise(fp,(fadvice_t)2);return(fp);tmp___0=fopen_safer(file,how);return(tmp___0);staticFILE*xfopen(charconst*file,charconst*how)FILE*fp;FILE*tmp;char*tmp___0;tmp=stream_open(file,how);fp=tmp;if(!fp)tmp___0=gettext("openfailed");die((charconst*)tmp___0,file);return(fp);staticvoidxfclose(FILE*fp,charconst*file)inttmp;inttmp___0;char*tmp___1;inttmp___2;char*tmp___3;inttmp___4;tmp=fileno(fp);if(tmp==0)gotocase_0;if(tmp==1)gotocase_1;gotoswitch_default;case_0:tmp___0=feof_unlocked(fp);if(tmp___0)clearerr_unlocked(fp);gotoswitch_break;case_1:tmp___2=fflush_unlocked(fp);if(tmp___2!=0)tmp___1=gettext("fflushfailed");die((charconst*)tmp___1,file);gotoswitch_break;switch_default:tmp___4=rpl_fclose(fp);if(tmp___4!=0)tmp___3=gettext("closefailed");die((charconst*)tmp___3,file);gotoswitch_break;switch_break:;return;staticvoiddup2_or_die(intoldfd,intnewfd)char*tmp;int*tmp___0;inttmp___1;tmp___1=dup2(oldfd,newfd);if(tmp___1<0)tmp=gettext("dup2failed");tmp___0=__errno_location();error(2,*tmp___0,(charconst*)tmp);return;staticpid_tpipe_fork(int*pipefds,size_ttries)structtempnode*saved_temphead;intsaved_errno;doublewait_retry;pid_tpid;structcs_statuscs;inttmp;int*tmp___0;int*tmp___1;int*tmp___2;size_ttmp___3;int*tmp___4;int*tmp___5;wait_retry=0.25;tmp=pipe(pipefds);if(tmp<0)return(-1);if(nmerge+1U<(unsignedint)nprocs)reap_some();while(1)tmp___3=tries;tries--;if(!tmp___3)gotowhile_break;cs=cs_enter();saved_temphead=(structtempnode*)temphead;temphead=(structtempnode*)((void*)0);pid=fork();tmp___0=__errno_location();saved_errno=*tmp___0;if(pid)temphead=saved_temphead;cs_leave(cs);tmp___1=__errno_location();*tmp___1=saved_errno;if(0<=pid)gotowhile_break;elsetmp___2=__errno_location();if(*tmp___2!=11)gotowhile_break;elsexnanosleep(wait_retry);wait_retry*=(double)2;reap_exited();while_break:;if(pid<0)tmp___4=__errno_location();saved_errno=*tmp___4;close(*(pipefds+0));close(*(pipefds+1));tmp___5=__errno_location();*tmp___5=saved_errno;elseif(pid==0)close(0);close(1);elsenprocs++;return(pid);staticstructtempnode*maybe_create_temp(FILE**pfp,_Boolsurvive_fd_exhaustion)inttempfd;structtempnode*node;structtempnode*tmp;intpipefds[2];char*tmp___0;int*tmp___1;inttmp___2;char*tmp___3;tmp=create_temp_file(&tempfd,survive_fd_exhaustion);node=tmp;if(!node)return((structtempnode*)((void*)0));node->state=(char)0;if(compress_program)node->pid=pipe_fork(pipefds,(size_t)4);if(0<node->pid)close(tempfd);close(pipefds[0]);tempfd=pipefds[1];register_proc(node);elseif(node->pid==0)close(pipefds[1]);dup2_or_die(tempfd,1);close(tempfd);dup2_or_die(pipefds[0],0);close(pipefds[0]);tmp___2=execlp(compress_program,compress_program,(char*)((void*)0));if(tmp___2<0)tmp___0=gettext("couldn\'texecute%s");tmp___1=__errno_location();error(2,*tmp___1,(charconst*)tmp___0,compress_program);*pfp=fdopen(tempfd,"w");if(!*pfp)tmp___3=gettext("couldn\'tcreatetemporaryfile");die((charconst*)tmp___3,(charconst*)(node->name));return(node);staticstructtempnode*create_temp(FILE**pfp)structtempnode*tmp;tmp=maybe_create_temp(pfp,(_Bool)0);return(tmp);staticFILE*open_temp(structtempnode*temp)inttempfd;intpipefds[2];FILE*fp;pid_tchild;pid_ttmp;char*tmp___0;int*tmp___1;int*tmp___2;int*tmp___3;char*tmp___4;int*tmp___5;intsaved_errno;int*tmp___6;int*tmp___7;fp=(FILE*)((void*)0);if((int)temp->state==1)wait_proc(temp->pid);tempfd=open((charconst*)(temp->name),0);if(tempfd<0)return((FILE*)((void*)0));tmp=pipe_fork(pipefds,(size_t)9);child=tmp;if(child==-1)gotocase_neg_1;if(child==0)gotocase_0;gotoswitch_default;case_neg_1:tmp___2=__errno_location();if(*tmp___2!=24)tmp___0=gettext("couldn\'tcreateprocessfor%s-d");tmp___1=__errno_location();error(2,*tmp___1,(charconst*)tmp___0,compress_program);close(tempfd);tmp___3=__errno_location();*tmp___3=24;gotoswitch_break;case_0:close(pipefds[0]);dup2_or_die(tempfd,0);close(tempfd);dup2_or_die(pipefds[1],1);close(pipefds[1]);execlp(compress_program,compress_program,"-d",(char*)((void*)0));tmp___4=gettext("couldn\'texecute%s-d");tmp___5=__errno_location();error(2,*tmp___5,(charconst*)tmp___4,compress_program);switch_default:temp->pid=child;register_proc(temp);close(tempfd);close(pipefds[1]);fp=fdopen(pipefds[0],"r");if(!fp)tmp___6=__errno_location();saved_errno=*tmp___6;close(pipefds[0]);tmp___7=__errno_location();*tmp___7=saved_errno;gotoswitch_break;switch_break:;return(fp);staticvoidadd_temp_dir(charconst*dir)size_ttmp;if(temp_dir_count==temp_dir_alloc)temp_dirs=(charconst**)x2nrealloc((void*)temp_dirs,&temp_dir_alloc,sizeof(*temp_dirs));tmp=temp_dir_count;temp_dir_count++;*(temp_dirs+tmp)=dir;return;staticvoidzaptemp(charconst*name)structtempnode*volatile*pnode;structtempnode*node;structtempnode*next;intunlink_status;intunlink_errno;structcs_statuscs;int*tmp;char*tmp___0;unlink_errno=0;pnode=&temphead;while(1)node=(structtempnode*)*pnode;if(!((unsignedlong)(node->name)!=(unsignedlong)name))gotowhile_break;goto__Cont;__Cont:pnode=&node->next;while_break:;if((int)node->state==1)wait_proc(node->pid);next=(structtempnode*)node->next;cs=cs_enter();unlink_status=unlink(name);tmp=__errno_location();unlink_errno=*tmp;*pnode=next;cs_leave(cs);if(unlink_status!=0)tmp___0=gettext("warning:cannotremove:%s");error(0,unlink_errno,(charconst*)tmp___0,name);if(!next)temptail=pnode;free((void*)node);return;staticintstruct_month_cmp(voidconst*m1,voidconst*m2)structmonthconst*month1;structmonthconst*month2;inttmp;month1=(structmonthconst*)m1;month2=(structmonthconst*)m2;tmp=strcmp((charconst*)month1->name,(charconst*)month2->name);return(tmp);staticvoidinittables(void)size_ti;unsignedshortconst**tmp;inttmp___0;unsignedshortconst**tmp___1;inttmp___2;unsignedshortconst**tmp___3;unsignedshortconst**tmp___4;inttmp___5;charconst*s;size_ts_len;size_tj;size_tk;char*name;size_ttmp___6;unsignedchartmp___7;unsignedshortconst**tmp___8;unsignedchartmp___9;i=(size_t)0;while(1)if(!(i<256UL))gotowhile_break;tmp=__ctype_b_loc();if((intconst)*(*tmp+(int)i)&1)tmp___0=1;elsetmp___0=0;blanks[i]=(_Bool)tmp___0;tmp___1=__ctype_b_loc();if((intconst)*(*tmp___1+(int)i)&16384)tmp___2=0;elsetmp___2=1;nonprinting[i]=(_Bool)tmp___2;tmp___3=__ctype_b_loc();if((intconst)*(*tmp___3+(int)i)&8)tmp___5=0;elsetmp___4=__ctype_b_loc();if((intconst)*(*tmp___4+(int)i)&1)tmp___5=0;elsetmp___5=1;nondictionary[i]=(_Bool)tmp___5;fold_toupper[i]=(char)toupper((int)i);i++;while_break:;if(hard_LC_TIME)i=(size_t)0;while(1)if(!(i<12UL))gotowhile_break___0;s=(charconst*)nl_langinfo((nl_item)(131086UL+i));s_len=strlen(s);name=(char*)xmalloc(s_len+1UL);monthtab[i].name=(charconst*)name;monthtab[i].val=(int)(i+1UL);k=(size_t)0;j=k;while(1)if(!(j<s_len))gotowhile_break___1;tmp___8=__ctype_b_loc();tmp___9=to_uchar((char)*(s+j));if(!((intconst)*(*tmp___8+(int)tmp___9)&1))tmp___6=k;k++;tmp___7=to_uchar((char)*(s+j));*(name+tmp___6)=fold_toupper[tmp___7];j++;while_break___1:*(name+k)=(char)'\000';i++;while_break___0:qsort((void*)(monthtab),(size_t)12,sizeof(monthtab[0]),&struct_month_cmp);return;staticvoidspecify_nmerge(intoi,charc,charconst*s)uintmax_tn;structrlimitrlimit;enumstrtol_errore;enumstrtol_errortmp;unsignedintmax_nmerge;rlim_ttmp___1;inttmp___2;charconst*tmp___3;char*tmp___4;charconst*tmp___5;char*tmp___6;charmax_nmerge_buf[((sizeof(max_nmerge)*8UL)*146UL+484UL)/485UL+1UL];charconst*tmp___7;char*tmp___8;char*tmp___9;char*tmp___10;tmp=xstrtoumax(s,(char**)((void*)0),10,&n,(charconst*)((void*)0));e=tmp;tmp___2=getrlimit((__rlimit_resource_t)7,&rlimit);if(tmp___2==0)tmp___1=rlimit.rlim_cur;elsetmp___1=(rlim_t)20;max_nmerge=(unsignedint)(tmp___1-3UL);if((unsignedint)e==0U)nmerge=(unsignedint)n;if((uintmax_t)nmerge!=n)e=(enumstrtol_error)1;elseif(nmerge<2U)tmp___3=quote(s);tmp___4=gettext("invalid--%sargument%s");error(0,0,(charconst*)tmp___4,long_options___1[oi].name,tmp___3);tmp___5=quote("2");tmp___6=gettext("minimum--%sargumentis%s");error(2,0,(charconst*)tmp___6,long_options___1[oi].name,tmp___5);elseif(max_nmerge<nmerge)e=(enumstrtol_error)1;elsereturn;if((unsignedint)e==1U)tmp___7=quote(s);tmp___8=gettext("--%sargument%stoolarge");error(0,0,(charconst*)tmp___8,long_options___1[oi].name,tmp___7);tmp___9=uinttostr(max_nmerge,max_nmerge_buf);tmp___10=gettext("maximum--%sargumentwithcurrentrlimitis%s");error(2,0,(charconst*)tmp___10,long_options___1[oi].name,tmp___9);elsexstrtol_fatal(e,oi,c,long_options___1,s);return;staticvoidspecify_sort_size(intoi,charc,charconst*s)uintmax_tn;char*suffix;enumstrtol_errore;enumstrtol_errortmp;doublemem;doubletmp___0;tmp=xstrtoumax(s,&suffix,10,&n,"EgGkKmMPtTYZ");e=tmp;if((unsignedint)e==0U)if((unsignedint)*(suffix+-1)-48U<=9U)if(n<=18014398509481983UL)n*=1024UL;elsee=(enumstrtol_error)1;if((unsignedint)e==2U)if((unsignedint)*(suffix+-1)-48U<=9U)if(!*(suffix+1))if((int)*(suffix+0)==98)gotocase_98;if((int)*(suffix+0)==37)gotocase_37;gotoswitch_break;case_98:e=(enumstrtol_error)0;gotoswitch_break;case_37:tmp___0=physmem_total();mem=(tmp___0*(double)n)/(double)100;if(mem<(double)0xffffffffffffffffUL)n=(uintmax_t)mem;e=(enumstrtol_error)0;elsee=(enumstrtol_error)1;gotoswitch_break;switch_break:;if((unsignedint)e==0U)if(n<sort_size)return;sort_size=n;if(sort_size==n)if(sort_size>(unsignedlong)nmerge*(2UL+sizeof(structline)))sort_size=sort_size;elsesort_size=(unsignedlong)nmerge*(2UL+sizeof(structline));return;e=(enumstrtol_error)1;xstrtol_fatal(e,oi,c,long_options___1,s);staticsize_tspecify_nthreads(intoi,charc,charconst*s)unsignedlongnthreads;enumstrtol_errore;enumstrtol_errortmp;char*tmp___0;tmp=xstrtoul(s,(char**)((void*)0),10,&nthreads,"");e=tmp;if((unsignedint)e==1U)return(0xffffffffffffffffUL);if((unsignedint)e!=0U)xstrtol_fatal(e,oi,c,long_options___1,s);if(0xffffffffffffffffUL<nthreads)nthreads=0xffffffffffffffffUL;if(nthreads==0UL)tmp___0=gettext("numberinparallelmustbenonzero");error(2,0,(charconst*)tmp___0);return(nthreads);staticsize_tdefault_sort_size(void)doubleavail;doubletmp;doubletotal;doubletmp___0;doublemem;doubletmp___1;structrlimitrlimit;size_tsize;inttmp___2;inttmp___3;inttmp___4;size_ttmp___5;tmp=physmem_available();avail=tmp;tmp___0=physmem_total();total=tmp___0;if(avail>total/(double)8)tmp___1=avail;elsetmp___1=total/(double)8;mem=tmp___1;size=0xffffffffffffffffUL;tmp___2=getrlimit((__rlimit_resource_t)2,&rlimit);if(tmp___2==0)if(rlimit.rlim_cur<size)size=rlimit.rlim_cur;tmp___3=getrlimit((__rlimit_resource_t)9,&rlimit);if(tmp___3==0)if(rlimit.rlim_cur<size)size=rlimit.rlim_cur;size/=2UL;tmp___4=getrlimit((__rlimit_resource_t)5,&rlimit);if(tmp___4==0)if((rlimit.rlim_cur/16UL)*15UL<size)size=(rlimit.rlim_cur/16UL)*15UL;if(mem<(double)size)size=(size_t)mem;if(size>(unsignedlong)nmerge*(2UL+sizeof(structline)))tmp___5=size;elsetmp___5=(unsignedlong)nmerge*(2UL+sizeof(structline));return(tmp___5);staticsize_tsize_bound;staticsize_tsort_buffer_size(FILE*const*fps,size_tnfps,char*const*files,size_tnfiles,size_tline_bytes)size_tworst_case_per_input_byte;size_tsize;size_ti;structstatst;off_tfile_size;size_tworst_case;char*tmp;inttmp___0;inttmp___1;inttmp___3;inttmp___4;inttmp___5;inttmp___6;inttmp___7;worst_case_per_input_byte=line_bytes+1UL;size=worst_case_per_input_byte+1UL;i=(size_t)0;while(1)if(!(i<nfiles))gotowhile_break;if(i<nfps)tmp___0=fileno((FILE*)*(fps+i));tmp___1=fstat(tmp___0,&st);tmp___7=tmp___1;elsetmp___6=strcmp((charconst*)*(files+i),"-");if(tmp___6==0)tmp___3=fstat(0,&st);tmp___5=tmp___3;elsetmp___4=stat((charconst*)*(files+i),&st);tmp___5=tmp___4;tmp___7=tmp___5;if(tmp___7!=0)tmp=gettext("statfailed");die((charconst*)tmp,(charconst*)*(files+i));if((st.st_mode&61440U)==32768U)file_size=st.st_size;elseif(sort_size)return(sort_size);file_size=(off_t)131072;if(!size_bound)size_bound=sort_size;if(!size_bound)size_bound=default_sort_size();worst_case=(size_t)file_size*worst_case_per_input_byte+1UL;if((size_t)file_size!=worst_case/worst_case_per_input_byte)return(size_bound);elseif(size_bound-size<=worst_case)return(size_bound);size+=worst_case;i++;while_break:;return(size);staticvoidinitbuf(structbuffer*buf___1,size_tline_bytes,size_talloc)size_ttmp;size_ttmp___0;while(1)alloc+=sizeof(structline)-alloc%sizeof(structline);buf___1->buf=(char*)malloc(alloc);if(buf___1->buf)gotowhile_break;alloc/=2UL;if(alloc<=line_bytes+1UL)xalloc_die();while_break:buf___1->line_bytes=line_bytes;buf___1->alloc=alloc;tmp___0=(size_t)0;buf___1->nlines=tmp___0;tmp=tmp___0;buf___1->left=tmp;buf___1->used=tmp;buf___1->eof=(_Bool)0;return;__inlinestaticstructline*buffer_linelim(structbufferconst*buf___1)return((structline*)(buf___1->buf+buf___1->alloc));staticchar*begfield(structlineconst*line,structkeyfieldconst*key)char*ptr;char*lim;size_tsword;size_tschar;size_ttmp;unsignedchartmp___0;unsignedchartmp___1;size_ttmp___2;unsignedchartmp___3;ptr=(char*)line->text;lim=(ptr+line->length)-1;sword=(size_t)key->sword;schar=(size_t)key->schar;if(tab!=128)while(1)if((unsignedlong)ptr<(unsignedlong)lim)tmp=sword;sword--;if(!tmp)gotowhile_break;elsegotowhile_break;while(1)if((unsignedlong)ptr<(unsignedlong)lim)if(!((int)*ptr!=tab))gotowhile_break___0;elsegotowhile_break___0;ptr++;while_break___0:;if((unsignedlong)ptr<(unsignedlong)lim)ptr++;while_break:;elsewhile(1)if((unsignedlong)ptr<(unsignedlong)lim)tmp___2=sword;sword--;if(!tmp___2)gotowhile_break___1;elsegotowhile_break___1;while(1)if((unsignedlong)ptr<(unsignedlong)lim)tmp___0=to_uchar(*ptr);if(!blanks[tmp___0])gotowhile_break___2;elsegotowhile_break___2;ptr++;while_break___2:;while(1)if((unsignedlong)ptr<(unsignedlong)lim)tmp___1=to_uchar(*ptr);if(blanks[tmp___1])gotowhile_break___3;elsegotowhile_break___3;ptr++;while_break___3:;while_break___1:;if(key->skipsblanks)while(1)if((unsignedlong)ptr<(unsignedlong)lim)tmp___3=to_uchar(*ptr);if(!blanks[tmp___3])gotowhile_break___4;elsegotowhile_break___4;ptr++;while_break___4:;if((unsignedlong)lim<(unsignedlong)(ptr+schar))ptr=lim;elseptr+=schar;return(ptr);staticchar*limfield(structlineconst*line,structkeyfieldconst*key)char*ptr;char*lim;size_teword;size_techar;size_ttmp;unsignedchartmp___0;unsignedchartmp___1;size_ttmp___2;unsignedchartmp___3;ptr=(char*)line->text;lim=(ptr+line->length)-1;eword=(size_t)key->eword;echar=(size_t)key->echar;if(echar==0UL)eword++;if(tab!=128)while(1)if((unsignedlong)ptr<(unsignedlong)lim)tmp=eword;eword--;if(!tmp)gotowhile_break;elsegotowhile_break;while(1)if((unsignedlong)ptr<(unsignedlong)lim)if(!((int)*ptr!=tab))gotowhile_break___0;elsegotowhile_break___0;ptr++;while_break___0:;if((unsignedlong)ptr<(unsignedlong)lim)if(eword)ptr++;elseif(echar)ptr++;while_break:;elsewhile(1)if((unsignedlong)ptr<(unsignedlong)lim)tmp___2=eword;eword--;if(!tmp___2)gotowhile_break___1;elsegotowhile_break___1;while(1)if((unsignedlong)ptr<(unsignedlong)lim)tmp___0=to_uchar(*ptr);if(!blanks[tmp___0])gotowhile_break___2;elsegotowhile_break___2;ptr++;while_break___2:;while(1)if((unsignedlong)ptr<(unsignedlong)lim)tmp___1=to_uchar(*ptr);if(blanks[tmp___1])gotowhile_break___3;elsegotowhile_break___3;ptr++;while_break___3:;while_break___1:;if(echar!=0UL)if(key->skipeblanks)while(1)if((unsignedlong)ptr<(unsignedlong)lim)tmp___3=to_uchar(*ptr);if(!blanks[tmp___3])gotowhile_break___4;elsegotowhile_break___4;ptr++;while_break___4:;if((unsignedlong)lim<(unsignedlong)(ptr+echar))ptr=lim;elseptr+=echar;return(ptr);static_Boolfillbuf___7(structbuffer*buf___1,FILE*fp,charconst*file)structkeyfieldconst*key;chareol;size_tline_bytes;size_tmergesize;char*ptr;structline*linelim;structline*tmp;structline*line;size_tavail;char*line_start;char*tmp___0;size_treadsize;size_tbytes_read;size_ttmp___1;char*ptrlim;char*p;char*tmp___2;inttmp___3;char*tmp___4;inttmp___5;char*tmp___6;unsignedchartmp___7;structline*tmp___8;size_tline_alloc;key=(structkeyfieldconst*)keylist;eol=eolchar;line_bytes=buf___1->line_bytes;mergesize=merge_buffer_size-(2UL+sizeof(structline));if(buf___1->eof)return((_Bool)0);if(buf___1->used!=buf___1->left)memmove((void*)buf___1->buf,(voidconst*)((buf___1->buf+buf___1->used)-buf___1->left),buf___1->left);buf___1->used=buf___1->left;buf___1->nlines=(size_t)0;while(1)ptr=buf___1->buf+buf___1->used;tmp=buffer_linelim((structbufferconst*)buf___1);linelim=tmp;line=linelim-buf___1->nlines;avail=(size_t)(((char*)linelim-buf___1->nlines*line_bytes)-ptr);if(buf___1->nlines)tmp___0=line->text+line->length;elsetmp___0=buf___1->buf;line_start=tmp___0;while(1)if(!(line_bytes+1UL<avail))gotowhile_break___0;readsize=(avail-1UL)/(line_bytes+1UL);tmp___1=fread_unlocked((void*)ptr,(size_t)1,readsize,fp);bytes_read=tmp___1;ptrlim=ptr+bytes_read;avail-=bytes_read;if(bytes_read!=readsize)tmp___3=ferror_unlocked(fp);if(tmp___3)tmp___2=gettext("readfailed");die((charconst*)tmp___2,file);tmp___5=feof_unlocked(fp);if(tmp___5)buf___1->eof=(_Bool)1;if((unsignedlong)buf___1->buf==(unsignedlong)ptrlim)return((_Bool)0);if((unsignedlong)line_start!=(unsignedlong)ptrlim)if((int)*(ptrlim+-1)!=(int)eol)tmp___4=ptrlim;ptrlim++;*tmp___4=eol;while(1)p=(char*)memchr((voidconst*)ptr,(int)eol,(size_t)(ptrlim-ptr));if(!p)gotowhile_break___1;*p=(char)'\000';ptr=p+1;line--;line->text=line_start;line->length=(size_t)(ptr-line_start);if(mergesize>line->length)mergesize=mergesize;elsemergesize=line->length;avail-=line_bytes;if(key)if(key->eword==0xffffffffffffffffUL)line->keylim=p;elsetmp___6=limfield((structlineconst*)line,key);line->keylim=tmp___6;if(key->sword!=0xffffffffffffffffUL)line->keybeg=begfield((structlineconst*)line,key);elseif(key->skipsblanks)while(1)tmp___7=to_uchar(*line_start);if(!blanks[tmp___7])gotowhile_break___2;line_start++;while_break___2:;line->keybeg=line_start;line_start=ptr;while_break___1:ptr=ptrlim;if(buf___1->eof)gotowhile_break___0;while_break___0:buf___1->used=(size_t)(ptr-buf___1->buf);tmp___8=buffer_linelim((structbufferconst*)buf___1);buf___1->nlines=(size_t)(tmp___8-line);if(buf___1->nlines!=0UL)buf___1->left=(size_t)(ptr-line_start);merge_buffer_size=mergesize+(2UL+sizeof(structline));return((_Bool)1);line_alloc=buf___1->alloc/sizeof(structline);buf___1->buf=(char*)x2nrealloc((void*)buf___1->buf,&line_alloc,sizeof(structline));buf___1->alloc=line_alloc*sizeof(structline);return((_Bool)0);staticcharconstunit_order[256]=(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)6,(charconst)0,(charconst)3,(charconst)0,(charconst)0,(charconst)0,(charconst)1,(charconst)0,(charconst)2,(charconst)0,(charconst)0,(charconst)5,(charconst)0,(charconst)0,(charconst)0,(charconst)4,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)8,(charconst)7,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)1,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0,(charconst)0;staticint__attribute__((__pure__))find_unit_order(charconst*number)_Boolminus_sign;charconst*p;intnonzero;unsignedcharch;charconst*tmp;charconst*tmp___0;intorder___0;inttmp___1;minus_sign=(_Bool)((intconst)*number==45);p=number+(int)minus_sign;nonzero=0;while(1)while(1)tmp=p;p++;ch=(unsignedchar)*tmp;if(!((unsignedint)ch-48U<=9U))gotowhile_break___0;nonzero|=(int)ch-48;while_break___0:;if(!((int)ch==thousands_sep))gotowhile_break;while_break:;if((int)ch==decimal_point)while(1)tmp___0=p;p++;ch=(unsignedchar)*tmp___0;if(!((unsignedint)ch-48U<=9U))gotowhile_break___1;nonzero|=(int)ch-48;while_break___1:;if(nonzero)order___0=(int)unit_order[ch];if(minus_sign)tmp___1=-order___0;elsetmp___1=order___0;return((int__attribute__((__pure__)))tmp___1);elsereturn((int__attribute__((__pure__)))0);staticinthuman_numcompare(charconst*a,charconst*b)unsignedchartmp;unsignedchartmp___0;intdiff;int__attribute__((__pure__))tmp___1;int__attribute__((__pure__))tmp___2;inttmp___3;inttmp___4;while(1)tmp=to_uchar((char)*a);if(!blanks[tmp])gotowhile_break;a++;while_break:;while(1)tmp___0=to_uchar((char)*b);if(!blanks[tmp___0])gotowhile_break___0;b++;while_break___0:tmp___1=find_unit_order(a);tmp___2=find_unit_order(b);diff=(int)(tmp___1-tmp___2);if(diff)tmp___4=diff;elsetmp___3=(int)strnumcmp(a,b,decimal_point,thousands_sep);tmp___4=tmp___3;return(tmp___4);staticintnumcompare___3(charconst*a,charconst*b)unsignedchartmp;unsignedchartmp___0;inttmp___1;while(1)tmp=to_uchar((char)*a);if(!blanks[tmp])gotowhile_break;a++;while_break:;while(1)tmp___0=to_uchar((char)*b);if(!blanks[tmp___0])gotowhile_break___0;b++;while_break___0:tmp___1=(int)strnumcmp(a,b,decimal_point,thousands_sep);return(tmp___1);staticintnan_compare(charconst*sa,charconst*sb)longdoublea;longdoubleb;inttmp;memset((void*)(&a),0,sizeof(a));a=strtold(sa,(char**)((void*)0));memset((void*)(&b),0,sizeof(b));b=strtold(sb,(char**)((void*)0));tmp=memcmp((voidconst*)(&a),(voidconst*)(&b),sizeof(a));return(tmp);staticintgeneral_numcompare(charconst*sa,charconst*sb)char*ea;char*eb;longdoublea;longdoubletmp;longdoubleb;longdoubletmp___0;inttmp___1;inttmp___2;inttmp___3;inttmp___4;inttmp___5;inttmp___6;inttmp___7;tmp=strtold(sa,&ea);a=tmp;tmp___0=strtold(sb,&eb);b=tmp___0;if((unsignedlong)sa==(unsignedlong)ea)if((unsignedlong)sb==(unsignedlong)eb)tmp___1=0;elsetmp___1=-1;return(tmp___1);if((unsignedlong)sb==(unsignedlong)eb)return(1);if(a<b)tmp___7=-1;elseif(a>b)tmp___6=1;elseif(a==b)tmp___5=0;elseif(b==b)tmp___4=-1;elseif(a==a)tmp___3=1;elsetmp___2=nan_compare(sa,sb);tmp___3=tmp___2;tmp___4=tmp___3;tmp___5=tmp___4;tmp___6=tmp___5;tmp___7=tmp___6;return(tmp___7);staticintgetmonth(charconst*month,char**ea)size_tlo;size_thi;unsignedchartmp;size_tix;charconst*m;charconst*n;unsignedchartmp___0;unsignedchartmp___1;unsignedchartmp___2;unsignedchartmp___3;unsignedchartmp___4;unsignedchartmp___5;lo=(size_t)0;hi=(size_t)12;while(1)tmp=to_uchar((char)*month);if(!blanks[tmp])gotowhile_break;month++;while_break:;while(1)ix=(lo+hi)/2UL;m=month;n=monthtab[ix].name;while(1)if(!*n)if(ea)*ea=(char*)m;return(monthtab[ix].val);tmp___3=to_uchar((char)*m);tmp___4=to_uchar(fold_toupper[tmp___3]);tmp___5=to_uchar((char)*n);if((int)tmp___4<(int)tmp___5)hi=ix;gotowhile_break___1;elsetmp___0=to_uchar((char)*m);tmp___1=to_uchar(fold_toupper[tmp___0]);tmp___2=to_uchar((char)*n);if((int)tmp___1>(int)tmp___2)lo=ix+1UL;gotowhile_break___1;m++;n++;while_break___1:;if(!(lo<hi))gotowhile_break___0;while_break___0:;return(0);staticstructmd5_ctxrandom_md5_state;staticvoidrandom_md5_state_init(charconst*random_source)unsignedcharbuf___1[16];structrandread_source*r;structrandread_source*tmp;char*tmp___0;char*tmp___1;inttmp___2;tmp=randread_new(random_source,sizeof(buf___1));r=tmp;if(!r)tmp___0=gettext("openfailed");die((charconst*)tmp___0,random_source);randread(r,(void*)(buf___1),sizeof(buf___1));tmp___2=randread_free(r);if(tmp___2!=0)tmp___1=gettext("closefailed");die((charconst*)tmp___1,random_source);md5_init_ctx(&random_md5_state);md5_process_bytes((voidconst*)(buf___1),sizeof(buf___1),&random_md5_state);return;staticsize_txstrxfrm(char*__restrictdest,charconst*__restrictsrc,size_tdestsize)int*tmp;size_ttranslated_size;size_ttmp___0;char*tmp___1;int*tmp___2;char*tmp___3;char*tmp___4;char*tmp___5;int*tmp___6;tmp=__errno_location();*tmp=0;tmp___0=strxfrm(dest,src,destsize);translated_size=tmp___0;tmp___6=__errno_location();if(*tmp___6)tmp___1=gettext("stringtransformationfailed");tmp___2=__errno_location();error(0,*tmp___2,(charconst*)tmp___1);tmp___3=gettext("setLC_ALL=\'C\'toworkaroundtheproblem");error(0,0,(charconst*)tmp___3);tmp___4=quotearg_n_style(0,(enumquoting_style)6,(charconst*)src);tmp___5=gettext("theuntransformedstringwas%s");error(2,0,(charconst*)tmp___5,tmp___4);return(translated_size);staticintcompare_random(char*__restricttexta,size_tlena,char*__restricttextb,size_tlenb)intxfrm_diff;charstackbuf[4000];char*buf___1;size_tbufsize___1;void*allocated;uint32_tdig[2][16UL/sizeof(uint32_t)];structmd5_ctxs[2];charconst*lima;charconst*limb;size_tguess_bufsize;size_tsizea;size_ttmp;size_ttmp___0;_Boola_fits;size_tsizeb;size_ttmp___1;char*tmp___2;size_ttmp___3;size_ttmp___4;size_ttmp___5;size_ttmp___6;size_ttmp___7;intdiff;inttmp___8;size_ttmp___9;xfrm_diff=0;buf___1=stackbuf;bufsize___1=sizeof(stackbuf);allocated=(void*)0;s[1]=random_md5_state;s[0]=s[1];if(hard_LC_COLLATE)lima=(charconst*)(texta+lena);limb=(charconst*)(textb+lenb);while(1)guess_bufsize=3UL*(lena+lenb)+2UL;if(bufsize___1<guess_bufsize)if(guess_bufsize>(bufsize___1*3UL)/2UL)bufsize___1=guess_bufsize;elsebufsize___1=(bufsize___1*3UL)/2UL;free(allocated);allocated=malloc(bufsize___1);buf___1=(char*)allocated;if(!buf___1)buf___1=stackbuf;bufsize___1=sizeof(stackbuf);if((unsignedlong)texta<(unsignedlong)lima)tmp=xstrxfrm(buf___1,(charconst*)texta,bufsize___1);tmp___0=tmp+1UL;elsetmp___0=(size_t)0;sizea=tmp___0;a_fits=(_Bool)(sizea<=bufsize___1);if((unsignedlong)textb<(unsignedlong)limb)if(a_fits)tmp___1=bufsize___1-sizea;elsetmp___1=(size_t)0;if(a_fits)tmp___2=buf___1+sizea;elsetmp___2=(char*)((void*)0);tmp___3=xstrxfrm(tmp___2,(charconst*)textb,tmp___1);tmp___4=tmp___3+1UL;elsetmp___4=(size_t)0;sizeb=tmp___4;if(a_fits)if(!(sizea+sizeb<=bufsize___1))goto_L;else_L:bufsize___1=sizea+sizeb;if(bufsize___1<6148914691236517205UL)bufsize___1=(bufsize___1*3UL)/2UL;free(allocated);allocated=xmalloc(bufsize___1);buf___1=(char*)allocated;if((unsignedlong)texta<(unsignedlong)lima)strxfrm(buf___1,(charconst*)texta,sizea);if((unsignedlong)textb<(unsignedlong)limb)strxfrm(buf___1+sizea,(charconst*)textb,sizeb);if((unsignedlong)texta<(unsignedlong)lima)tmp___5=strlen((charconst*)texta);texta+=tmp___5+1UL;if((unsignedlong)textb<(unsignedlong)limb)tmp___6=strlen((charconst*)textb);textb+=tmp___6+1UL;if(!((unsignedlong)texta<(unsignedlong)lima))if(!((unsignedlong)textb<(unsignedlong)limb))lena=sizea;texta=buf___1;lenb=sizeb;textb=buf___1+sizea;gotowhile_break;md5_process_bytes((voidconst*)buf___1,sizea,&s[0]);md5_process_bytes((voidconst*)(buf___1+sizea),sizeb,&s[1]);if(!xfrm_diff)if(sizea<sizeb)tmp___7=sizea;elsetmp___7=sizeb;xfrm_diff=memcmp((voidconst*)buf___1,(voidconst*)(buf___1+sizea),tmp___7);if(!xfrm_diff)xfrm_diff=(sizea>sizeb)-(sizea<sizeb);while_break:;md5_process_bytes((voidconst*)texta,lena,&s[0]);md5_finish_ctx(&s[0],(void*)(dig[0]));md5_process_bytes((voidconst*)textb,lenb,&s[1]);md5_finish_ctx(&s[1],(void*)(dig[1]));tmp___8=memcmp((voidconst*)(dig[0]),(voidconst*)(dig[1]),sizeof(dig[0]));diff=tmp___8;if(!diff)if(!xfrm_diff)if(lena<lenb)tmp___9=lena;elsetmp___9=lenb;xfrm_diff=memcmp((voidconst*)texta,(voidconst*)textb,tmp___9);if(!xfrm_diff)xfrm_diff=(lena>lenb)-(lena<lenb);diff=xfrm_diff;free(allocated);return(diff);staticsize_tdebug_width(charconst*text,charconst*lim)size_twidth;size_ttmp;charconst*tmp___0;tmp=(size_t)mbsnwidth(text,(size_t)(lim-text),0);width=tmp;while(1)if(!((unsignedlong)text<(unsignedlong)lim))gotowhile_break;tmp___0=text;text++;width+=(size_t)((intconst)*tmp___0==9);while_break:;return(width);staticvoidmark_key(size_toffset,size_twidth)size_ttmp;char*tmp___0;while(1)tmp=offset;offset--;if(!tmp)gotowhile_break;putchar_unlocked('');while_break:;if(!width)tmp___0=gettext("^nomatchforkey\n");printf((charconst*)tmp___0);elsewhile(1)putchar_unlocked('_');width--;if(!width)gotowhile_break___0;while_break___0:putchar_unlocked('\n');return;__inlinestatic_Boolkey_numeric(structkeyfieldconst*key)inttmp;if(key->numeric)tmp=1;elseif(key->general_numeric)tmp=1;elseif(key->human_numeric)tmp=1;elsetmp=0;return((_Bool)tmp);staticvoiddebug_key(structlineconst*line,structkeyfieldconst*key)char*text;char*beg;char*lim;charsaved___0;unsignedchartmp;char*tighter_lim;longdouble__x;longdoubletmp___0;char*p;inttmp___1;_Boolfound_digit;unsignedcharch;char*tmp___2;char*tmp___3;inttmp___4;_Booltmp___5;size_toffset;size_ttmp___6;size_twidth;size_ttmp___7;text=(char*)line->text;beg=text;lim=(text+line->length)-1;if(key)if(key->sword!=0xffffffffffffffffUL)beg=begfield(line,key);if(key->eword!=0xffffffffffffffffUL)lim=limfield(line,key);if(key->skipsblanks)goto_L___0;elseif(key->month)goto_L___0;elsetmp___5=key_numeric(key);if(tmp___5)_L___0:saved___0=*lim;*lim=(char)'\000';while(1)tmp=to_uchar(*beg);if(!blanks[tmp])gotowhile_break;beg++;while_break:tighter_lim=beg;if((unsignedlong)lim<(unsignedlong)beg)tighter_lim=lim;elseif(key->month)getmonth((charconst*)beg,&tighter_lim);elseif(key->general_numeric)tmp___0=strtold((charconst*)beg,&tighter_lim);__x=tmp___0;elseif(key->numeric)goto_L;elseif(key->human_numeric)_L:if((unsignedlong)beg<(unsignedlong)lim)if((int)*beg==45)tmp___1=1;elsetmp___1=0;elsetmp___1=0;p=beg+tmp___1;found_digit=(_Bool)0;while(1)while(1)tmp___2=p;p++;ch=(unsignedchar)*tmp___2;if(!((unsignedint)ch-48U<=9U))gotowhile_break___1;found_digit=(_Bool)1;while_break___1:;if(!((int)ch==thousands_sep))gotowhile_break___0;while_break___0:;if((int)ch==decimal_point)while(1)tmp___3=p;p++;ch=(unsignedchar)*tmp___3;if(!((unsignedint)ch-48U<=9U))gotowhile_break___2;found_digit=(_Bool)1;while_break___2:;if(found_digit)if(key->human_numeric)if(unit_order[ch])tmp___4=0;elsetmp___4=1;elsetmp___4=1;tighter_lim=p-tmp___4;elsetighter_lim=lim;*lim=saved___0;lim=tighter_lim;tmp___6=debug_width((charconst*)text,(charconst*)beg);offset=tmp___6;tmp___7=debug_width((charconst*)beg,(charconst*)lim);width=tmp___7;mark_key(offset,width);return;staticvoiddebug_line(structlineconst*line)structkeyfieldconst*key;key=(structkeyfieldconst*)keylist;while(1)debug_key(line,key);if(key)key=(structkeyfieldconst*)key->next;if(!key)if(unique)gotowhile_break;elseif(stable)gotowhile_break;elsegotowhile_break;while_break:;return;static_Booldefault_key_compare(structkeyfieldconst*key)_Booltmp;inttmp___0;if(key->ignore)tmp___0=0;elseif(key->translate)tmp___0=0;elseif(key->skipsblanks)tmp___0=0;elseif(key->skipeblanks)tmp___0=0;elsetmp=key_numeric(key);if(tmp)tmp___0=0;elseif(key->month)tmp___0=0;elseif(key->version)tmp___0=0;elseif(key->random)tmp___0=0;elsetmp___0=1;return((_Bool)tmp___0);staticvoidkey_to_opts(structkeyfieldconst*key,char*opts___1)char*tmp;char*tmp___0;char*tmp___1;char*tmp___2;char*tmp___3;char*tmp___4;char*tmp___5;char*tmp___6;char*tmp___7;char*tmp___8;char*tmp___9;if(key->skipsblanks)tmp=opts___1;opts___1++;*tmp=(char)'b';elseif(key->skipeblanks)tmp=opts___1;opts___1++;*tmp=(char)'b';if((unsignedlong)key->ignore==(unsignedlong)(nondictionary))tmp___0=opts___1;opts___1++;*tmp___0=(char)'d';if(key->translate)tmp___1=opts___1;opts___1++;*tmp___1=(char)'f';if(key->general_numeric)tmp___2=opts___1;opts___1++;*tmp___2=(char)'g';if(key->human_numeric)tmp___3=opts___1;opts___1++;*tmp___3=(char)'h';if((unsignedlong)key->ignore==(unsignedlong)(nonprinting))tmp___4=opts___1;opts___1++;*tmp___4=(char)'i';if(key->month)tmp___5=opts___1;opts___1++;*tmp___5=(char)'M';if(key->numeric)tmp___6=opts___1;opts___1++;*tmp___6=(char)'n';if(key->random)tmp___7=opts___1;opts___1++;*tmp___7=(char)'R';if(key->reverse)tmp___8=opts___1;opts___1++;*tmp___8=(char)'r';if(key->version)tmp___9=opts___1;opts___1++;*tmp___9=(char)'V';*opts___1=(char)'\000';return;staticvoidkey_warnings(structkeyfieldconst*gkey,_Boolgkey_only)structkeyfieldconst*key;structkeyfieldugkey;unsignedlongkeynum;size_tsword;size_teword;chartmp[((sizeof(uintmax_t)*8UL)*146UL+484UL)/485UL+1UL];charobuf[(((sizeof(sword)*8UL)*146UL+484UL)/485UL+1UL)*2UL+4UL];charnbuf[(((sizeof(sword)*8UL)*146UL+484UL)/485UL+1UL)*2UL+5UL];char*po;char*pn;char*tmp___0;char*tmp___1;char*tmp___2;char*tmp___3;char*tmp___4;char*tmp___5;char*tmp___6;char*tmp___7;charconst*tmp___8;charconst*tmp___9;char*tmp___10;char*tmp___11;_Boolimplicit_skip;_Booltmp___12;inttmp___13;_Boolmaybe_space_aligned;_Booltmp___14;inttmp___15;_Boolline_offset;inttmp___16;char*tmp___17;size_tsword___0;size_teword___0;char*tmp___18;_Booltmp___19;_Boolugkey_reverse;charopts___1[sizeof(short_options)];size_ttmp___20;unsignedlongtmp___21;char*tmp___22;_Booltmp___23;char*tmp___24;ugkey=(structkeyfield)*gkey;keynum=1UL;key=(structkeyfieldconst*)keylist;while(1)if(!key)gotowhile_break;if(key->obsolete_used)sword=(size_t)key->sword;eword=(size_t)key->eword;po=obuf;pn=nbuf;if(sword==0xffffffffffffffffUL)sword++;tmp___0=umaxtostr(sword,tmp);tmp___1=stpcpy(po,"+");po=stpcpy(tmp___1,(charconst*)tmp___0);tmp___2=umaxtostr(sword+1UL,tmp);tmp___3=stpcpy(pn,"-k");pn=stpcpy(tmp___3,(charconst*)tmp___2);if(key->eword!=0xffffffffffffffffUL)tmp___4=umaxtostr(eword+1UL,tmp);tmp___5=stpcpy(po,"-");stpcpy(tmp___5,(charconst*)tmp___4);tmp___6=umaxtostr((eword+1UL)+(size_t)(key->echar==0xffffffffffffffffUL),tmp);tmp___7=stpcpy(pn,",");stpcpy(tmp___7,(charconst*)tmp___6);tmp___8=quote_n(1,(charconst*)(nbuf));tmp___9=quote_n(0,(charconst*)(obuf));tmp___10=gettext("obsolescentkey%sused;consider%sinstead");error(0,0,(charconst*)tmp___10,tmp___9,tmp___8);if(key->sword!=0xffffffffffffffffUL)if(key->eword<key->sword)tmp___11=gettext("key%luhaszerowidthandwillbeignored");error(0,0,(charconst*)tmp___11,keynum);tmp___12=key_numeric(key);if(tmp___12)tmp___13=1;elseif(key->month)tmp___13=1;elsetmp___13=0;implicit_skip=(_Bool)tmp___13;if(!hard_LC_COLLATE)tmp___14=default_key_compare(key);if(tmp___14)if(key->schar)tmp___15=0;elseif(key->echar)tmp___15=0;elsetmp___15=1;elsetmp___15=0;elsetmp___15=0;maybe_space_aligned=(_Bool)tmp___15;if(key->eword==0UL)if(key->echar!=0UL)tmp___16=1;elsetmp___16=0;elsetmp___16=0;line_offset=(_Bool)tmp___16;if(!gkey_only)if(tab==128)if(!line_offset)if(!key->skipsblanks)if(implicit_skip)goto_L___0;elseif(maybe_space_aligned)goto_L___0;elsetmp___17=gettext("leadingblanksaresignificantinkey%lu;consideralsospecifying\'b\'");error(0,0,(charconst*)tmp___17,keynum);else_L___0:if(!key->skipsblanks)if(key->schar)tmp___17=gettext("leadingblanksaresignificantinkey%lu;consideralsospecifying\'b\'");error(0,0,(charconst*)tmp___17,keynum);elsegoto_L;else_L:if(!key->skipeblanks)if(key->echar)tmp___17=gettext("leadingblanksaresignificantinkey%lu;consideralsospecifying\'b\'");error(0,0,(charconst*)tmp___17,keynum);if(!gkey_only)tmp___19=key_numeric(key);if(tmp___19)sword___0=(size_t)(key->sword+1UL);eword___0=(size_t)(key->eword+1UL);if(!sword___0)sword___0++;if(!eword___0)tmp___18=gettext("key%luisnumericandspansmultiplefields");error(0,0,(charconst*)tmp___18,keynum);elseif(sword___0<eword___0)tmp___18=gettext("key%luisnumericandspansmultiplefields");error(0,0,(charconst*)tmp___18,keynum);if(ugkey.ignore)if((unsignedlong)ugkey.ignore==(unsignedlong)key->ignore)ugkey.ignore=(_Boolconst*)((void*)0);if(ugkey.translate)if((unsignedlong)ugkey.translate==(unsignedlong)key->translate)ugkey.translate=(charconst*)((void*)0);ugkey.skipsblanks=(_Bool)((int)ugkey.skipsblanks&!key->skipsblanks);ugkey.skipeblanks=(_Bool)((int)ugkey.skipeblanks&!key->skipeblanks);ugkey.month=(_Bool)((int)ugkey.month&!key->month);ugkey.numeric=(_Bool)((int)ugkey.numeric&!key->numeric);ugkey.general_numeric=(_Bool)((int)ugkey.general_numeric&!key->general_numeric);ugkey.human_numeric=(_Bool)((int)ugkey.human_numeric&!key->human_numeric);ugkey.random=(_Bool)((int)ugkey.random&!key->random);ugkey.version=(_Bool)((int)ugkey.version&!key->version);ugkey.reverse=(_Bool)((int)ugkey.reverse&!key->reverse);key=(structkeyfieldconst*)key->next;keynum++;while_break:tmp___23=default_key_compare((structkeyfieldconst*)(&ugkey));if(tmp___23)if(ugkey.reverse)if(stable)goto_L___2;elseif(unique)_L___2:if(keylist)_L___1:ugkey_reverse=ugkey.reverse;if(!stable)if(!unique)ugkey.reverse=(_Bool)0;key_to_opts((structkeyfieldconst*)(&ugkey),opts___1);tmp___20=strlen((charconst*)(opts___1));tmp___21=select_plural(tmp___20);tmp___22=ngettext("option\'-%s\'isignored","options\'-%s\'areignored",tmp___21);error(0,0,(charconst*)tmp___22,opts___1);ugkey.reverse=ugkey_reverse;elsegoto_L___1;if(ugkey.reverse)if(!stable)if(!unique)if(keylist)tmp___24=gettext("option\'-r\'onlyappliestolast-resortcomparison");error(0,0,(charconst*)tmp___24);return;staticintkeycompare(structlineconst*a,structlineconst*b)structkeyfield*key;char*texta;char*textb;char*lima;char*limb;intdiff;charconst*translate;_Boolconst*ignore;size_tlena;size_tlenb;char*ta;char*tb;size_ttlena;size_ttlenb;charenda;charendb;void*allocated;charstackbuf[4000];size_ti;size_tsize;size_ttmp;unsignedchartmp___0;unsignedchartmp___1;size_ttmp___2;unsignedchartmp___3;unsignedchartmp___4;inttmp___5;inttmp___6;unsignedchartmp___7;unsignedchartmp___8;unsignedchartmp___9;unsignedchartmp___10;unsignedchartmp___11;unsignedchartmp___12;unsignedchartmp___13;unsignedchartmp___14;unsignedchartmp___15;unsignedchartmp___16;char*tmp___17;unsignedchartmp___18;unsignedchartmp___19;char*tmp___20;unsignedchartmp___21;unsignedchartmp___22;size_ttmp___23;_Booltmp___24;unsignedchartmp___25;unsignedchartmp___26;inttmp___27;key=keylist;texta=(char*)a->keybeg;textb=(char*)b->keybeg;lima=(char*)a->keylim;limb=(char*)b->keylim;while(1)translate=key->translate;ignore=key->ignore;if((unsignedlong)texta>(unsignedlong)lima)lima=texta;elselima=lima;if((unsignedlong)textb>(unsignedlong)limb)limb=textb;elselimb=limb;lena=(size_t)(lima-texta);lenb=(size_t)(limb-textb);if(hard_LC_COLLATE)goto_L___2;elsetmp___24=key_numeric((structkeyfieldconst*)key);if(tmp___24)goto_L___2;elseif(key->month)goto_L___2;elseif(key->random)goto_L___2;elseif(key->version)_L___2:if(ignore)goto_L___1;elseif(translate)_L___1:size=((lena+1UL)+lenb)+1UL;if(size<=sizeof(stackbuf))ta=stackbuf;allocated=(void*)0;elseallocated=xmalloc(size);ta=(char*)allocated;tb=(ta+lena)+1;i=(size_t)0;tlena=i;while(1)if(!(i<lena))gotowhile_break___0;if(ignore)tmp___1=to_uchar(*(texta+i));if(!*(ignore+(int)tmp___1))goto_L;else_L:tmp=tlena;tlena++;if(translate)tmp___0=to_uchar(*(texta+i));*(ta+tmp)=(char)*(translate+(int)tmp___0);else*(ta+tmp)=*(texta+i);i++;while_break___0:*(ta+tlena)=(char)'\000';i=(size_t)0;tlenb=i;while(1)if(!(i<lenb))gotowhile_break___1;if(ignore)tmp___4=to_uchar(*(textb+i));if(!*(ignore+(int)tmp___4))goto_L___0;else_L___0:tmp___2=tlenb;tlenb++;if(translate)tmp___3=to_uchar(*(textb+i));*(tb+tmp___2)=(char)*(translate+(int)tmp___3);else*(tb+tmp___2)=*(textb+i);i++;while_break___1:*(tb+tlenb)=(char)'\000';elseta=texta;tlena=lena;enda=*(ta+tlena);*(ta+tlena)=(char)'\000';tb=textb;tlenb=lenb;endb=*(tb+tlenb);*(tb+tlenb)=(char)'\000';if(key->numeric)diff=numcompare___3((charconst*)ta,(charconst*)tb);elseif(key->general_numeric)diff=general_numcompare((charconst*)ta,(charconst*)tb);elseif(key->human_numeric)diff=human_numcompare((charconst*)ta,(charconst*)tb);elseif(key->month)tmp___5=getmonth((charconst*)ta,(char**)((void*)0));tmp___6=getmonth((charconst*)tb,(char**)((void*)0));diff=tmp___5-tmp___6;elseif(key->random)diff=compare_random(ta,tlena,tb,tlenb);elseif(key->version)diff=filevercmp((charconst*)ta,(charconst*)tb);elseif(tlena==0UL)diff=-(tlenb!=0UL);elseif(tlenb==0UL)diff=1;elsediff=xmemcoll0((charconst*)ta,tlena+1UL,(charconst*)tb,tlenb+1UL);if(ignore)free(allocated);elseif(translate)free(allocated);else*(ta+tlena)=enda;*(tb+tlenb)=endb;elseif(ignore)if(translate)while(1)while(1)while(1)if((unsignedlong)texta<(unsignedlong)lima)tmp___7=to_uchar(*texta);if(!*(ignore+(int)tmp___7))gotowhile_break___4;elsegotowhile_break___4;texta++;while_break___4:;while(1)if((unsignedlong)textb<(unsignedlong)limb)tmp___8=to_uchar(*textb);if(!*(ignore+(int)tmp___8))gotowhile_break___5;elsegotowhile_break___5;textb++;while_break___5:;if((unsignedlong)texta<(unsignedlong)lima)if(!((unsignedlong)textb<(unsignedlong)limb))gotowhile_break___3;elsegotowhile_break___3;tmp___9=to_uchar(*texta);tmp___10=to_uchar((char)*(translate+(int)tmp___9));tmp___11=to_uchar(*textb);tmp___12=to_uchar((char)*(translate+(int)tmp___11));diff=(int)tmp___10-(int)tmp___12;if(diff)gotonot_equal;texta++;textb++;while_break___3:diff=((unsignedlong)texta<(unsignedlong)lima)-((unsignedlong)textb<(unsignedlong)limb);gotowhile_break___2;while_break___2:;elsewhile(1)while(1)while(1)if((unsignedlong)texta<(unsignedlong)lima)tmp___13=to_uchar(*texta);if(!*(ignore+(int)tmp___13))gotowhile_break___8;elsegotowhile_break___8;texta++;while_break___8:;while(1)if((unsignedlong)textb<(unsignedlong)limb)tmp___14=to_uchar(*textb);if(!*(ignore+(int)tmp___14))gotowhile_break___9;elsegotowhile_break___9;textb++;while_break___9:;if((unsignedlong)texta<(unsignedlong)lima)if(!((unsignedlong)textb<(unsignedlong)limb))gotowhile_break___7;elsegotowhile_break___7;tmp___15=to_uchar(*texta);tmp___16=to_uchar(*textb);diff=(int)tmp___15-(int)tmp___16;if(diff)gotonot_equal;texta++;textb++;while_break___7:diff=((unsignedlong)texta<(unsignedlong)lima)-((unsignedlong)textb<(unsignedlong)limb);gotowhile_break___6;while_break___6:;elseif(lena==0UL)diff=-(lenb!=0UL);elseif(lenb==0UL)gotogreater;elseif(translate)while(1)if((unsignedlong)texta<(unsignedlong)lima)if(!((unsignedlong)textb<(unsignedlong)limb))gotowhile_break___10;elsegotowhile_break___10;tmp___17=texta;texta++;tmp___18=to_uchar(*tmp___17);tmp___19=to_uchar((char)*(translate+(int)tmp___18));tmp___20=textb;textb++;tmp___21=to_uchar(*tmp___20);tmp___22=to_uchar((char)*(translate+(int)tmp___21));diff=(int)tmp___19-(int)tmp___22;if(diff)gotonot_equal;while_break___10:;elseif(lena<lenb)tmp___23=lena;elsetmp___23=lenb;diff=memcmp((voidconst*)texta,(voidconst*)textb,tmp___23);if(diff)gotonot_equal;if(lena<lenb)diff=-1;elsediff=lena!=lenb;if(diff)gotonot_equal;key=key->next;if(!key)gotowhile_break;if(key->eword!=0xffffffffffffffffUL)lima=limfield(a,(structkeyfieldconst*)key);limb=limfield(b,(structkeyfieldconst*)key);elselima=(char*)((a->text+a->length)-1);limb=(char*)((b->text+b->length)-1);if(key->sword!=0xffffffffffffffffUL)texta=begfield(a,(structkeyfieldconst*)key);textb=begfield(b,(structkeyfieldconst*)key);elsetexta=(char*)a->text;textb=(char*)b->text;if(key->skipsblanks)while(1)if((unsignedlong)texta<(unsignedlong)lima)tmp___25=to_uchar(*texta);if(!blanks[tmp___25])gotowhile_break___11;elsegotowhile_break___11;texta++;while_break___11:;while(1)if((unsignedlong)textb<(unsignedlong)limb)tmp___26=to_uchar(*textb);if(!blanks[tmp___26])gotowhile_break___12;elsegotowhile_break___12;textb++;while_break___12:;while_break:;return(0);greater:diff=1;not_equal:if(key->reverse)tmp___27=-diff;elsetmp___27=diff;return(tmp___27);staticintcompare(structlineconst*a,structlineconst*b)intdiff;size_talen;size_tblen;size_ttmp;inttmp___0;if(keylist)diff=keycompare(a,b);if(diff)return(diff);elseif(unique)return(diff);elseif(stable)return(diff);alen=(size_t)(a->length-1UL);blen=(size_t)(b->length-1UL);if(alen==0UL)diff=-(blen!=0UL);elseif(blen==0UL)diff=1;elseif(hard_LC_COLLATE)diff=xmemcoll0((charconst*)a->text,alen+1UL,(charconst*)b->text,blen+1UL);elseif(alen<blen)tmp=alen;elsetmp=blen;diff=memcmp((voidconst*)a->text,(voidconst*)b->text,tmp);if(!diff)if(alen<blen)diff=-1;elsediff=alen!=blen;if(reverse)tmp___0=-diff;elsetmp___0=diff;return(tmp___0);staticvoidwrite_line(structlineconst*line,FILE*fp,charconst*output_file)char*buf___1;size_tn_bytes;char*ebuf;charconst*c;charwc;charconst*tmp;char*tmp___0;inttmp___1;char*tmp___2;size_ttmp___3;buf___1=(char*)line->text;n_bytes=(size_t)line->length;ebuf=buf___1+n_bytes;if(!output_file)if(debug)c=(charconst*)buf___1;while(1)if(!((unsignedlong)c<(unsignedlong)ebuf))gotowhile_break;tmp=c;c++;wc=(char)*tmp;if((int)wc==9)wc=(char)'>';elseif((unsignedlong)c==(unsignedlong)ebuf)wc=(char)'\n';tmp___1=fputc_unlocked((int)wc,fp);if(tmp___1==-1)tmp___0=gettext("writefailed");die((charconst*)tmp___0,output_file);while_break:debug_line(line);elsegoto_L;else_L:*(ebuf+-1)=eolchar;tmp___3=fwrite_unlocked((voidconst*)buf___1,(size_t)1,n_bytes,fp);if(tmp___3!=n_bytes)tmp___2=gettext("writefailed");die((charconst*)tmp___2,output_file);*(ebuf+-1)=(char)'\000';return;static_Boolcheck(charconst*file_name___3,charcheckonly)FILE*fp;FILE*tmp;structbufferbuf___1;structlinetemp;size_talloc;uintmax_tline_number;structkeyfieldconst*key;_Boolnonunique;_Boolordered;size_ttmp___0;structlineconst*line;structlineconst*tmp___1;structlineconst*linebase;structlineconst*disorder_line;uintmax_tdisorder_line_number;structline*tmp___2;charhr_buf[((sizeof(disorder_line_number)*8UL)*146UL+484UL)/485UL+1UL];char*tmp___3;char*tmp___4;char*tmp___5;inttmp___6;inttmp___7;_Booltmp___8;tmp=xfopen(file_name___3,"r");fp=tmp;alloc=(size_t)0;line_number=(uintmax_t)0;key=(structkeyfieldconst*)keylist;nonunique=(_Bool)(!unique);ordered=(_Bool)1;if(merge_buffer_size>sort_size)tmp___0=merge_buffer_size;elsetmp___0=sort_size;initbuf(&buf___1,sizeof(structline),tmp___0);temp.text=(char*)((void*)0);while(1)tmp___8=fillbuf___7(&buf___1,fp,file_name___3);if(!tmp___8)gotowhile_break;tmp___1=(structlineconst*)buffer_linelim((structbufferconst*)(&buf___1));line=tmp___1;linebase=line-buf___1.nlines;if(alloc)tmp___6=compare((structlineconst*)(&temp),line-1);if((int)nonunique<=tmp___6)found_disorder:if((int)checkonly==99)disorder_line=line-1;tmp___2=buffer_linelim((structbufferconst*)(&buf___1));disorder_line_number=(uintmax_t)(tmp___2-(structline*)disorder_line)+line_number;tmp___3=umaxtostr(disorder_line_number,hr_buf);tmp___4=gettext("%s:%s:%s:disorder:");fprintf(stderr,(charconst*)tmp___4,program_name,file_name___3,tmp___3);tmp___5=gettext("standarderror");write_line(disorder_line,stderr,(charconst*)tmp___5);ordered=(_Bool)0;gotowhile_break;while(1)line--;if(!((unsignedlong)linebase<(unsignedlong)line))gotowhile_break___0;tmp___7=compare(line,line-1);if((int)nonunique<=tmp___7)gotofound_disorder;while_break___0:line_number+=buf___1.nlines;if(alloc<(size_t)line->length)while(1)alloc*=2UL;if(!alloc)alloc=(size_t)line->length;gotowhile_break___1;if(!(alloc<(size_t)line->length))gotowhile_break___1;while_break___1:free((void*)temp.text);temp.text=(char*)xmalloc(alloc);memcpy((void*)temp.text,(voidconst*)line->text,(size_t)line->length);temp.length=(size_t)line->length;if(key)temp.keybeg=temp.text+(line->keybeg-line->text);temp.keylim=temp.text+(line->keylim-line->text);while_break:xfclose(fp,file_name___3);free((void*)buf___1.buf);free((void*)temp.text);return(ordered);staticsize_topen_input_files(structsortfile*files,size_tnfiles,FILE***pfps)FILE**fps;FILE**tmp;inti;FILE*tmp___0;FILE*tmp___1;tmp=(FILE**)xnmalloc(nfiles,sizeof(*fps));*pfps=tmp;fps=tmp;i=0;while(1)if(!((size_t)i<nfiles))gotowhile_break;if((files+i)->temp)if((int)((files+i)->temp)->state!=0)tmp___0=open_temp((files+i)->temp);*(fps+i)=tmp___0;elsetmp___1=stream_open((files+i)->name,"r");*(fps+i)=tmp___1;elsetmp___1=stream_open((files+i)->name,"r");*(fps+i)=tmp___1;if(!*(fps+i))gotowhile_break;i++;while_break:;return((size_t)i);staticvoidmergefps(structsortfile*files,size_tntemps,size_tnfiles,FILE*ofp,charconst*output_file,FILE**fps)structbuffer*buffer;structbuffer*tmp;structlinesaved___0;structlineconst*savedline;size_tsavealloc;structlineconst**cur;structlineconst**tmp___0;structlineconst**base;structlineconst**tmp___1;size_t*ord;size_t*tmp___2;size_ti;size_tj;size_tt;structkeyfieldconst*key;size_ttmp___3;structlineconst*linelim;structlineconst*tmp___4;_Booltmp___5;inttmp___6;structlineconst*smallest;inttmp___7;structlineconst*linelim___0;structlineconst*tmp___8;_Booltmp___9;size_tlo;size_thi;size_tprobe;size_tord0;size_tcount_of_smaller_lines;intcmp;inttmp___10;tmp=(structbuffer*)xnmalloc(nfiles,sizeof(*buffer));buffer=tmp;savedline=(structlineconst*)((void*)0);savealloc=(size_t)0;tmp___0=(structlineconst**)xnmalloc(nfiles,sizeof(*cur));cur=tmp___0;tmp___1=(structlineconst**)xnmalloc(nfiles,sizeof(*base));base=tmp___1;tmp___2=(size_t*)xnmalloc(nfiles,sizeof(*ord));ord=tmp___2;key=(structkeyfieldconst*)keylist;saved___0.text=(char*)((void*)0);i=(size_t)0;while(1)if(!(i<nfiles))gotowhile_break;if(merge_buffer_size>sort_size/nfiles)tmp___3=merge_buffer_size;elsetmp___3=sort_size/nfiles;initbuf(buffer+i,sizeof(structline),tmp___3);tmp___5=fillbuf___7(buffer+i,*(fps+i),(files+i)->name);if(tmp___5)tmp___4=(structlineconst*)buffer_linelim((structbufferconst*)(buffer+i));linelim=tmp___4;*(cur+i)=linelim-1;*(base+i)=linelim-(buffer+i)->nlines;i++;elsexfclose(*(fps+i),(files+i)->name);if(i<ntemps)ntemps--;zaptemp((files+i)->name);free((void*)(buffer+i)->buf);nfiles--;j=i;while(1)if(!(j<nfiles))gotowhile_break___0;*(files+j)=*(files+(j+1UL));*(fps+j)=*(fps+(j+1UL));j++;while_break___0:;while_break:i=(size_t)0;while(1)if(!(i<nfiles))gotowhile_break___1;*(ord+i)=i;i++;while_break___1:i=(size_t)1;while(1)if(!(i<nfiles))gotowhile_break___2;tmp___6=compare(*(cur+*(ord+(i-1UL))),*(cur+*(ord+i)));if(0<tmp___6)t=*(ord+(i-1UL));*(ord+(i-1UL))=*(ord+i);*(ord+i)=t;i=(size_t)0;i++;while_break___2:;while(1)while_continue___3:;if(!nfiles)gotowhile_break___3;smallest=*(cur+*(ord+0));if(unique)if(savedline)tmp___7=compare(savedline,smallest);if(tmp___7)savedline=(structlineconst*)((void*)0);write_line((structlineconst*)(&saved___0),ofp,output_file);if(!savedline)savedline=(structlineconst*)(&saved___0);if(savealloc<(size_t)smallest->length)while(1)if(!savealloc)savealloc=(size_t)smallest->length;gotowhile_break___4;savealloc*=2UL;if(!(savealloc<(size_t)smallest->length))gotowhile_break___4;while_break___4:free((void*)saved___0.text);saved___0.text=(char*)xmalloc(savealloc);saved___0.length=(size_t)smallest->length;memcpy((void*)saved___0.text,(voidconst*)smallest->text,saved___0.length);if(key)saved___0.keybeg=saved___0.text+(smallest->keybeg-smallest->text);saved___0.keylim=saved___0.text+(smallest->keylim-smallest->text);elsewrite_line(smallest,ofp,output_file);if((unsignedlong)*(base+*(ord+0))<(unsignedlong)smallest)*(cur+*(ord+0))=smallest-1;elsetmp___9=fillbuf___7(buffer+*(ord+0),*(fps+*(ord+0)),(files+*(ord+0))->name);if(tmp___9)tmp___8=(structlineconst*)buffer_linelim((structbufferconst*)(buffer+*(ord+0)));linelim___0=tmp___8;*(cur+*(ord+0))=linelim___0-1;*(base+*(ord+0))=linelim___0-(buffer+*(ord+0))->nlines;elsei=(size_t)1;while(1)if(!(i<nfiles))gotowhile_break___5;if(*(ord+i)>*(ord+0))(*(ord+i))--;i++;while_break___5:nfiles--;xfclose(*(fps+*(ord+0)),(files+*(ord+0))->name);if(*(ord+0)<ntemps)ntemps--;zaptemp((files+*(ord+0))->name);free((void*)(buffer+*(ord+0))->buf);i=*(ord+0);while(1)if(!(i<nfiles))gotowhile_break___6;*(fps+i)=*(fps+(i+1UL));*(files+i)=*(files+(i+1UL));*(buffer+i)=*(buffer+(i+1UL));*(cur+i)=*(cur+(i+1UL));*(base+i)=*(base+(i+1UL));i++;while_break___6:i=(size_t)0;while(1)if(!(i<nfiles))gotowhile_break___7;*(ord+i)=*(ord+(i+1UL));i++;while_break___7:;gotowhile_continue___3;lo=(size_t)1;hi=nfiles;probe=lo;ord0=*(ord+0);while(1)if(!(lo<hi))gotowhile_break___8;tmp___10=compare(*(cur+ord0),*(cur+*(ord+probe)));cmp=tmp___10;if(cmp<0)hi=probe;elseif(cmp==0)if(ord0<*(ord+probe))hi=probe;elselo=probe+1UL;elselo=probe+1UL;probe=(lo+hi)/2UL;while_break___8:count_of_smaller_lines=lo-1UL;j=(size_t)0;while(1)if(!(j<count_of_smaller_lines))gotowhile_break___9;*(ord+j)=*(ord+(j+1UL));j++;while_break___9:*(ord+count_of_smaller_lines)=ord0;while_break___3:;if(unique)if(savedline)write_line((structlineconst*)(&saved___0),ofp,output_file);free((void*)saved___0.text);xfclose(ofp,output_file);free((void*)fps);free((void*)buffer);free((void*)ord);free((void*)base);free((void*)cur);return;staticsize_tmergefiles(structsortfile*files,size_tntemps,size_tnfiles,FILE*ofp,charconst*output_file)FILE**fps;size_tnopened;size_ttmp;char*tmp___0;tmp=open_input_files(files,nfiles,&fps);nopened=tmp;if(nopened<nfiles)if(nopened<2UL)tmp___0=gettext("openfailed");die((charconst*)tmp___0,(files+nopened)->name);mergefps(files,ntemps,nopened,ofp,output_file,fps);return(nopened);staticvoidmergelines(structline*__restrictt,size_tnlines,structlineconst*__restrictlo)size_tnlo;size_tnhi;structline*hi;inttmp;nlo=nlines/2UL;nhi=nlines-nlo;hi=(structline*)(t-nlo);while(1)tmp=compare((structlineconst*)(lo-1),(structlineconst*)(hi-1));if(tmp<=0)t--;lo--;*t=(structline)*lo;nlo--;if(!nlo)return;elset--;hi--;*t=*hi;nhi--;if(!nhi)while(1)t--;lo--;*t=(structline)*lo;nlo--;if(!nlo)gotowhile_break___0;while_break___0:;return;return;staticvoidsequential_sort(structline*__restrictlines,size_tnlines,structline*__restricttemp,_Boolto_temp)intswap___1;inttmp;size_tnlo;size_tnhi;structline*lo;structline*hi;size_ttmp___0;structline*dest;structlineconst*sorted_lo;if(nlines==2UL)tmp=compare((structlineconst*)(lines+-1),(structlineconst*)(lines+-2));swap___1=0<tmp;if(to_temp)*(temp+-1)=*(lines+(-1-swap___1));*(temp+-2)=*(lines+(-2+swap___1));elseif(swap___1)*(temp+-1)=*(lines+-1);*(lines+-1)=*(lines+-2);*(lines+-2)=*(temp+-1);elsenlo=nlines/2UL;nhi=nlines-nlo;lo=(structline*)lines;hi=(structline*)(lines-nlo);if(to_temp)tmp___0=nlo;elsetmp___0=(size_t)0;sequential_sort(hi,nhi,temp-tmp___0,to_temp);if(1UL<nlo)sequential_sort(lo,nlo,temp,(_Bool)(!to_temp));elseif(!to_temp)*(temp+-1)=*(lo+-1);if(to_temp)dest=(structline*)temp;sorted_lo=(structlineconst*)lines;elsedest=(structline*)lines;sorted_lo=(structlineconst*)temp;mergelines(dest,nlines,sorted_lo);return;staticstructmerge_node*init_node(structmerge_node*__restrictparent,structmerge_node*__restrictnode_pool,structline*dest,size_tnthreads,size_ttotal_lines,_Boolis_lo_child);staticstructmerge_node*merge_tree_init(size_tnthreads,size_tnlines,structline*dest)structmerge_node*merge_tree;structmerge_node*tmp;structmerge_node*root;structline*tmp___0;structline*tmp___1;structline*tmp___2;size_ttmp___3;tmp=(structmerge_node*)xmalloc((2UL*sizeof(*merge_tree))*nthreads);merge_tree=tmp;root=merge_tree;tmp___2=(structline*)((void*)0);root->end_hi=tmp___2;tmp___1=tmp___2;root->end_lo=tmp___1;tmp___0=tmp___1;root->hi=tmp___0;root->lo=tmp___0;root->dest=(structline**)((void*)0);tmp___3=nlines;root->nhi=tmp___3;root->nlo=tmp___3;root->parent=(structmerge_node*)((void*)0);root->level=0U;root->queued=(_Bool)0;pthread_mutex_init(&root->lock,(pthread_mutexattr_tconst*)((void*)0));init_node(root,root+1,dest,nthreads,nlines,(_Bool)0);return(merge_tree);staticvoidmerge_tree_destroy(structmerge_node*merge_tree)free((void*)merge_tree);return;staticstructmerge_node*init_node(structmerge_node*__restrictparent,structmerge_node*__restrictnode_pool,structline*dest,size_tnthreads,size_ttotal_lines,_Boolis_lo_child)size_tnlines;size_ttmp;size_tnlo;size_tnhi;structline*lo;structline*hi;structline**parent_end;structline**tmp___0;structmerge_node*node;structmerge_node*__restricttmp___1;structline*tmp___2;structline*tmp___3;size_tlo_threads;size_thi_threads;structmerge_node*tmp___4;structmerge_node*tmp___5;if(is_lo_child)tmp=parent->nlo;elsetmp=parent->nhi;nlines=tmp;nlo=nlines/2UL;nhi=nlines-nlo;lo=dest-total_lines;hi=lo-nlo;if(is_lo_child)tmp___0=&parent->end_lo;elsetmp___0=&parent->end_hi;parent_end=tmp___0;tmp___1=node_pool;node_pool++;node=(structmerge_node*)tmp___1;tmp___2=lo;node->end_lo=tmp___2;node->lo=tmp___2;tmp___3=hi;node->end_hi=tmp___3;node->hi=tmp___3;node->dest=parent_end;node->nlo=nlo;node->nhi=nhi;node->parent=(structmerge_node*)parent;node->level=parent->level+1U;node->queued=(_Bool)0;pthread_mutex_init(&node->lock,(pthread_mutexattr_tconst*)((void*)0));if(nthreads>1UL)lo_threads=nthreads/2UL;hi_threads=nthreads-lo_threads;node->lo_child=(structmerge_node*)node_pool;tmp___4=init_node(node,node_pool,lo,lo_threads,total_lines,(_Bool)1);node_pool=tmp___4;node->hi_child=(structmerge_node*)node_pool;tmp___5=init_node(node,node_pool,hi,hi_threads,total_lines,(_Bool)0);node_pool=tmp___5;elsenode->lo_child=(structmerge_node*)((void*)0);node->hi_child=(structmerge_node*)((void*)0);return((structmerge_node*)node_pool);staticintcompare_nodes(voidconst*a,voidconst*b)structmerge_nodeconst*nodea;structmerge_nodeconst*nodeb;nodea=(structmerge_nodeconst*)a;nodeb=(structmerge_nodeconst*)b;if(nodea->level==nodeb->level)return(nodea->nlo+nodea->nhi<nodeb->nlo+nodeb->nhi);return(nodea->level<nodeb->level);__inlinestaticvoidlock_node(structmerge_node*node)pthread_mutex_lock(&node->lock);return;__inlinestaticvoidunlock_node(structmerge_node*node)pthread_mutex_unlock(&node->lock);return;staticvoidqueue_destroy(structmerge_node_queue*queue)heap_free(queue->priority_queue);pthread_cond_destroy(&queue->cond);pthread_mutex_destroy(&queue->mutex);return;staticvoidqueue_init(structmerge_node_queue*queue,size_tnthreads)queue->priority_queue=heap_alloc(&compare_nodes,2UL*nthreads);pthread_mutex_init(&queue->mutex,(pthread_mutexattr_tconst*)((void*)0));pthread_cond_init(&queue->cond,(pthread_condattr_tconst*)((void*)0));return;staticvoidqueue_insert(structmerge_node_queue*queue,structmerge_node*node)pthread_mutex_lock(&queue->mutex);heap_insert(queue->priority_queue,(void*)node);node->queued=(_Bool)1;pthread_mutex_unlock(&queue->mutex);pthread_cond_signal(&queue->cond);return;staticstructmerge_node*queue_pop(structmerge_node_queue*queue)structmerge_node*node;pthread_mutex_lock(&queue->mutex);while(1)node=(structmerge_node*)heap_remove_top(queue->priority_queue);if(node)gotowhile_break;pthread_cond_wait(&queue->cond,&queue->mutex);while_break:pthread_mutex_unlock(&queue->mutex);lock_node(node);node->queued=(_Bool)0;return(node);staticstructlinesaved;staticvoidwrite_unique(structlineconst*line,FILE*tfp,charconst*temp_output)inttmp;if(unique)if(saved.text)tmp=compare(line,(structlineconst*)(&saved));if(!tmp)return;saved=(structline)*line;write_line(line,tfp,temp_output);return;staticvoidmergelines_node(structmerge_node*__restrictnode,size_ttotal_lines,FILE*tfp,charconst*temp_output)structline*lo_orig;structline*hi_orig;size_tto_merge;size_tmerged_lo;size_tmerged_hi;structline*dest;inttmp;size_ttmp___0;size_ttmp___1;size_ttmp___2;inttmp___3;size_ttmp___4;size_ttmp___5;size_ttmp___6;lo_orig=node->lo;hi_orig=node->hi;to_merge=(total_lines>>2U*(node->level+1U))+1UL;if(node->level>1U)dest=*(node->dest);while(1)if((unsignedlong)node->lo!=(unsignedlong)node->end_lo)if((unsignedlong)node->hi!=(unsignedlong)node->end_hi)tmp___0=to_merge;to_merge--;if(!tmp___0)gotowhile_break;elsegotowhile_break;elsegotowhile_break;tmp=compare((structlineconst*)(node->lo-1),(structlineconst*)(node->hi-1));if(tmp<=0)dest--;(node->lo)--;*dest=*(node->lo);elsedest--;(node->hi)--;*dest=*(node->hi);while_break:merged_lo=(size_t)(lo_orig-node->lo);merged_hi=(size_t)(hi_orig-node->hi);if(node->nhi==merged_hi)while(1)if((unsignedlong)node->lo!=(unsignedlong)node->end_lo)tmp___1=to_merge;to_merge--;if(!tmp___1)gotowhile_break___0;elsegotowhile_break___0;dest--;(node->lo)--;*dest=*(node->lo);while_break___0:;elseif(node->nlo==merged_lo)while(1)if((unsignedlong)node->hi!=(unsignedlong)node->end_hi)tmp___2=to_merge;to_merge--;if(!tmp___2)gotowhile_break___1;elsegotowhile_break___1;dest--;(node->hi)--;*dest=*(node->hi);while_break___1:;*(node->dest)=dest;elsewhile(1)if((unsignedlong)node->lo!=(unsignedlong)node->end_lo)if((unsignedlong)node->hi!=(unsignedlong)node->end_hi)tmp___4=to_merge;to_merge--;if(!tmp___4)gotowhile_break___2;elsegotowhile_break___2;elsegotowhile_break___2;tmp___3=compare((structlineconst*)(node->lo-1),(structlineconst*)(node->hi-1));if(tmp___3<=0)(node->lo)--;write_unique((structlineconst*)node->lo,tfp,temp_output);else(node->hi)--;write_unique((structlineconst*)node->hi,tfp,temp_output);while_break___2:merged_lo=(size_t)(lo_orig-node->lo);merged_hi=(size_t)(hi_orig-node->hi);if(node->nhi==merged_hi)while(1)if((unsignedlong)node->lo!=(unsignedlong)node->end_lo)tmp___5=to_merge;to_merge--;if(!tmp___5)gotowhile_break___3;elsegotowhile_break___3;(node->lo)--;write_unique((structlineconst*)node->lo,tfp,temp_output);while_break___3:;elseif(node->nlo==merged_lo)while(1)if((unsignedlong)node->hi!=(unsignedlong)node->end_hi)tmp___6=to_merge;to_merge--;if(!tmp___6)gotowhile_break___4;elsegotowhile_break___4;(node->hi)--;write_unique((structlineconst*)node->hi,tfp,temp_output);while_break___4:;merged_lo=(size_t)(lo_orig-node->lo);merged_hi=(size_t)(hi_orig-node->hi);node->nlo-=merged_lo;node->nhi-=merged_hi;return;staticvoidqueue_check_insert(structmerge_node_queue*queue,structmerge_node*node)_Boollo_avail;_Boolhi_avail;inttmp;inttmp___0;inttmp___1;if(!node->queued)lo_avail=(_Bool)(node->lo-node->end_lo!=0L);hi_avail=(_Bool)(node->hi-node->end_hi!=0L);if(lo_avail)if(hi_avail)tmp=1;elseif(!node->nhi)tmp=1;elsetmp=0;tmp___1=tmp;elseif(hi_avail)if(!node->nlo)tmp___0=1;elsetmp___0=0;elsetmp___0=0;tmp___1=tmp___0;if(tmp___1)queue_insert(queue,node);return;staticvoidqueue_check_insert_parent(structmerge_node_queue*queue,structmerge_node*node)if(node->level>1U)lock_node(node->parent);queue_check_insert(queue,node->parent);unlock_node(node->parent);elseif(node->nlo+node->nhi==0UL)queue_insert(queue,node->parent);return;staticvoidmerge_loop(structmerge_node_queue*queue,size_ttotal_lines,FILE*tfp,charconst*temp_output)structmerge_node*node;structmerge_node*tmp;while(1)tmp=queue_pop(queue);node=tmp;if(node->level==0U)unlock_node(node);queue_insert(queue,node);gotowhile_break;mergelines_node(node,total_lines,tfp,temp_output);queue_check_insert(queue,node);queue_check_insert_parent(queue,node);unlock_node(node);while_break:;return;staticvoidsortlines(structline*__restrictlines,size_tnthreads,size_ttotal_lines,structmerge_node*node,structmerge_node_queue*queue,FILE*tfp,charconst*temp_output);staticvoid*sortlines_thread(void*data)structthread_argsconst*args;args=(structthread_argsconst*)data;sortlines((structline*)args->lines,(size_t)args->nthreads,(size_t)args->total_lines,(structmerge_node*)args->node,(structmerge_node_queue*)args->queue,(FILE*)args->tfp,(charconst*)args->output_temp);return((void*)0);staticvoidsortlines(structline*__restrictlines,size_tnthreads,size_ttotal_lines,structmerge_node*node,structmerge_node_queue*queue,FILE*tfp,charconst*temp_output)size_tnlines;size_tlo_threads;size_thi_threads;pthread_tthread;structthread_argsargs;size_tnlo;size_tnhi;structline*temp;inttmp;nlines=node->nlo+node->nhi;lo_threads=nthreads/2UL;hi_threads=nthreads-lo_threads;args.lines=(structline*)lines;args.nthreads=lo_threads;args.total_lines=total_lines;args.node=node->lo_child;args.queue=queue;args.tfp=tfp;args.output_temp=temp_output;if(nthreads>1UL)if(131072UL<=nlines)tmp=pthread_create(&thread,(pthread_attr_tconst*)((void*)0),&sortlines_thread,(void*)(&args));if(tmp==0)sortlines(lines-node->nlo,hi_threads,total_lines,node->hi_child,queue,tfp,temp_output);pthread_join(thread,(void**)((void*)0));elsegoto_L___0;elsegoto_L___0;else_L___0:nlo=node->nlo;nhi=node->nhi;temp=(structline*)(lines-total_lines);if(1UL<nhi)sequential_sort(lines-nlo,nhi,temp-nlo/2UL,(_Bool)0);if(1UL<nlo)sequential_sort(lines,nlo,temp,(_Bool)0);node->lo=(structline*)lines;node->hi=(structline*)(lines-nlo);node->end_lo=(structline*)(lines-nlo);node->end_hi=(structline*)((lines-nlo)-nhi);queue_insert(queue,node);merge_loop(queue,total_lines,tfp,temp_output);pthread_mutex_destroy(&node->lock);return;staticvoidavoid_trashing_input(structsortfile*files,size_tntemps,size_tnfiles,charconst*outfile)size_ti;_Boolgot_outstat;structstatoutstat;structtempnode*tempcopy;_Boolis_stdin;inttmp;_Boolsame;structstatinstat;inttmp___0;inttmp___1;inttmp___2;inttmp___3;inttmp___4;inttmp___5;inttmp___6;inttmp___7;FILE*tftp;got_outstat=(_Bool)0;tempcopy=(structtempnode*)((void*)0);i=ntemps;while(1)if(!(i<nfiles))gotowhile_break;tmp=strcmp((files+i)->name,"-");is_stdin=(_Bool)(tmp==0);if(outfile)tmp___7=strcmp(outfile,(files+i)->name);if(tmp___7==0)if(!is_stdin)same=(_Bool)1;elsegoto_L___0;elsegoto_L___0;else_L___0:if(!got_outstat)if(outfile)tmp___0=stat(outfile,&outstat);tmp___2=tmp___0;elsetmp___1=fstat(1,&outstat);tmp___2=tmp___1;if(tmp___2!=0)gotowhile_break;got_outstat=(_Bool)1;if(is_stdin)tmp___3=fstat(0,&instat);tmp___5=tmp___3;elsetmp___4=stat((files+i)->name,&instat);tmp___5=tmp___4;if(tmp___5==0)if(instat.st_ino==outstat.st_ino)if(instat.st_dev==outstat.st_dev)tmp___6=1;elsetmp___6=0;elsetmp___6=0;elsetmp___6=0;same=(_Bool)tmp___6;if(same)if(!tempcopy)tempcopy=create_temp(&tftp);mergefiles(files+i,(size_t)0,(size_t)1,tftp,(charconst*)(tempcopy->name));(files+i)->name=(charconst*)(tempcopy->name);(files+i)->temp=tempcopy;i++;while_break:;return;staticvoidmerge(structsortfile*files,size_tntemps,size_tnfiles,charconst*output_file)size_tin;size_tout;size_tremainder;size_tcheap_slots;FILE*tfp;structtempnode*temp;structtempnode*tmp;size_tnum_merged;size_ttmp___0;size_ttmp___1;size_ttmp___2;size_tnshortmerge;FILE*tfp___0;structtempnode*temp___0;structtempnode*tmp___3;size_tnum_merged___0;size_ttmp___4;size_ttmp___5;size_ttmp___6;size_ttmp___7;FILE**fps;size_tnopened;size_ttmp___8;FILE*ofp;FILE*tmp___9;char*tmp___10;int*tmp___11;char*tmp___12;FILE*tfp___1;structtempnode*temp___1;size_ttmp___13;size_ttmp___14;while(1)if(!((size_t)nmerge<nfiles))gotowhile_break;in=(size_t)0;out=in;while(1)if(!((size_t)nmerge<=nfiles-in))gotowhile_break___0;tmp=create_temp(&tfp);temp=tmp;if(ntemps<(size_t)nmerge)tmp___0=ntemps;elsetmp___0=(size_t)nmerge;tmp___1=mergefiles(files+in,tmp___0,(size_t)nmerge,tfp,(charconst*)(temp->name));num_merged=tmp___1;if(ntemps<num_merged)tmp___2=ntemps;elsetmp___2=num_merged;ntemps-=tmp___2;(files+out)->name=(charconst*)(temp->name);(files+out)->temp=temp;in+=num_merged;out++;while_break___0:remainder=nfiles-in;cheap_slots=(unsignedlong)nmerge-out%(unsignedlong)nmerge;if(cheap_slots<remainder)nshortmerge=(remainder-cheap_slots)+1UL;tmp___3=create_temp(&tfp___0);temp___0=tmp___3;if(ntemps<nshortmerge)tmp___4=ntemps;elsetmp___4=nshortmerge;tmp___5=mergefiles(files+in,tmp___4,nshortmerge,tfp___0,(charconst*)(temp___0->name));num_merged___0=tmp___5;if(ntemps<num_merged___0)tmp___6=ntemps;elsetmp___6=num_merged___0;ntemps-=tmp___6;(files+out)->name=(charconst*)(temp___0->name);tmp___7=out;out++;(files+tmp___7)->temp=temp___0;in+=num_merged___0;memmove((void*)(files+out),(voidconst*)(files+in),(nfiles-in)*sizeof(*files));ntemps+=out;nfiles-=in-out;while_break:avoid_trashing_input(files,ntemps,nfiles,output_file);while(1)tmp___8=open_input_files(files,nfiles,&fps);nopened=tmp___8;if(nopened==nfiles)tmp___9=stream_open(output_file,"w");ofp=tmp___9;if(ofp)mergefps(files,ntemps,nfiles,ofp,output_file,fps);gotowhile_break___1;tmp___11=__errno_location();if(*tmp___11!=24)tmp___10=gettext("openfailed");die((charconst*)tmp___10,output_file);elseif(nopened<=2UL)tmp___10=gettext("openfailed");die((charconst*)tmp___10,output_file);elseif(nopened<=2UL)tmp___12=gettext("openfailed");die((charconst*)tmp___12,(files+nopened)->name);while(1)nopened--;xfclose(*(fps+nopened),(files+nopened)->name);temp___1=maybe_create_temp(&tfp___1,(_Bool)(!(nopened<=2UL)));if(!(!temp___1))gotowhile_break___2;while_break___2:;if(ntemps<nopened)tmp___13=ntemps;elsetmp___13=nopened;mergefps(files+0,tmp___13,nopened,tfp___1,(charconst*)(temp___1->name),fps);if(ntemps<nopened)tmp___14=ntemps;elsetmp___14=nopened;ntemps-=tmp___14;(files+0)->name=(charconst*)(temp___1->name);(files+0)->temp=temp___1;memmove((void*)(files+1),(voidconst*)(files+nopened),(nfiles-nopened)*sizeof(*files));ntemps++;nfiles-=nopened-1UL;while_break___1:;return;staticvoidsort(char*const*files,size_tnfiles,charconst*output_file,size_tnthreads)structbufferbuf___1;size_tntemps;_Booloutput_file_created;charconst*temp_output;charconst*file;FILE*fp;FILE*tmp;FILE*tfp;size_tbytes_per_line;size_ttmp___0;size_tmult;size_ttmp___1;structline*line;structtempnode*tmp___2;structmerge_node_queuequeue;structmerge_node*merge_tree;structmerge_node*tmp___3;structmerge_node*root;_Booltmp___4;size_ti;structtempnode*node;structsortfile*tempfiles;structsortfile*tmp___5;ntemps=(size_t)0;output_file_created=(_Bool)0;buf___1.alloc=(size_t)0;while(1)if(!nfiles)gotowhile_break;file=(charconst*)*files;tmp=xfopen(file,"r");fp=tmp;if(nthreads>1UL)tmp___0=(size_t)1;mult=(size_t)1;while(1)if(!(tmp___0<nthreads))gotowhile_break___0;tmp___0*=2UL;mult++;while_break___0:bytes_per_line=mult*sizeof(structline);elsebytes_per_line=(sizeof(structline)*3UL)/2UL;if(!buf___1.alloc)tmp___1=sort_buffer_size((FILE*const*)(&fp),(size_t)1,files,nfiles,bytes_per_line);initbuf(&buf___1,bytes_per_line,tmp___1);buf___1.eof=(_Bool)0;files++;nfiles--;while(1)tmp___4=fillbuf___7(&buf___1,fp,file);if(!tmp___4)gotowhile_break___1;if(buf___1.eof)if(nfiles)if(bytes_per_line+1UL<(buf___1.alloc-buf___1.used)-bytes_per_line*buf___1.nlines)buf___1.left=buf___1.used;gotowhile_break___1;line=buffer_linelim((structbufferconst*)(&buf___1));if(buf___1.eof)if(!nfiles)if(!ntemps)if(!buf___1.left)xfclose(fp,file);tfp=xfopen(output_file,"w");temp_output=output_file;output_file_created=(_Bool)1;elsentemps++;tmp___2=create_temp(&tfp);temp_output=(charconst*)(tmp___2->name);elsentemps++;tmp___2=create_temp(&tfp);temp_output=(charconst*)(tmp___2->name);elsentemps++;tmp___2=create_temp(&tfp);temp_output=(charconst*)(tmp___2->name);elsentemps++;tmp___2=create_temp(&tfp);temp_output=(charconst*)(tmp___2->name);if(1UL<buf___1.nlines)queue_init(&queue,nthreads);tmp___3=merge_tree_init(nthreads,buf___1.nlines,line);merge_tree=tmp___3;root=merge_tree+1;sortlines(line,nthreads,buf___1.nlines,root,&queue,tfp,temp_output);queue_destroy(&queue);pthread_mutex_destroy(&root->lock);merge_tree_destroy(merge_tree);elsewrite_unique((structlineconst*)(line-1),tfp,temp_output);xfclose(tfp,temp_output);if(output_file_created)gotofinish;while_break___1:xfclose(fp,file);while_break:;finish:free((void*)buf___1.buf);if(!output_file_created)node=(structtempnode*)temphead;tmp___5=(structsortfile*)xnmalloc(ntemps,sizeof(*tempfiles));tempfiles=tmp___5;i=(size_t)0;while(1)if(!node)gotowhile_break___2;(tempfiles+i)->name=(charconst*)(node->name);(tempfiles+i)->temp=node;node=(structtempnode*)node->next;i++;while_break___2:merge(tempfiles,ntemps,ntemps,output_file);free((void*)tempfiles);reap_all();return;staticvoidinsertkey(structkeyfield*key_arg)structkeyfield**p;structkeyfield*key;structkeyfield*tmp;tmp=(structkeyfield*)xmemdup((voidconst*)key_arg,sizeof(*key));key=tmp;p=&keylist;while(1)if(!*p)gotowhile_break;goto__Cont;__Cont:p=&(*p)->next;while_break:*p=key;key->next=(structkeyfield*)((void*)0);return;static__attribute__((__noreturn__))voidbadfieldspec(charconst*spec,charconst*msgid);static__attribute__((__noreturn__))voidbadfieldspec(charconst*spec,charconst*msgid);staticvoidbadfieldspec(charconst*spec,charconst*msgid)charconst*tmp;char*tmp___0;char*tmp___1;tmp=quote(spec);tmp___0=gettext(msgid);tmp___1=gettext("%s:invalidfieldspecification%s");error(2,0,(charconst*)tmp___1,tmp___0,tmp);abort();static__attribute__((__noreturn__))voidincompatible_options(charconst*opts___1);static__attribute__((__noreturn__))voidincompatible_options(charconst*opts___1);staticvoidincompatible_options(charconst*opts___1)char*tmp;tmp=gettext("options\'-%s\'areincompatible");error(2,0,(charconst*)tmp,opts___1);abort();staticvoidcheck_ordering_compatibility(void)structkeyfield*key;charopts___1[sizeof(short_options)];_Booltmp;_Booltmp___0;key=keylist;while(1)if(!key)gotowhile_break;if(1<((((int)key->numeric+(int)key->general_numeric)+(int)key->human_numeric)+(int)key->month)+(((int)key->version|(int)key->random)|!(!key->ignore)))tmp___0=(_Bool)0;key->reverse=tmp___0;tmp=tmp___0;key->skipeblanks=tmp;key->skipsblanks=tmp;key_to_opts((structkeyfieldconst*)key,opts___1);incompatible_options((charconst*)(opts___1));key=key->next;while_break:;return;staticcharconst*parse_field_count(charconst*string,size_t*val,charconst*msgid)char*suffix;uintmax_tn;strtol_errortmp;charconst*tmp___0;char*tmp___1;char*tmp___2;tmp=xstrtoumax(string,&suffix,10,&n,"");if((unsignedint)tmp==0U)gotocase_0;if((unsignedint)tmp==2U)gotocase_0;if((unsignedint)tmp==1U)gotocase_1;if((unsignedint)tmp==3U)gotocase_1;if((unsignedint)tmp==4U)gotocase_4;gotoswitch_break;case_0:*val=n;if(*val==n)gotoswitch_break;case_1:*val=0xffffffffffffffffUL;gotoswitch_break;case_4:if(msgid)tmp___0=quote(string);tmp___1=gettext(msgid);tmp___2=gettext("%s:invalidcountatstartof%s");error(2,0,(charconst*)tmp___2,tmp___1,tmp___0);return((charconst*)((void*)0));switch_break:;return((charconst*)suffix);staticchar*set_ordering(charconst*s,structkeyfield*key,enumblanktypeblanktype)while(1)if(!*s)gotowhile_break;if((intconst)*s==98)gotocase_98;if((intconst)*s==100)gotocase_100;if((intconst)*s==102)gotocase_102;if((intconst)*s==103)gotocase_103;if((intconst)*s==104)gotocase_104;if((intconst)*s==105)gotocase_105;if((intconst)*s==77)gotocase_77;if((intconst)*s==110)gotocase_110;if((intconst)*s==82)gotocase_82;if((intconst)*s==114)gotocase_114;if((intconst)*s==86)gotocase_86;gotoswitch_default;case_98:if((unsignedint)blanktype==0U)key->skipsblanks=(_Bool)1;elseif((unsignedint)blanktype==2U)key->skipsblanks=(_Bool)1;if((unsignedint)blanktype==1U)key->skipeblanks=(_Bool)1;elseif((unsignedint)blanktype==2U)key->skipeblanks=(_Bool)1;gotoswitch_break;case_100:key->ignore=(_Boolconst*)(nondictionary);gotoswitch_break;case_102:key->translate=(charconst*)(fold_toupper);gotoswitch_break;case_103:key->general_numeric=(_Bool)1;gotoswitch_break;case_104:key->human_numeric=(_Bool)1;gotoswitch_break;case_105:if(!key->ignore)key->ignore=(_Boolconst*)(nonprinting);gotoswitch_break;case_77:key->month=(_Bool)1;gotoswitch_break;case_110:key->numeric=(_Bool)1;gotoswitch_break;case_82:key->random=(_Bool)1;gotoswitch_break;case_114:key->reverse=(_Bool)1;gotoswitch_break;case_86:key->version=(_Bool)1;gotoswitch_break;switch_default:return((char*)s);switch_break:s++;while_break:;return((char*)s);staticstructkeyfield*key_init(structkeyfield*key)memset((void*)key,0,sizeof(*key));key->eword=0xffffffffffffffffUL;return(key);staticvoidsighandler(intsig___0)cleanup();signal(sig___0,(void(*)(int))0);raise(sig___0);return;intmain(intargc,char**argv);staticintconstsig[11]=(intconst)14,(intconst)1,(intconst)2,(intconst)13,(intconst)3,(intconst)15,(intconst)29,(intconst)27,(intconst)26,(intconst)24,(intconst)25;staticcharopts[10]=(char)'X',(char)'',(char)'-',(char)'-',(char)'d',(char)'e',(char)'b',(char)'u',(char)'g',(char)'\000';staticchar*minus=(char*)"-";staticcharopts___0[3]=(char)0,(char)'o',(char)0;intmain(intargc,char**argv)structkeyfield*key;structkeyfieldkey_buf;structkeyfieldgkey;_Boolgkey_only;charconst*s;intc;charcheckonly;_Boolmergeonly;char*random_source;_Boolneed_random;size_tnthreads;size_tnfiles;_Boolposixly_correct;char*tmp;_Boolobsolete_usage;inttmp___0;char**files;char*files_from;structTokenstok;charconst*outfile;structlconvconst*locale;structlconvconst*tmp___1;size_ti;structsigactionact;inttmp___2;intoi;size_ttmp___3;inttmp___4;_Boolminus_pos_usage;inttmp___5;inttmp___6;charconst*optarg1;inttmp___7;char*tmp___8;char*tmp___9;size_ttmp___10;ptrdiff_ttmp___11;charstr[2];ptrdiff_ttmp___12;char*tmp___13;inttmp___14;size_ttmp___15;size_ttmp___16;size_ttmp___17;char*tmp___18;inttmp___19;char*tmp___20;inttmp___21;charnewtab;char*tmp___22;charconst*tmp___23;char*tmp___24;inttmp___25;char*tmp___26;charconst*p;FILE*stream;charconst*tmp___27;char*tmp___28;char*tmp___29;charconst*tmp___30;char*tmp___31;int*tmp___32;inttmp___33;charconst*tmp___34;char*tmp___35;_Booltmp___36;inttmp___37;size_ti___0;charconst*tmp___38;char*tmp___39;unsignedlongfile_number;char*tmp___40;char*tmp___41;inttmp___42;charconst*tmp___43;char*tmp___44;_Booltmp___45;_Booltmp___46;char*tmp___47;charconst*tmp___48;char*tmp___49;char*tmp___50;charconst*tmp_dir;charconst*tmp___51;charconst*tmp___52;charconst*tmp___53;char*tmp___54;inttmp___56;_Booltmp___57;structsortfile*sortfiles;structsortfile*tmp___58;size_ti___1;unsignedlongnp;unsignedlongtmp___59;size_tnthreads_max;char*tmp___60;inttmp___61;gkey_only=(_Bool)0;c=0;checkonly=(char)0;mergeonly=(_Bool)0;random_source=(char*)((void*)0);need_random=(_Bool)0;nthreads=(size_t)0;nfiles=(size_t)0;tmp=getenv("POSIXLY_CORRECT");posixly_correct=(_Bool)((unsignedlong)tmp!=(unsignedlong)((void*)0));tmp___0=posix2_version();obsolete_usage=(_Bool)(tmp___0<200112);files_from=(char*)((void*)0);outfile=(charconst*)((void*)0);set_program_name((charconst*)*(argv+0));setlocale(6,"");bindtextdomain("coreutils","/usr/local/share/locale");textdomain("coreutils");initialize_exit_failure(2);hard_LC_COLLATE=hard_locale(3);hard_LC_TIME=hard_locale(2);tmp___1=(structlconvconst*)localeconv();locale=tmp___1;decimal_point=(int)to_uchar(*(locale->decimal_point+0));if(!decimal_point)decimal_point='.';elseif(*(locale->decimal_point+1))decimal_point='.';thousands_sep=(int)to_uchar(*(locale->thousands_sep));if(!thousands_sep)thousands_sep=-1;elseif(*(locale->thousands_sep+1))thousands_sep=-1;have_read_stdin=(_Bool)0;inittables();sigemptyset(&caught_signals);i=(size_t)0;while(1)if(!(i<11UL))gotowhile_break;sigaction((int)sig[i],(structsigactionconst*)((void*)0),&act);if((unsignedlong)act.__sigaction_handler.sa_handler!=(unsignedlong)((void(*)(int))1))sigaddset(&caught_signals,(int)sig[i]);i++;while_break:act.__sigaction_handler.sa_handler=&sighandler;act.sa_mask=caught_signals;act.sa_flags=0;i=(size_t)0;while(1)if(!(i<11UL))gotowhile_break___0;tmp___2=sigismember((sigset_tconst*)(&caught_signals),(int)sig[i]);if(tmp___2)sigaction((int)sig[i],(structsigactionconst*)(&act),(structsigaction*)((void*)0));i++;while_break___0:signal(17,(void(*)(int))0);atexit(&exit_cleanup);key_init(&gkey);gkey.sword=0xffffffffffffffffUL;files=(char**)xnmalloc((size_t)argc,sizeof(*files));while(1)oi=-1;if(c==-1)goto_L;elseif(posixly_correct)if(nfiles!=0UL)if(obsolete_usage)if(!checkonly)if(optind!=argc)if((int)*(*(argv+optind)+0)==45)if((int)*(*(argv+optind)+1)==111)if(*(*(argv+optind)+2))goto_L___1;elseif(optind+1!=argc)goto_L___1;elsegoto_L;elsegoto_L;elsegoto_L;elsegoto_L;elsegoto_L;elsegoto_L;elsegoto_L___1;else_L___1:c=getopt_long(argc,(char*const*)argv,short_options,long_options___1,&oi);if(c==-1)_L:if(argc<=optind)gotowhile_break___1;tmp___3=nfiles;nfiles++;tmp___4=optind;optind++;*(files+tmp___3)=*(argv+tmp___4);elseif(c==1)gotocase_1;if(c==134)gotocase_134;if(c==98)gotocase_98;if(c==100)gotocase_98;if(c==102)gotocase_98;if(c==103)gotocase_98;if(c==104)gotocase_98;if(c==105)gotocase_98;if(c==77)gotocase_98;if(c==110)gotocase_98;if(c==114)gotocase_98;if(c==82)gotocase_98;if(c==86)gotocase_98;if(c==128)gotocase_128;if(c==99)gotocase_99;if(c==67)gotocase_99;if(c==129)gotocase_129;if(c==130)gotocase_130;if(c==131)gotocase_131;if(c==107)gotocase_107;if(c==109)gotocase_109;if(c==132)gotocase_132;if(c==111)gotocase_111;if(c==133)gotocase_133;if(c==115)gotocase_115;if(c==83)gotocase_83;if(c==116)gotocase_116;if(c==84)gotocase_84;if(c==135)gotocase_135;if(c==117)gotocase_117;if(c==121)gotocase_121;if(c==122)gotocase_122;if(c==-130)gotocase_neg_130;if(c==-131)gotocase_neg_131;gotoswitch_default;case_1:key=(structkeyfield*)((void*)0);if((int)*(optarg+0)==43)if(optind!=argc)if((int)*(*(argv+optind)+0)==45)if((unsignedint)*(*(argv+optind)+1)-48U<=9U)tmp___5=1;elsetmp___5=0;elsetmp___5=0;elsetmp___5=0;minus_pos_usage=(_Bool)tmp___5;if(minus_pos_usage)if(!posixly_correct)tmp___6=1;elsetmp___6=0;elsetmp___6=0;obsolete_usage=(_Bool)((int)obsolete_usage|tmp___6);if(obsolete_usage)key=key_init(&key_buf);s=parse_field_count((charconst*)(optarg+1),&key->sword,(charconst*)((void*)0));if(s)if((intconst)*s==46)s=parse_field_count(s+1,&key->schar,(charconst*)((void*)0));if(!key->sword)if(!key->schar)key->sword=0xffffffffffffffffUL;if(!s)key=(structkeyfield*)((void*)0);elsetmp___9=set_ordering(s,key,(enumblanktype)0);if(*tmp___9)key=(structkeyfield*)((void*)0);elseif(minus_pos_usage)tmp___7=optind;optind++;optarg1=(charconst*)*(argv+tmp___7);s=parse_field_count(optarg1+1,&key->eword,"invalidnumberafter\'-\'");if((intconst)*s==46)s=parse_field_count(s+1,&key->echar,"invalidnumberafter\'.\'");if(!key->echar)if(key->eword)(key->eword)--;tmp___8=set_ordering(s,key,(enumblanktype)1);if(*tmp___8)badfieldspec(optarg1,"straycharacterinfieldspec");key->obsolete_used=(_Bool)1;insertkey(key);if(!key)tmp___10=nfiles;nfiles++;*(files+tmp___10)=optarg;gotoswitch_break;case_134:tmp___11=__xargmatch_internal("--sort",(charconst*)optarg,sort_args,sort_types,sizeof(sort_types[0]),argmatch_die);c=(int)sort_types[tmp___11];case_98:str[0]=(char)c;str[1]=(char)'\000';set_ordering((charconst*)(str),&gkey,(enumblanktype)2);gotoswitch_break;case_128:if(optarg)tmp___12=__xargmatch_internal("--check",(charconst*)optarg,check_args,check_types,sizeof(check_types[0]),argmatch_die);c=(int)check_types[tmp___12];elsec='c';case_99:if(checkonly)if((int)checkonly!=c)incompatible_options("cC");checkonly=(char)c;gotoswitch_break;case_129:if(compress_program)tmp___14=strcmp(compress_program,(charconst*)optarg);if(!(tmp___14==0))tmp___13=gettext("multiplecompressprogramsspecified");error(2,0,(charconst*)tmp___13);compress_program=(charconst*)optarg;gotoswitch_break;case_130:debug=(_Bool)1;gotoswitch_break;case_131:files_from=optarg;gotoswitch_break;case_107:key=key_init(&key_buf);s=parse_field_count((charconst*)optarg,&key->sword,"invalidnumberatfieldstart");tmp___15=key->sword;(key->sword)--;if(!tmp___15)badfieldspec((charconst*)optarg,"fieldnumberiszero");if((intconst)*s==46)s=parse_field_count(s+1,&key->schar,"invalidnumberafter\'.\'");tmp___16=key->schar;(key->schar)--;if(!tmp___16)badfieldspec((charconst*)optarg,"characteroffsetiszero");if(!key->sword)if(!key->schar)key->sword=0xffffffffffffffffUL;s=(charconst*)set_ordering(s,key,(enumblanktype)0);if((intconst)*s!=44)key->eword=0xffffffffffffffffUL;key->echar=(size_t)0;elses=parse_field_count(s+1,&key->eword,"invalidnumberafter\',\'");tmp___17=key->eword;(key->eword)--;if(!tmp___17)badfieldspec((charconst*)optarg,"fieldnumberiszero");if((intconst)*s==46)s=parse_field_count(s+1,&key->echar,"invalidnumberafter\'.\'");s=(charconst*)set_ordering(s,key,(enumblanktype)1);if(*s)badfieldspec((charconst*)optarg,"straycharacterinfieldspec");insertkey(key);gotoswitch_break;case_109:mergeonly=(_Bool)1;gotoswitch_break;case_132:specify_nmerge(oi,(char)c,(charconst*)optarg);gotoswitch_break;case_111:if(outfile)tmp___19=strcmp(outfile,(charconst*)optarg);if(!(tmp___19==0))tmp___18=gettext("multipleoutputfilesspecified");error(2,0,(charconst*)tmp___18);outfile=(charconst*)optarg;gotoswitch_break;case_133:if(random_source)tmp___21=strcmp((charconst*)random_source,(charconst*)optarg);if(!(tmp___21==0))tmp___20=gettext("multiplerandomsourcesspecified");error(2,0,(charconst*)tmp___20);random_source=optarg;gotoswitch_break;case_115:stable=(_Bool)1;gotoswitch_break;case_83:specify_sort_size(oi,(char)c,(charconst*)optarg);gotoswitch_break;case_116:newtab=*(optarg+0);if(!newtab)tmp___22=gettext("emptytab");error(2,0,(charconst*)tmp___22);if(*(optarg+1))tmp___25=strcmp((charconst*)optarg,"\\0");if(tmp___25==0)newtab=(char)'\000';elsetmp___23=quote((charconst*)optarg);tmp___24=gettext("multi-charactertab%s");error(2,0,(charconst*)tmp___24,tmp___23);if(tab!=128)if(tab!=(int)newtab)tmp___26=gettext("incompatibletabs");error(2,0,(charconst*)tmp___26);tab=(int)newtab;gotoswitch_break;case_84:add_temp_dir((charconst*)optarg);gotoswitch_break;case_135:nthreads=specify_nthreads(oi,(char)c,(charconst*)optarg);gotoswitch_break;case_117:unique=(_Bool)1;gotoswitch_break;case_121:if((unsignedlong)optarg==(unsignedlong)*(argv+(optind-1)))p=(charconst*)optarg;while(1)if(!((unsignedint)*p-48U<=9U))gotowhile_break___2;goto__Cont;__Cont:p++;while_break___2:optind-=(intconst)*p!=0;gotoswitch_break;case_122:eolchar=(char)0;gotoswitch_break;case_neg_130:usage(0);gotoswitch_break;case_neg_131:version_etc(stdout,"sort","GNUcoreutils",Version,"MikeHaertel","PaulEggert",(char*)((void*)0));exit(0);gotoswitch_break;switch_default:usage(2);switch_break:;while_break___1:;if(files_from)if(nfiles)tmp___27=quote((charconst*)*(files+0));tmp___28=gettext("extraoperand%s");error(0,0,(charconst*)tmp___28,tmp___27);tmp___29=gettext("fileoperandscannotbecombinedwith--files0-from");fprintf(stderr,"%s\n",tmp___29);usage(2);tmp___33=strcmp((charconst*)files_from,"-");if(tmp___33==0)stream=stdin;elsestream=fopen_safer((charconst*)files_from,"r");if((unsignedlong)stream==(unsignedlong)((void*)0))tmp___30=quote((charconst*)files_from);tmp___31=gettext("cannotopen%sforreading");tmp___32=__errno_location();error(2,*tmp___32,(charconst*)tmp___31,tmp___30);readtokens0_init(&tok);tmp___36=readtokens0(stream,&tok);if(tmp___36)tmp___37=rpl_fclose(stream);if(tmp___37!=0)tmp___34=quote((charconst*)files_from);tmp___35=gettext("cannotreadfilenamesfrom%s");error(2,0,(charconst*)tmp___35,tmp___34);elsetmp___34=quote((charconst*)files_from);tmp___35=gettext("cannotreadfilenamesfrom%s");error(2,0,(charconst*)tmp___35,tmp___34);if(tok.n_tok)free((void*)files);files=tok.tok;nfiles=tok.n_tok;i___0=(size_t)0;while(1)if(!(i___0<nfiles))gotowhile_break___3;tmp___42=strcmp((charconst*)*(files+i___0),"-");if(tmp___42==0)tmp___38=quote((charconst*)*(files+i___0));tmp___39=gettext("whenreadingfilenamesfromstdin,nofilenameof%sallowed");error(2,0,(charconst*)tmp___39,tmp___38);elseif((int)*(*(files+i___0)+0)==0)file_number=i___0+1UL;tmp___40=quotearg_colon((charconst*)files_from);tmp___41=gettext("%s:%lu:invalidzero-lengthfilename");error(2,0,(charconst*)tmp___41,tmp___40,file_number);i___0++;while_break___3:;elsetmp___43=quote((charconst*)files_from);tmp___44=gettext("noinputfrom%s");error(2,0,(charconst*)tmp___44,tmp___43);key=keylist;while(1)if(!key)gotowhile_break___4;tmp___45=default_key_compare((structkeyfieldconst*)key);if(tmp___45)if(!key->reverse)key->ignore=gkey.ignore;key->translate=gkey.translate;key->skipsblanks=gkey.skipsblanks;key->skipeblanks=gkey.skipeblanks;key->month=gkey.month;key->numeric=gkey.numeric;key->general_numeric=gkey.general_numeric;key->human_numeric=gkey.human_numeric;key->version=gkey.version;key->random=gkey.random;key->reverse=gkey.reverse;need_random=(_Bool)((int)need_random|(int)key->random);key=key->next;while_break___4:;if(!keylist)tmp___46=default_key_compare((structkeyfieldconst*)(&gkey));if(!tmp___46)gkey_only=(_Bool)1;insertkey(&gkey);need_random=(_Bool)((int)need_random|(int)gkey.random);check_ordering_compatibility();if(debug)if(checkonly)goto_L___2;elseif(outfile)_L___2:if(checkonly)opts[0]=checkonly;elseopts[0]=(char)'o';incompatible_options((charconst*)(opts));if(hard_LC_COLLATE)tmp___47=setlocale(3,(charconst*)((void*)0));tmp___48=quote((charconst*)tmp___47);tmp___49=gettext("using%ssortingrules");error(0,0,(charconst*)tmp___49,tmp___48);elsetmp___50=gettext("usingsimplebytecomparison");error(0,0,(charconst*)tmp___50);key_warnings((structkeyfieldconst*)(&gkey),gkey_only);reverse=gkey.reverse;if(need_random)random_md5_state_init((charconst*)random_source);if(temp_dir_count==0UL)tmp___51=(charconst*)getenv("TMPDIR");tmp_dir=tmp___51;if(tmp_dir)tmp___52=tmp_dir;elsetmp___52="/tmp";add_temp_dir(tmp___52);if(nfiles==0UL)nfiles=(size_t)1;free((void*)files);files=&minus;if(0UL<sort_size)if(sort_size>(unsignedlong)nmerge*(2UL+sizeof(structline)))sort_size=sort_size;elsesort_size=(unsignedlong)nmerge*(2UL+sizeof(structline));if(checkonly)if(nfiles>1UL)tmp___53=quote((charconst*)*(files+1));tmp___54=gettext("extraoperand%snotallowedwith-%c");error(2,0,(charconst*)tmp___54,tmp___53,(int)checkonly);if(outfile)opts___0[0]=checkonly;incompatible_options((charconst*)(opts___0));tmp___57=check((charconst*)*(files+0),checkonly);if(tmp___57)tmp___56=0;elsetmp___56=1;exit(tmp___56);if(mergeonly)tmp___58=(structsortfile*)xcalloc(nfiles,sizeof(*sortfiles));sortfiles=tmp___58;i___1=(size_t)0;while(1)if(!(i___1<nfiles))gotowhile_break___5;(sortfiles+i___1)->name=(charconst*)*(files+i___1);i___1++;while_break___5:merge(sortfiles,(size_t)0,nfiles,outfile);elseif(!nthreads)tmp___59=num_processors((enumnproc_query)2);np=tmp___59;if(np<8UL)nthreads=np;elsenthreads=(size_t)8;nthreads_max=0xffffffffffffffffUL/(2UL*sizeof(structmerge_node));if(nthreads<nthreads_max)nthreads=nthreads;elsenthreads=nthreads_max;sort((char*const*)files,nfiles,outfile,nthreads);if(have_read_stdin)tmp___61=rpl_fclose(stdin);if(tmp___61==-1)tmp___60=gettext("closefailed");die((charconst*)tmp___60,"-");exit(0);