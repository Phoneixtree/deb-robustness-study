13,14c13
< struct _IO_marker
< {
---
> struct _IO_marker {
19,20c18
< struct _IO_FILE
< {
---
> struct _IO_FILE {
51,52c49
< struct stream_type
< {
---
> struct stream_type {
59,60c56
< struct token_stream_type
< {
---
> struct token_stream_type {
64,65c60
< struct token_type
< {
---
> struct token_type {
72c67,68
< extern __attribute__((__nothrow__)) unsigned short const **(__attribute__((__leaf__)) __ctype_b_loc)(void)__attribute__((__const__));
---
> extern __attribute__((__nothrow__)) unsigned short const **(
>     __attribute__((__leaf__)) __ctype_b_loc)(void)__attribute__((__const__));
75,76c71,74
< extern FILE *fopen(char const *__restrict __filename, char const *__restrict __modes);
< extern int fprintf(FILE *__restrict __stream, char const *__restrict __format, ...);
---
> extern FILE *fopen(char const *__restrict __filename,
>                    char const *__restrict __modes);
> extern int fprintf(FILE *__restrict __stream, char const *__restrict __format,
>                    ...);
84,301c82,135
< int default1[60] =
<     {54, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 51, -2, -1,
<      -1, -1, -1, -1,
<      -1, -1, -1, -1,
<      -1, -1, -1, -1,
<      -1, -1, -1, -1,
<      -1, -1, -1, -1,
<      -1, -1, -1, -1,
<      -1, -1, -1, -1,
<      -1, -1, -1, 52,
<      -3, -1, -1, -1,
<      -1, -1, -1, -1};
< int base[60] =
<     {-32, -96, -105, -93,
<      -94, -87, -1, -97,
<      -86, -1, -99, -1,
<      -72, -1, -80, -82,
<      -1, 53, 43, -1,
<      -1, -1, -1, -1,
<      -1, -1, 133, -1,
<      233, -1, -1, 0,
<      -1, -1, -1, -1,
<      -1, -1, -1, -1,
<      -1, -1, -1, -1,
<      -1, -1, -1, -1,
<      -1, -1, -1, 46,
<      40, -1, 251, -1,
<      -1, -1, -1, -1};
< int next[360] =
<     {0, 2, 26, 28,
<      3, 4, 5, 23,
<      19, 20, 6, -1,
<      25, 8, 9, 11,
<      18, 18, 18, 18,
<      18, 18, 18, 18,
<      18, 18, -1, 30,
<      -1, 31, 13, 15,
<      16, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, 21,
<      -1, 22, 32, -1,
<      24, 7, 17, 17,
<      17, 17, 17, 17,
<      17, 12, 17, 17,
<      1, 17, 17, 10,
<      17, 17, 17, 17,
<      17, 17, 17, 17,
<      14, 17, 17, 18,
<      18, 18, 18, 18,
<      18, 18, 18, 18,
<      18, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, -1,
<      -1, 26, 26, 27,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      0, 0, -1, -1,
<      -1, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29,
<      29, 29, 29, 29};
< int check[360] =
<     {0, 1, 0, 0,
<      2, 3, 4, 0,
<      0, 0, 5, -1,
<      0, 7, 8, 10,
<      0, 0, 0, 0,
<      0, 0, 0, 0,
<      0, 0, -1, 0,
<      -1, 0, 12, 14,
<      15, 0, 0, 0,
<      0, 0, 0, 0,
<      0, 0, 0, 0,
<      0, 0, 0, 0,
<      0, 0, 0, 0,
<      0, 0, 0, 0,
<      0, 0, 0, 0,
<      -1, 0, 31, -1,
<      0, 0, 0, 0,
<      0, 0, 0, 0,
<      0, 0, 0, 0,
<      0, 0, 0, 0,
<      0, 0, 0, 0,
<      0, 0, 0, 0,
<      0, 0, 0, 18,
<      18, 18, 18, 18,
<      18, 18, 18, 18,
<      18, 17, 17, 17,
<      17, 17, 17, 17,
<      17, 17, 17, 51,
<      51, 51, 51, 51,
<      51, 51, 51, 51,
<      51, 51, 51, 51,
<      51, 51, 51, 51,
<      51, 51, 51, 51,
<      51, 51, 51, 51,
<      51, 52, 52, 52,
<      52, 52, 52, 52,
<      52, 52, 52, 52,
<      52, 52, 52, 52,
<      52, 52, 52, 52,
<      52, 52, 52, 52,
<      52, 52, 52, -1,
<      -1, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      26, 26, 26, 26,
<      54, 54, -1, -1,
<      -1, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28,
<      28, 28, 28, 28};
< static token numeric_case(token_stream tstream_ptr, token token_ptr, char ch, char *token_str,
<                           int token_ind);
< static token error_or_eof_case(token_stream tstream_ptr, token token_ptr, int cu_state,
<                                char *token_str, int token_ind, char ch);
---
> int default1[60] = {54, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
>                     17, 17, 51, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
>                     -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
>                     -1, -1, -1, -1, -1, -1, 52, -3, -1, -1, -1, -1, -1, -1, -1};
> int base[60] = {-32, -96, -105, -93, -94, -87, -1,  -97, -86, -1, -99, -1,
>                 -72, -1,  -80,  -82, -1,  53,  43,  -1,  -1,  -1, -1,  -1,
>                 -1,  -1,  133,  -1,  233, -1,  -1,  0,   -1,  -1, -1,  -1,
>                 -1,  -1,  -1,   -1,  -1,  -1,  -1,  -1,  -1,  -1, -1,  -1,
>                 -1,  -1,  -1,   46,  40,  -1,  251, -1,  -1,  -1, -1,  -1};
> int next[360] = {
>     0,  2,  26, 28, 3,  4,  5,  23, 19, 20, 6,  -1, 25, 8,  9,  11, 18, 18, 18,
>     18, 18, 18, 18, 18, 18, 18, -1, 30, -1, 31, 13, 15, 16, 17, 17, 17, 17, 17,
>     17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
>     17, 17, 21, -1, 22, 32, -1, 24, 7,  17, 17, 17, 17, 17, 17, 17, 12, 17, 17,
>     1,  17, 17, 10, 17, 17, 17, 17, 17, 17, 17, 17, 14, 17, 17, 18, 18, 18, 18,
>     18, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
>     17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
>     17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
>     17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, -1, -1, 26, 26, 27, 26, 26, 26,
>     26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
>     26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
>     26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
>     26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
>     26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 0,  0,  -1, -1, -1, 29,
>     29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
>     29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
>     29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
>     29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
>     29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29};
> int check[360] = {
>     0,  1,  0,  0,  2,  3,  4,  0,  0,  0,  5,  -1, 0,  7,  8,  10, 0,  0,  0,
>     0,  0,  0,  0,  0,  0,  0,  -1, 0,  -1, 0,  12, 14, 15, 0,  0,  0,  0,  0,
>     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
>     0,  0,  0,  -1, 0,  31, -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
>     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  18, 18, 18, 18,
>     18, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 51, 51, 51,
>     51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51,
>     51, 51, 51, 51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
>     52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, -1, -1, 26, 26, 26, 26, 26, 26,
>     26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
>     26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
>     26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
>     26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
>     26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 54, 54, -1, -1, -1, 28,
>     28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
>     28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
>     28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
>     28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
>     28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28};
> static token numeric_case(token_stream tstream_ptr, token token_ptr, char ch,
>                           char *token_str, int token_ind);
> static token error_or_eof_case(token_stream tstream_ptr, token token_ptr,
>                                int cu_state, char *token_str, int token_ind,
>                                char ch);
311,312c145
< int main(int argc, char **argv)
< {
---
> int main(int argc, char **argv) {
318,327c151,152
<     if (argc > 2)
<     {
<       {
<         fprintf((FILE *__restrict)stdout, (char const *__restrict)"The format is print_tokens filename(optional)\n");
<         exit(1);
<       }
<     }
<     {
<       stream_ptr = open_token_stream(*(argv + 1));
<     }
---
> 
>     { stream_ptr = open_token_stream(*(argv + 1)); }
329,331c154,155
<       while (1)
<       {
<       while_continue: /* CIL Label */;
---
>       while (1) {
>         ;
336,337c160
<         if (tmp)
<         {
---
>         if (tmp) {
340,342c163
<         {
<           print_token(token_ptr);
<         }
---
>         { print_token(token_ptr); }
346,349c167
<     {
<       print_token(token_ptr);
<       exit(0);
<     }
---
>     { print_token(token_ptr); }
353,354c171
< character_stream open_character_stream(string FILENAME)
< {
---
> character_stream open_character_stream(string FILENAME) {
357d173
<   FILE *tmp___0;
363,383d178
<       stream_ptr->stream_ind = 5;
<       stream_ptr->stream[5] = (char)'\000';
<     }
<     if ((unsigned long)FILENAME == (unsigned long)((void *)0))
<     {
<       stream_ptr->fp = stdin;
<     }
<     else
<     {
<       {
<         tmp___0 = fopen((char const *__restrict)FILENAME, (char const *__restrict)"r");
<         stream_ptr->fp = tmp___0;
<       }
<       if ((unsigned long)tmp___0 == (unsigned long)((void *)0))
<       {
<         {
<           fprintf((FILE *__restrict)stdout, (char const *__restrict)"The file %s doesn\'t exists\n",
<                   FILENAME);
<           exit(0);
<         }
<       }
384a180,182
> 
>     { stream_ptr->fp = stdin; }
> 
388,389c186
< CHARACTER get_char(character_stream stream_ptr)
< {
---
> CHARACTER get_char(character_stream stream_ptr) {
394,395c191
<     if ((int)stream_ptr->stream[stream_ptr->stream_ind] == 0)
<     {
---
>     if ((int)stream_ptr->stream[stream_ptr->stream_ind] == 0) {
397c193,194
<         tmp = fgets((char *__restrict)(stream_ptr->stream + 5), 75, (FILE *__restrict)stream_ptr->fp);
---
>         tmp = fgets((char *__restrict)(stream_ptr->stream + 5), 75,
>                     (FILE * __restrict) stream_ptr->fp);
399,400c196
<       if ((unsigned long)tmp == (unsigned long)((void *)0))
<       {
---
>       if ((unsigned long)tmp == (unsigned long)((void *)0)) {
410,411c206
< BOOLEAN is_end_of_character_stream(character_stream stream_ptr)
< {
---
> BOOLEAN is_end_of_character_stream(character_stream stream_ptr) {
413,421c208,210
<   {
<     if ((int)stream_ptr->stream[stream_ptr->stream_ind - 1] == -1)
<     {
<       return (1);
<     }
<     else
<     {
<       return (0);
<     }
---
>   if ((int)stream_ptr->stream[stream_ptr->stream_ind - 1] == -1) {
>     return (1);
>   } else {
424,425c213
< void unget_char(CHARACTER ch, character_stream stream_ptr)
< {
---
> void unget_char(CHARACTER ch, character_stream stream_ptr) {
427,438c215
<   {
<     if (stream_ptr->stream_ind == 0)
<     {
<       return;
<     }
<     else
<     {
<       (stream_ptr->stream_ind)--;
<       stream_ptr->stream[stream_ptr->stream_ind] = ch;
<     }
<     return;
<   }
---
>   (stream_ptr->stream_ind)--;
440,441c217
< token_stream open_token_stream(string FILENAME)
< {
---
> token_stream open_token_stream(string FILENAME) {
455,456c231
< token get_token(token_stream tstream_ptr)
< {
---
> token get_token(token_stream tstream_ptr) {
468d242
<   int tmp___3;
480,496c254,256
<       while (1)
<       {
<       while_continue: /* CIL Label */;
<         if (!(!token_found))
<         {
<           goto while_break;
<         }
<         if (token_ind < 80)
<         {
<           {
<             tmp___0 = token_ind;
<             token_ind++;
<             token_str[tmp___0] = ch;
<             next_st = next_state(cu_state, (char)((int)ch));
<           }
<         }
<         else
---
>       while (1) {
>         ;
> 
498c258,262
<           next_st = -1;
---
> 
>           tmp___0 = token_ind;
>           token_ind++;
>           token_str[tmp___0] = ch;
>           next_st = next_state(cu_state, (char)((int)ch));
500,501c264,265
<         if (next_st == -1)
<         {
---
> 
>         if (next_st == -1) {
503,504c267,268
<             tmp___1 = error_or_eof_case(tstream_ptr, token_ptr, cu_state, token_str, token_ind,
<                                         (char)((int)ch));
---
>             tmp___1 = error_or_eof_case(tstream_ptr, token_ptr, cu_state,
>                                         token_str, token_ind, (char)((int)ch));
507,511c271,272
<         }
<         else
<         { //Added block
<           if (next_st == -2)
<           {
---
>         } else { // Added block
>           if (next_st == -2) {
513,514c274,275
<               tmp___2 = numeric_case(tstream_ptr, token_ptr, (char)((int)ch), token_str,
<                                      token_ind);
---
>               tmp___2 = numeric_case(tstream_ptr, token_ptr, (char)((int)ch),
>                                      token_str, token_ind);
517,521c278,279
<           }
<           else
<           { //Added block
<             if (next_st == -3)
<             {
---
>           } else { // Added block
>             if (next_st == -3) {
534,551c292,293
<           if (next_st == 6)
<           {
<             goto case_6;
<           }
<           if (next_st == 9)
<           {
<             goto case_6;
<           }
<           if (next_st == 11)
<           {
<             goto case_6;
<           }
<           if (next_st == 13)
<           {
<             goto case_6;
<           }
<           if (next_st == 16)
<           {
---
> 
>           if (next_st == 16) {
554,567c296
<           if (next_st == 19)
<           {
<             goto case_19;
<           }
<           if (next_st == 20)
<           {
<             goto case_19;
<           }
<           if (next_st == 21)
<           {
<             goto case_19;
<           }
<           if (next_st == 22)
<           {
---
>           if (next_st == 19) {
570,571c299,300
<           if (next_st == 23)
<           {
---
> 
>           if (next_st == 21) {
574,575c303
<           if (next_st == 24)
<           {
---
>           if (next_st == 22) {
578,579c306
<           if (next_st == 25)
<           {
---
>           if (next_st == 23) {
582,583c309
<           if (next_st == 32)
<           {
---
>           if (next_st == 24) {
586,587c312,313
<           if (next_st == 27)
<           {
---
> 
>           if (next_st == 27) {
590,591c316
<           if (next_st == 29)
<           {
---
>           if (next_st == 29) {
594,595c319
<           if (next_st == 30)
<           {
---
>           if (next_st == 30) {
598,621c322
<           goto switch_default;
<         switch_default: /* CIL Label */
<           goto switch_break;
<         case_6:  /* CIL Label */
<         case_9:  /* CIL Label */
<         case_11: /* CIL Label */
<         case_13: /* CIL Label */
<         case_16: /* CIL Label */
<         {
<           ch = get_char(tstream_ptr->ch_stream);
<           tmp___3 = check_delimiter((char)((int)ch));
<         }
<           if (tmp___3 == 1)
<           {
<             {
<               token_ptr->token_id = keyword(next_st);
<               unget_char(ch, tstream_ptr->ch_stream);
<               token_ptr->token_string[0] = (char)'\000';
<             }
<             return (token_ptr);
<           }
<           {
<             unget_char(ch, tstream_ptr->ch_stream);
<           }
---
> 
623,637c324,333
<         case_19: /* CIL Label */
<         case_20: /* CIL Label */
<         case_21: /* CIL Label */
<         case_22: /* CIL Label */
<         case_23: /* CIL Label */
<         case_24: /* CIL Label */
<         case_25: /* CIL Label */
<         case_32: /* CIL Label */
<         {
<           token_ptr->token_id = special(next_st);
<           token_ptr->token_string[0] = (char)'\000';
<         }
<           return (token_ptr);
<         case_27: /* CIL Label */
<         case_29: /* CIL Label */
---
>         case_6 : /* CIL Label */
> 
>         {}
> 
>         case_19 : /* CIL Label */
> 
>         {}
> 
>         case_27 : /* CIL Label */
> 
644c340
<         case_30: /* CIL Label */
---
>         case_30 : /* CIL Label */
647,648d342
<           next_st = 0;
<           token_ind = next_st;
650c344
<           goto switch_break;
---
> 
657,658c351
<       }
<     while_break: /* CIL Label */;
---
>       };
660d352
<     return ((struct token_type *)0);
663,665c355,356
< static token numeric_case(token_stream tstream_ptr, token token_ptr, char ch, char *token_str,
<                           int token_ind)
< {
---
> static token numeric_case(token_stream tstream_ptr, token token_ptr, char ch,
>                           char *token_str, int token_ind) {
671,675c362,363
<     {
<       tmp___1 = check_delimiter((char)((int)ch));
<     }
<     if (tmp___1 != 1)
<     {
---
>     { tmp___1 = check_delimiter((char)((int)ch)); }
>     if (tmp___1 != 1) {
678,689c366,369
<         while (1)
<         {
<         while_continue: /* CIL Label */;
<           {
<             tmp___0 = check_delimiter((char)((int)ch));
<           }
<           if (!(tmp___0 == 0))
<           {
<             goto while_break;
<           }
<           if (token_ind >= 80)
<           {
---
>         while (1) {
>           ;
>           { tmp___0 = check_delimiter((char)((int)ch)); }
>           if (!(tmp___0 == 0)) {
691a372
> 
719,721c400,402
< static token error_or_eof_case(token_stream tstream_ptr, token token_ptr, int cu_state,
<                                char *token_str, int token_ind, char ch)
< {
---
> static token error_or_eof_case(token_stream tstream_ptr, token token_ptr,
>                                int cu_state, char *token_str, int token_ind,
>                                char ch) {
725,731c406,408
<     {
<       tmp = is_end_of_character_stream(tstream_ptr->ch_stream);
<     }
<     if (tmp)
<     {
<       token_ptr->token_id = 0;
<       token_ptr->token_string[0] = (char)'\000';
---
>     { tmp = is_end_of_character_stream(tstream_ptr->ch_stream); }
>     if (tmp) {
> 
734,739c411,414
<     if (cu_state != 0)
<     {
<       {
<         unget_char(ch, tstream_ptr->ch_stream);
<         token_ind--;
<       }
---
>     if (cu_state != 0) {
> 
>       unget_char(ch, tstream_ptr->ch_stream);
>       token_ind--;
749,750c424
< static int check_delimiter(char ch)
< {
---
> static int check_delimiter(char ch) {
752d425
<   unsigned short const **tmp___0;
755,772c428,429
<     {
<       tmp = __ctype_b_loc();
<     }
<     if (!((int const) * (*tmp + (int)ch) & 1024))
<     {
<       {
<         tmp___0 = __ctype_b_loc();
<       }
<       if (!((int const) * (*tmp___0 + (int)ch) & 2048))
<       {
<         return (1);
<       }
<     }
<     return (0);
<   }
< }
< static int keyword(int state)
< {
---
>     { tmp = __ctype_b_loc(); }
>     if (!((int const) * (*tmp + (int)ch) & 1024)) {
774,815c431
<   {
<     {
<       if (state == 6)
<       {
<         goto case_6;
<       }
<       if (state == 9)
<       {
<         goto case_9;
<       }
<       if (state == 11)
<       {
<         goto case_11;
<       }
<       if (state == 13)
<       {
<         goto case_13;
<       }
<       if (state == 16)
<       {
<         goto case_16;
<       }
<       goto switch_default;
<     case_6: /* CIL Label */
<       return (6);
<     case_9: /* CIL Label */
<       return (9);
<     case_11: /* CIL Label */
<       return (11);
<     case_13: /* CIL Label */
<       return (13);
<     case_16: /* CIL Label */
<       return (16);
<     switch_default: /* CIL Label */
<     {
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"error\n");
<     }
<       goto switch_break;
<     switch_break: /* CIL Label */;
<     }
<     {
<       exit(0);
---
>       return (1);
819,820d434
< static int special(int state)
< {
822,886c436
<   {
<     {
<       if (state == 19)
<       {
<         goto case_19;
<       }
<       if (state == 20)
<       {
<         goto case_20;
<       }
<       if (state == 21)
<       {
<         goto case_21;
<       }
<       if (state == 22)
<       {
<         goto case_22;
<       }
<       if (state == 23)
<       {
<         goto case_23;
<       }
<       if (state == 24)
<       {
<         goto case_24;
<       }
<       if (state == 25)
<       {
<         goto case_25;
<       }
<       if (state == 32)
<       {
<         goto case_32;
<       }
<       goto switch_default;
<     case_19: /* CIL Label */
<       return (19);
<     case_20: /* CIL Label */
<       return (20);
<     case_21: /* CIL Label */
<       return (21);
<     case_22: /* CIL Label */
<       return (22);
<     case_23: /* CIL Label */
<       return (23);
<     case_24: /* CIL Label */
<       return (24);
<     case_25: /* CIL Label */
<       return (25);
<     case_32: /* CIL Label */
<       return (32);
<     switch_default: /* CIL Label */
<     {
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"error\n");
<     }
<       goto switch_break;
<     switch_break: /* CIL Label */;
<     }
<     {
<       exit(0);
<     }
<   }
< }
< static void skip(character_stream stream_ptr)
< {
---
> static void skip(character_stream stream_ptr) {
891,892c441,445
<     {
<       while (1)
---
> 
>     while (1) {
>       ;
>       { c = get_char(stream_ptr); }
> 
894,909c447,448
<       while_continue: /* CIL Label */;
<         {
<           c = get_char(stream_ptr);
<         }
<         if ((int)c != 10)
<         {
<           {
<             tmp = is_end_of_character_stream(stream_ptr);
<           }
<           if (tmp)
<           {
<             goto while_break;
<           }
<         }
<         else
<         {
---
>         { tmp = is_end_of_character_stream(stream_ptr); }
>         if (tmp) {
913d451
<     while_break: /* CIL Label */;
915,921c453
<     if ((int)c == -1)
<     {
<       {
<         unget_char(c, stream_ptr);
<       }
<     }
<     return;
---
>   while_break: /* CIL Label */;
924,925c456
< static int constant(int state, char *token_str, int token_ind)
< {
---
> static int constant(int state, char *token_str, int token_ind) {
927,947c458,459
<   {
<     {
<       if (state == 27)
<       {
<         goto case_27;
<       }
<       if (state == 29)
<       {
<         goto case_29;
<       }
<       goto switch_default;
<     case_27: /* CIL Label */
<       return (27);
<     case_29: /* CIL Label */
<       *(token_str + (token_ind - 2)) = (char)' ';
<       return (29);
<     switch_default: /* CIL Label */
<       goto switch_break;
<     switch_break: /* CIL Label */;
<     }
<     return (0);
---
>   if (state == 29) {
>     goto case_29;
948a461,468
>   goto switch_default;
> 
> case_29: /* CIL Label */
>   *(token_str + (token_ind - 2)) = (char)' ';
>   return (29);
> switch_default: /* CIL Label */
>   goto switch_break;
> switch_break: /* CIL Label */;
950,951c470
< static int next_state(int state, char ch)
< {
---
> static int next_state(int state, char ch) {
953d471
<   int tmp___0;
956,957c474
<     if (state < 0)
<     {
---
>     if (state < 0) {
960c477
<     if (base[state] + (int)ch >= 0)
---
> 
962,963c479
<       if (check[base[state] + (int)ch] == state)
<       {
---
>       if (check[base[state] + (int)ch] == state) {
965,970c481,482
<       }
<       else
<       {
<         {
<           tmp = next_state(default1[state], ch);
<         }
---
>       } else {
>         { tmp = next_state(default1[state], ch); }
974,980d485
<     else
<     {
<       {
<         tmp___0 = next_state(default1[state], ch);
<       }
<       return (tmp___0);
<     }
983,984c488
< BOOLEAN is_eof_token(token t)
< {
---
> BOOLEAN is_eof_token(token t) {
986,991c490,491
<   {
<     if (t->token_id == 0)
<     {
<       return (1);
<     }
<     return (0);
---
>   if (t->token_id == 0) {
>     return (1);
994,995c494,531
< BOOLEAN print_token(token token_ptr)
< {
---
> BOOLEAN print_token(token token_ptr) {
> 
>   if (token_ptr->token_id == 0) {
>     goto case_0;
>   }
> 
>   if (token_ptr->token_id == 16) {
>     goto case_16;
>   }
>   if (token_ptr->token_id == 17) {
>     goto case_17;
>   }
>   if (token_ptr->token_id == 18) {
>     goto case_18;
>   }
>   if (token_ptr->token_id == 19) {
>     goto case_19;
>   }
> 
>   if (token_ptr->token_id == 21) {
>     goto case_21;
>   }
>   if (token_ptr->token_id == 22) {
>     goto case_22;
>   }
>   if (token_ptr->token_id == 23) {
>     goto case_23;
>   }
>   if (token_ptr->token_id == 24) {
>     goto case_24;
>   }
> 
>   if (token_ptr->token_id == 27) {
>     goto case_27;
>   }
>   if (token_ptr->token_id == 29) {
>     goto case_29;
>   }
998,1185c534,537
<     {
<       if (token_ptr->token_id == -1)
<       {
<         goto case_neg_1;
<       }
<       if (token_ptr->token_id == 0)
<       {
<         goto case_0;
<       }
<       if (token_ptr->token_id == 6)
<       {
<         goto case_6;
<       }
<       if (token_ptr->token_id == 9)
<       {
<         goto case_9;
<       }
<       if (token_ptr->token_id == 11)
<       {
<         goto case_11;
<       }
<       if (token_ptr->token_id == 13)
<       {
<         goto case_13;
<       }
<       if (token_ptr->token_id == 16)
<       {
<         goto case_16;
<       }
<       if (token_ptr->token_id == 17)
<       {
<         goto case_17;
<       }
<       if (token_ptr->token_id == 18)
<       {
<         goto case_18;
<       }
<       if (token_ptr->token_id == 19)
<       {
<         goto case_19;
<       }
<       if (token_ptr->token_id == 20)
<       {
<         goto case_20;
<       }
<       if (token_ptr->token_id == 21)
<       {
<         goto case_21;
<       }
<       if (token_ptr->token_id == 22)
<       {
<         goto case_22;
<       }
<       if (token_ptr->token_id == 23)
<       {
<         goto case_23;
<       }
<       if (token_ptr->token_id == 24)
<       {
<         goto case_24;
<       }
<       if (token_ptr->token_id == 25)
<       {
<         goto case_25;
<       }
<       if (token_ptr->token_id == 27)
<       {
<         goto case_27;
<       }
<       if (token_ptr->token_id == 29)
<       {
<         goto case_29;
<       }
<       if (token_ptr->token_id == 32)
<       {
<         goto case_32;
<       }
<       goto switch_default;
<     case_neg_1: /* CIL Label */
<     {
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"error,\t\"");
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"%s", token_ptr->token_string);
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"\".\n");
<     }
<       return (1);
<     case_0: /* CIL Label */
<     {
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"eof.\n");
<     }
<       return (1);
<     case_6: /* CIL Label */
<     {
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"keyword,\t\"lambda\".\n");
<     }
<       return (1);
<     case_9: /* CIL Label */
<     {
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"keyword,\t\"and\".\n");
<     }
<       return (1);
<     case_11: /* CIL Label */
<     {
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"keyword,\t\"or\".\n");
<     }
<       return (1);
<     case_13: /* CIL Label */
<     {
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"keyword,\t\"if\".\n");
<     }
<       return (1);
<     case_16: /* CIL Label */
<     {
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"keyword,\t\"xor\".\n");
<     }
<       return (1);
<     case_17: /* CIL Label */
<     {
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"identifier,\t\"");
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"%s", token_ptr->token_string);
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"\".\n");
<     }
<       return (1);
<     case_18: /* CIL Label */
<     {
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"numeric,\t");
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"%s", token_ptr->token_string);
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)".\n");
<     }
<       return (1);
<     case_19: /* CIL Label */
<     {
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"lparen.\n");
<     }
<       return (1);
<     case_20: /* CIL Label */
<     {
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"rparen.\n");
<     }
<       return (1);
<     case_21: /* CIL Label */
<     {
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"lsquare.\n");
<     }
<       return (1);
<     case_22: /* CIL Label */
<     {
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"rsquare.\n");
<     }
<       return (1);
<     case_23: /* CIL Label */
<     {
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"quote.\n");
<     }
<       return (1);
<     case_24: /* CIL Label */
<     {
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"bquote.\n");
<     }
<       return (1);
<     case_25: /* CIL Label */
<     {
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"comma.\n");
<     }
<       return (1);
<     case_27: /* CIL Label */
<     {
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"string,\t");
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"%s", token_ptr->token_string);
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)".\n");
<     }
<       return (1);
<     case_29: /* CIL Label */
<     {
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"character,\t\"");
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"%s", token_ptr->token_string);
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"\".\n");
<     }
<       return (1);
<     case_32: /* CIL Label */
<     {
<       fprintf((FILE *__restrict)stdout, (char const *__restrict)"keyword,\t\"=>\".\n");
<     }
<       return (1);
<     switch_default: /* CIL Label */
<       goto switch_break;
<     switch_break: /* CIL Label */;
<     }
<     return (0);
---
>     fprintf((FILE * __restrict) stdout, (char const *__restrict) "error,\t\"");
>     fprintf((FILE * __restrict) stdout, (char const *__restrict) "%s",
>             token_ptr->token_string);
>     fprintf((FILE * __restrict) stdout, (char const *__restrict) "\".\n");
1186a539,542
>   return (1);
> case_0 : /* CIL Label */
> {
>   fprintf((FILE * __restrict) stdout, (char const *__restrict) "eof.\n");
1188c544,590
< static void get_actual_token(char *token_str, int token_ind)
---
> 
>   return (1);
> case_16 : /* CIL Label */
> {
>   fprintf((FILE * __restrict) stdout,
>           (char const *__restrict) "keyword,\t\"xor\".\n");
> }
>   return (1);
> case_17 : /* CIL Label */
> {
>   fprintf((FILE * __restrict) stdout,
>           (char const *__restrict) "identifier,\t\"");
>   fprintf((FILE * __restrict) stdout, (char const *__restrict) "%s",
>           token_ptr->token_string);
>   fprintf((FILE * __restrict) stdout, (char const *__restrict) "\".\n");
> }
>   return (1);
> case_18 : /* CIL Label */
> {
>   fprintf((FILE * __restrict) stdout, (char const *__restrict) "numeric,\t");
>   fprintf((FILE * __restrict) stdout, (char const *__restrict) "%s",
>           token_ptr->token_string);
>   fprintf((FILE * __restrict) stdout, (char const *__restrict) ".\n");
> }
>   return (1);
> case_19 : /* CIL Label */
> {
>   fprintf((FILE * __restrict) stdout, (char const *__restrict) "lparen.\n");
> }
>   return (1);
> 
> case_21 : /* CIL Label */
> {
>   fprintf((FILE * __restrict) stdout, (char const *__restrict) "lsquare.\n");
> }
>   return (1);
> case_22 : /* CIL Label */
> {
>   fprintf((FILE * __restrict) stdout, (char const *__restrict) "rsquare.\n");
> }
>   return (1);
> case_23 : /* CIL Label */
> {
>   fprintf((FILE * __restrict) stdout, (char const *__restrict) "quote.\n");
> }
>   return (1);
> case_24 : /* CIL Label */
1189a592,613
>   fprintf((FILE * __restrict) stdout, (char const *__restrict) "bquote.\n");
> }
>   return (1);
> 
> case_27 : /* CIL Label */
> {
>   fprintf((FILE * __restrict) stdout, (char const *__restrict) "string,\t");
>   fprintf((FILE * __restrict) stdout, (char const *__restrict) "%s",
>           token_ptr->token_string);
>   fprintf((FILE * __restrict) stdout, (char const *__restrict) ".\n");
> }
>   return (1);
> case_29 : /* CIL Label */
> {
>   fprintf((FILE * __restrict) stdout,
>           (char const *__restrict) "character,\t\"");
>   fprintf((FILE * __restrict) stdout, (char const *__restrict) "%s",
>           token_ptr->token_string);
>   fprintf((FILE * __restrict) stdout, (char const *__restrict) "\".\n");
> }
> }
> static void get_actual_token(char *token_str, int token_ind) {
1192c616
<   unsigned short const **tmp;
---
> 
1197,1218c621
<     {
<       while (1)
<       {
<       while_continue: /* CIL Label */;
<         if (ind > 0)
<         {
<           {
<             tmp = __ctype_b_loc();
<           }
<           if (!((int const) * (*tmp + (int)*(token_str + (ind - 1))) & 8192))
<           {
<             goto while_break;
<           }
<         }
<         else
<         {
<           goto while_break;
<         }
<         ind--;
<       }
<     while_break: /* CIL Label */;
<     }
---
> 
1220c623
<     token_ind = ind;
---
> 
1223,1234c626,630
<       while (1)
<       {
<       while_continue___0: /* CIL Label */;
<         if (!(ind < token_ind))
<         {
<           goto while_break___0;
<         }
<         {
<           tmp___0 = __ctype_b_loc();
<         }
<         if (!((int const) * (*tmp___0 + (int)*(token_str + ind)) & 8192))
<         {
---
>       while (1) {
>         ;
> 
>         { tmp___0 = __ctype_b_loc(); }
>         if (!((int const) * (*tmp___0 + (int)*(token_str + ind)) & 8192)) {
1243,1247c639,641
<       while (1)
<       {
<       while_continue___1: /* CIL Label */;
<         if (!(ind <= token_ind))
<         {
---
>       while (1) {
>         ;
>         if (!(ind <= token_ind)) {
1256d649
<     return;
